

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 14 14:18:59 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F15213
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43     0000                     
    44                           ; Version 2.30
    45                           ; Generated 15/09/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F15213 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79     0000                     	;# 
    80     0001                     	;# 
    81     0002                     	;# 
    82     0003                     	;# 
    83     0004                     	;# 
    84     0005                     	;# 
    85     0006                     	;# 
    86     0007                     	;# 
    87     0008                     	;# 
    88     0009                     	;# 
    89     000A                     	;# 
    90     000B                     	;# 
    91     000C                     	;# 
    92     0012                     	;# 
    93     0018                     	;# 
    94     009A                     	;# 
    95     009B                     	;# 
    96     009B                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     0119                     	;# 
   102     011A                     	;# 
   103     011B                     	;# 
   104     011B                     	;# 
   105     011C                     	;# 
   106     011D                     	;# 
   107     011E                     	;# 
   108     011F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     018E                     	;# 
   112     018F                     	;# 
   113     0190                     	;# 
   114     0191                     	;# 
   115     0192                     	;# 
   116     020C                     	;# 
   117     020D                     	;# 
   118     020E                     	;# 
   119     020E                     	;# 
   120     020F                     	;# 
   121     020F                     	;# 
   122     0210                     	;# 
   123     0210                     	;# 
   124     0211                     	;# 
   125     0211                     	;# 
   126     028C                     	;# 
   127     028C                     	;# 
   128     028D                     	;# 
   129     028D                     	;# 
   130     028E                     	;# 
   131     028F                     	;# 
   132     0290                     	;# 
   133     0291                     	;# 
   134     030C                     	;# 
   135     030C                     	;# 
   136     030D                     	;# 
   137     030E                     	;# 
   138     030F                     	;# 
   139     0310                     	;# 
   140     0310                     	;# 
   141     0311                     	;# 
   142     0312                     	;# 
   143     0313                     	;# 
   144     0314                     	;# 
   145     0314                     	;# 
   146     0315                     	;# 
   147     0316                     	;# 
   148     0318                     	;# 
   149     0318                     	;# 
   150     0319                     	;# 
   151     031A                     	;# 
   152     059C                     	;# 
   153     059C                     	;# 
   154     059D                     	;# 
   155     059D                     	;# 
   156     059E                     	;# 
   157     059F                     	;# 
   158     070C                     	;# 
   159     070D                     	;# 
   160     070E                     	;# 
   161     0716                     	;# 
   162     0717                     	;# 
   163     0718                     	;# 
   164     080C                     	;# 
   165     0811                     	;# 
   166     0813                     	;# 
   167     0814                     	;# 
   168     081A                     	;# 
   169     081A                     	;# 
   170     081B                     	;# 
   171     081C                     	;# 
   172     081C                     	;# 
   173     081D                     	;# 
   174     081E                     	;# 
   175     081F                     	;# 
   176     088E                     	;# 
   177     0890                     	;# 
   178     0891                     	;# 
   179     0892                     	;# 
   180     0893                     	;# 
   181     090C                     	;# 
   182     1E8F                     	;# 
   183     1E90                     	;# 
   184     1E91                     	;# 
   185     1E92                     	;# 
   186     1E93                     	;# 
   187     1E9C                     	;# 
   188     1EA1                     	;# 
   189     1EA2                     	;# 
   190     1EC3                     	;# 
   191     1EC5                     	;# 
   192     1EC6                     	;# 
   193     1EC7                     	;# 
   194     1ECB                     	;# 
   195     1ECB                     	;# 
   196     1ECB                     	;# 
   197     1ECC                     	;# 
   198     1ECC                     	;# 
   199     1ECC                     	;# 
   200     1F10                     	;# 
   201     1F11                     	;# 
   202     1F12                     	;# 
   203     1F14                     	;# 
   204     1F15                     	;# 
   205     1F38                     	;# 
   206     1F39                     	;# 
   207     1F3A                     	;# 
   208     1F3B                     	;# 
   209     1F3C                     	;# 
   210     1F3D                     	;# 
   211     1F3E                     	;# 
   212     1F3F                     	;# 
   213     1FE4                     	;# 
   214     1FE5                     	;# 
   215     1FE6                     	;# 
   216     1FE7                     	;# 
   217     1FE8                     	;# 
   218     1FE8                     	;# 
   219     1FE9                     	;# 
   220     1FEA                     	;# 
   221     1FEB                     	;# 
   222     1FED                     	;# 
   223     1FEE                     	;# 
   224     1FEF                     	;# 
   225     0000                     	;# 
   226     0001                     	;# 
   227     0002                     	;# 
   228     0003                     	;# 
   229     0004                     	;# 
   230     0005                     	;# 
   231     0006                     	;# 
   232     0007                     	;# 
   233     0008                     	;# 
   234     0009                     	;# 
   235     000A                     	;# 
   236     000B                     	;# 
   237     000C                     	;# 
   238     0012                     	;# 
   239     0018                     	;# 
   240     009A                     	;# 
   241     009B                     	;# 
   242     009B                     	;# 
   243     009C                     	;# 
   244     009D                     	;# 
   245     009E                     	;# 
   246     009F                     	;# 
   247     0119                     	;# 
   248     011A                     	;# 
   249     011B                     	;# 
   250     011B                     	;# 
   251     011C                     	;# 
   252     011D                     	;# 
   253     011E                     	;# 
   254     011F                     	;# 
   255     018C                     	;# 
   256     018D                     	;# 
   257     018E                     	;# 
   258     018F                     	;# 
   259     0190                     	;# 
   260     0191                     	;# 
   261     0192                     	;# 
   262     020C                     	;# 
   263     020D                     	;# 
   264     020E                     	;# 
   265     020E                     	;# 
   266     020F                     	;# 
   267     020F                     	;# 
   268     0210                     	;# 
   269     0210                     	;# 
   270     0211                     	;# 
   271     0211                     	;# 
   272     028C                     	;# 
   273     028C                     	;# 
   274     028D                     	;# 
   275     028D                     	;# 
   276     028E                     	;# 
   277     028F                     	;# 
   278     0290                     	;# 
   279     0291                     	;# 
   280     030C                     	;# 
   281     030C                     	;# 
   282     030D                     	;# 
   283     030E                     	;# 
   284     030F                     	;# 
   285     0310                     	;# 
   286     0310                     	;# 
   287     0311                     	;# 
   288     0312                     	;# 
   289     0313                     	;# 
   290     0314                     	;# 
   291     0314                     	;# 
   292     0315                     	;# 
   293     0316                     	;# 
   294     0318                     	;# 
   295     0318                     	;# 
   296     0319                     	;# 
   297     031A                     	;# 
   298     059C                     	;# 
   299     059C                     	;# 
   300     059D                     	;# 
   301     059D                     	;# 
   302     059E                     	;# 
   303     059F                     	;# 
   304     070C                     	;# 
   305     070D                     	;# 
   306     070E                     	;# 
   307     0716                     	;# 
   308     0717                     	;# 
   309     0718                     	;# 
   310     080C                     	;# 
   311     0811                     	;# 
   312     0813                     	;# 
   313     0814                     	;# 
   314     081A                     	;# 
   315     081A                     	;# 
   316     081B                     	;# 
   317     081C                     	;# 
   318     081C                     	;# 
   319     081D                     	;# 
   320     081E                     	;# 
   321     081F                     	;# 
   322     088E                     	;# 
   323     0890                     	;# 
   324     0891                     	;# 
   325     0892                     	;# 
   326     0893                     	;# 
   327     090C                     	;# 
   328     1E8F                     	;# 
   329     1E90                     	;# 
   330     1E91                     	;# 
   331     1E92                     	;# 
   332     1E93                     	;# 
   333     1E9C                     	;# 
   334     1EA1                     	;# 
   335     1EA2                     	;# 
   336     1EC3                     	;# 
   337     1EC5                     	;# 
   338     1EC6                     	;# 
   339     1EC7                     	;# 
   340     1ECB                     	;# 
   341     1ECB                     	;# 
   342     1ECB                     	;# 
   343     1ECC                     	;# 
   344     1ECC                     	;# 
   345     1ECC                     	;# 
   346     1F10                     	;# 
   347     1F11                     	;# 
   348     1F12                     	;# 
   349     1F14                     	;# 
   350     1F15                     	;# 
   351     1F38                     	;# 
   352     1F39                     	;# 
   353     1F3A                     	;# 
   354     1F3B                     	;# 
   355     1F3C                     	;# 
   356     1F3D                     	;# 
   357     1F3E                     	;# 
   358     1F3F                     	;# 
   359     1FE4                     	;# 
   360     1FE5                     	;# 
   361     1FE6                     	;# 
   362     1FE7                     	;# 
   363     1FE8                     	;# 
   364     1FE8                     	;# 
   365     1FE9                     	;# 
   366     1FEA                     	;# 
   367     1FEB                     	;# 
   368     1FED                     	;# 
   369     1FEE                     	;# 
   370     1FEF                     	;# 
   371     0000                     	;# 
   372     0001                     	;# 
   373     0002                     	;# 
   374     0003                     	;# 
   375     0004                     	;# 
   376     0005                     	;# 
   377     0006                     	;# 
   378     0007                     	;# 
   379     0008                     	;# 
   380     0009                     	;# 
   381     000A                     	;# 
   382     000B                     	;# 
   383     000C                     	;# 
   384     0012                     	;# 
   385     0018                     	;# 
   386     009A                     	;# 
   387     009B                     	;# 
   388     009B                     	;# 
   389     009C                     	;# 
   390     009D                     	;# 
   391     009E                     	;# 
   392     009F                     	;# 
   393     0119                     	;# 
   394     011A                     	;# 
   395     011B                     	;# 
   396     011B                     	;# 
   397     011C                     	;# 
   398     011D                     	;# 
   399     011E                     	;# 
   400     011F                     	;# 
   401     018C                     	;# 
   402     018D                     	;# 
   403     018E                     	;# 
   404     018F                     	;# 
   405     0190                     	;# 
   406     0191                     	;# 
   407     0192                     	;# 
   408     020C                     	;# 
   409     020D                     	;# 
   410     020E                     	;# 
   411     020E                     	;# 
   412     020F                     	;# 
   413     020F                     	;# 
   414     0210                     	;# 
   415     0210                     	;# 
   416     0211                     	;# 
   417     0211                     	;# 
   418     028C                     	;# 
   419     028C                     	;# 
   420     028D                     	;# 
   421     028D                     	;# 
   422     028E                     	;# 
   423     028F                     	;# 
   424     0290                     	;# 
   425     0291                     	;# 
   426     030C                     	;# 
   427     030C                     	;# 
   428     030D                     	;# 
   429     030E                     	;# 
   430     030F                     	;# 
   431     0310                     	;# 
   432     0310                     	;# 
   433     0311                     	;# 
   434     0312                     	;# 
   435     0313                     	;# 
   436     0314                     	;# 
   437     0314                     	;# 
   438     0315                     	;# 
   439     0316                     	;# 
   440     0318                     	;# 
   441     0318                     	;# 
   442     0319                     	;# 
   443     031A                     	;# 
   444     059C                     	;# 
   445     059C                     	;# 
   446     059D                     	;# 
   447     059D                     	;# 
   448     059E                     	;# 
   449     059F                     	;# 
   450     070C                     	;# 
   451     070D                     	;# 
   452     070E                     	;# 
   453     0716                     	;# 
   454     0717                     	;# 
   455     0718                     	;# 
   456     080C                     	;# 
   457     0811                     	;# 
   458     0813                     	;# 
   459     0814                     	;# 
   460     081A                     	;# 
   461     081A                     	;# 
   462     081B                     	;# 
   463     081C                     	;# 
   464     081C                     	;# 
   465     081D                     	;# 
   466     081E                     	;# 
   467     081F                     	;# 
   468     088E                     	;# 
   469     0890                     	;# 
   470     0891                     	;# 
   471     0892                     	;# 
   472     0893                     	;# 
   473     090C                     	;# 
   474     1E8F                     	;# 
   475     1E90                     	;# 
   476     1E91                     	;# 
   477     1E92                     	;# 
   478     1E93                     	;# 
   479     1E9C                     	;# 
   480     1EA1                     	;# 
   481     1EA2                     	;# 
   482     1EC3                     	;# 
   483     1EC5                     	;# 
   484     1EC6                     	;# 
   485     1EC7                     	;# 
   486     1ECB                     	;# 
   487     1ECB                     	;# 
   488     1ECB                     	;# 
   489     1ECC                     	;# 
   490     1ECC                     	;# 
   491     1ECC                     	;# 
   492     1F10                     	;# 
   493     1F11                     	;# 
   494     1F12                     	;# 
   495     1F14                     	;# 
   496     1F15                     	;# 
   497     1F38                     	;# 
   498     1F39                     	;# 
   499     1F3A                     	;# 
   500     1F3B                     	;# 
   501     1F3C                     	;# 
   502     1F3D                     	;# 
   503     1F3E                     	;# 
   504     1F3F                     	;# 
   505     1FE4                     	;# 
   506     1FE5                     	;# 
   507     1FE6                     	;# 
   508     1FE7                     	;# 
   509     1FE8                     	;# 
   510     1FE8                     	;# 
   511     1FE9                     	;# 
   512     1FEA                     	;# 
   513     1FEB                     	;# 
   514     1FED                     	;# 
   515     1FEE                     	;# 
   516     1FEF                     	;# 
   517     0000                     	;# 
   518     0001                     	;# 
   519     0002                     	;# 
   520     0003                     	;# 
   521     0004                     	;# 
   522     0005                     	;# 
   523     0006                     	;# 
   524     0007                     	;# 
   525     0008                     	;# 
   526     0009                     	;# 
   527     000A                     	;# 
   528     000B                     	;# 
   529     000C                     	;# 
   530     0012                     	;# 
   531     0018                     	;# 
   532     009A                     	;# 
   533     009B                     	;# 
   534     009B                     	;# 
   535     009C                     	;# 
   536     009D                     	;# 
   537     009E                     	;# 
   538     009F                     	;# 
   539     0119                     	;# 
   540     011A                     	;# 
   541     011B                     	;# 
   542     011B                     	;# 
   543     011C                     	;# 
   544     011D                     	;# 
   545     011E                     	;# 
   546     011F                     	;# 
   547     018C                     	;# 
   548     018D                     	;# 
   549     018E                     	;# 
   550     018F                     	;# 
   551     0190                     	;# 
   552     0191                     	;# 
   553     0192                     	;# 
   554     020C                     	;# 
   555     020D                     	;# 
   556     020E                     	;# 
   557     020E                     	;# 
   558     020F                     	;# 
   559     020F                     	;# 
   560     0210                     	;# 
   561     0210                     	;# 
   562     0211                     	;# 
   563     0211                     	;# 
   564     028C                     	;# 
   565     028C                     	;# 
   566     028D                     	;# 
   567     028D                     	;# 
   568     028E                     	;# 
   569     028F                     	;# 
   570     0290                     	;# 
   571     0291                     	;# 
   572     030C                     	;# 
   573     030C                     	;# 
   574     030D                     	;# 
   575     030E                     	;# 
   576     030F                     	;# 
   577     0310                     	;# 
   578     0310                     	;# 
   579     0311                     	;# 
   580     0312                     	;# 
   581     0313                     	;# 
   582     0314                     	;# 
   583     0314                     	;# 
   584     0315                     	;# 
   585     0316                     	;# 
   586     0318                     	;# 
   587     0318                     	;# 
   588     0319                     	;# 
   589     031A                     	;# 
   590     059C                     	;# 
   591     059C                     	;# 
   592     059D                     	;# 
   593     059D                     	;# 
   594     059E                     	;# 
   595     059F                     	;# 
   596     070C                     	;# 
   597     070D                     	;# 
   598     070E                     	;# 
   599     0716                     	;# 
   600     0717                     	;# 
   601     0718                     	;# 
   602     080C                     	;# 
   603     0811                     	;# 
   604     0813                     	;# 
   605     0814                     	;# 
   606     081A                     	;# 
   607     081A                     	;# 
   608     081B                     	;# 
   609     081C                     	;# 
   610     081C                     	;# 
   611     081D                     	;# 
   612     081E                     	;# 
   613     081F                     	;# 
   614     088E                     	;# 
   615     0890                     	;# 
   616     0891                     	;# 
   617     0892                     	;# 
   618     0893                     	;# 
   619     090C                     	;# 
   620     1E8F                     	;# 
   621     1E90                     	;# 
   622     1E91                     	;# 
   623     1E92                     	;# 
   624     1E93                     	;# 
   625     1E9C                     	;# 
   626     1EA1                     	;# 
   627     1EA2                     	;# 
   628     1EC3                     	;# 
   629     1EC5                     	;# 
   630     1EC6                     	;# 
   631     1EC7                     	;# 
   632     1ECB                     	;# 
   633     1ECB                     	;# 
   634     1ECB                     	;# 
   635     1ECC                     	;# 
   636     1ECC                     	;# 
   637     1ECC                     	;# 
   638     1F10                     	;# 
   639     1F11                     	;# 
   640     1F12                     	;# 
   641     1F14                     	;# 
   642     1F15                     	;# 
   643     1F38                     	;# 
   644     1F39                     	;# 
   645     1F3A                     	;# 
   646     1F3B                     	;# 
   647     1F3C                     	;# 
   648     1F3D                     	;# 
   649     1F3E                     	;# 
   650     1F3F                     	;# 
   651     1FE4                     	;# 
   652     1FE5                     	;# 
   653     1FE6                     	;# 
   654     1FE7                     	;# 
   655     1FE8                     	;# 
   656     1FE8                     	;# 
   657     1FE9                     	;# 
   658     1FEA                     	;# 
   659     1FEB                     	;# 
   660     1FED                     	;# 
   661     1FEE                     	;# 
   662     1FEF                     	;# 
   663     0000                     	;# 
   664     0001                     	;# 
   665     0002                     	;# 
   666     0003                     	;# 
   667     0004                     	;# 
   668     0005                     	;# 
   669     0006                     	;# 
   670     0007                     	;# 
   671     0008                     	;# 
   672     0009                     	;# 
   673     000A                     	;# 
   674     000B                     	;# 
   675     000C                     	;# 
   676     0012                     	;# 
   677     0018                     	;# 
   678     009A                     	;# 
   679     009B                     	;# 
   680     009B                     	;# 
   681     009C                     	;# 
   682     009D                     	;# 
   683     009E                     	;# 
   684     009F                     	;# 
   685     0119                     	;# 
   686     011A                     	;# 
   687     011B                     	;# 
   688     011B                     	;# 
   689     011C                     	;# 
   690     011D                     	;# 
   691     011E                     	;# 
   692     011F                     	;# 
   693     018C                     	;# 
   694     018D                     	;# 
   695     018E                     	;# 
   696     018F                     	;# 
   697     0190                     	;# 
   698     0191                     	;# 
   699     0192                     	;# 
   700     020C                     	;# 
   701     020D                     	;# 
   702     020E                     	;# 
   703     020E                     	;# 
   704     020F                     	;# 
   705     020F                     	;# 
   706     0210                     	;# 
   707     0210                     	;# 
   708     0211                     	;# 
   709     0211                     	;# 
   710     028C                     	;# 
   711     028C                     	;# 
   712     028D                     	;# 
   713     028D                     	;# 
   714     028E                     	;# 
   715     028F                     	;# 
   716     0290                     	;# 
   717     0291                     	;# 
   718     030C                     	;# 
   719     030C                     	;# 
   720     030D                     	;# 
   721     030E                     	;# 
   722     030F                     	;# 
   723     0310                     	;# 
   724     0310                     	;# 
   725     0311                     	;# 
   726     0312                     	;# 
   727     0313                     	;# 
   728     0314                     	;# 
   729     0314                     	;# 
   730     0315                     	;# 
   731     0316                     	;# 
   732     0318                     	;# 
   733     0318                     	;# 
   734     0319                     	;# 
   735     031A                     	;# 
   736     059C                     	;# 
   737     059C                     	;# 
   738     059D                     	;# 
   739     059D                     	;# 
   740     059E                     	;# 
   741     059F                     	;# 
   742     070C                     	;# 
   743     070D                     	;# 
   744     070E                     	;# 
   745     0716                     	;# 
   746     0717                     	;# 
   747     0718                     	;# 
   748     080C                     	;# 
   749     0811                     	;# 
   750     0813                     	;# 
   751     0814                     	;# 
   752     081A                     	;# 
   753     081A                     	;# 
   754     081B                     	;# 
   755     081C                     	;# 
   756     081C                     	;# 
   757     081D                     	;# 
   758     081E                     	;# 
   759     081F                     	;# 
   760     088E                     	;# 
   761     0890                     	;# 
   762     0891                     	;# 
   763     0892                     	;# 
   764     0893                     	;# 
   765     090C                     	;# 
   766     1E8F                     	;# 
   767     1E90                     	;# 
   768     1E91                     	;# 
   769     1E92                     	;# 
   770     1E93                     	;# 
   771     1E9C                     	;# 
   772     1EA1                     	;# 
   773     1EA2                     	;# 
   774     1EC3                     	;# 
   775     1EC5                     	;# 
   776     1EC6                     	;# 
   777     1EC7                     	;# 
   778     1ECB                     	;# 
   779     1ECB                     	;# 
   780     1ECB                     	;# 
   781     1ECC                     	;# 
   782     1ECC                     	;# 
   783     1ECC                     	;# 
   784     1F10                     	;# 
   785     1F11                     	;# 
   786     1F12                     	;# 
   787     1F14                     	;# 
   788     1F15                     	;# 
   789     1F38                     	;# 
   790     1F39                     	;# 
   791     1F3A                     	;# 
   792     1F3B                     	;# 
   793     1F3C                     	;# 
   794     1F3D                     	;# 
   795     1F3E                     	;# 
   796     1F3F                     	;# 
   797     1FE4                     	;# 
   798     1FE5                     	;# 
   799     1FE6                     	;# 
   800     1FE7                     	;# 
   801     1FE8                     	;# 
   802     1FE8                     	;# 
   803     1FE9                     	;# 
   804     1FEA                     	;# 
   805     1FEB                     	;# 
   806     1FED                     	;# 
   807     1FEE                     	;# 
   808     1FEF                     	;# 
   809     0000                     	;# 
   810     0001                     	;# 
   811     0002                     	;# 
   812     0003                     	;# 
   813     0004                     	;# 
   814     0005                     	;# 
   815     0006                     	;# 
   816     0007                     	;# 
   817     0008                     	;# 
   818     0009                     	;# 
   819     000A                     	;# 
   820     000B                     	;# 
   821     000C                     	;# 
   822     0012                     	;# 
   823     0018                     	;# 
   824     009A                     	;# 
   825     009B                     	;# 
   826     009B                     	;# 
   827     009C                     	;# 
   828     009D                     	;# 
   829     009E                     	;# 
   830     009F                     	;# 
   831     0119                     	;# 
   832     011A                     	;# 
   833     011B                     	;# 
   834     011B                     	;# 
   835     011C                     	;# 
   836     011D                     	;# 
   837     011E                     	;# 
   838     011F                     	;# 
   839     018C                     	;# 
   840     018D                     	;# 
   841     018E                     	;# 
   842     018F                     	;# 
   843     0190                     	;# 
   844     0191                     	;# 
   845     0192                     	;# 
   846     020C                     	;# 
   847     020D                     	;# 
   848     020E                     	;# 
   849     020E                     	;# 
   850     020F                     	;# 
   851     020F                     	;# 
   852     0210                     	;# 
   853     0210                     	;# 
   854     0211                     	;# 
   855     0211                     	;# 
   856     028C                     	;# 
   857     028C                     	;# 
   858     028D                     	;# 
   859     028D                     	;# 
   860     028E                     	;# 
   861     028F                     	;# 
   862     0290                     	;# 
   863     0291                     	;# 
   864     030C                     	;# 
   865     030C                     	;# 
   866     030D                     	;# 
   867     030E                     	;# 
   868     030F                     	;# 
   869     0310                     	;# 
   870     0310                     	;# 
   871     0311                     	;# 
   872     0312                     	;# 
   873     0313                     	;# 
   874     0314                     	;# 
   875     0314                     	;# 
   876     0315                     	;# 
   877     0316                     	;# 
   878     0318                     	;# 
   879     0318                     	;# 
   880     0319                     	;# 
   881     031A                     	;# 
   882     059C                     	;# 
   883     059C                     	;# 
   884     059D                     	;# 
   885     059D                     	;# 
   886     059E                     	;# 
   887     059F                     	;# 
   888     070C                     	;# 
   889     070D                     	;# 
   890     070E                     	;# 
   891     0716                     	;# 
   892     0717                     	;# 
   893     0718                     	;# 
   894     080C                     	;# 
   895     0811                     	;# 
   896     0813                     	;# 
   897     0814                     	;# 
   898     081A                     	;# 
   899     081A                     	;# 
   900     081B                     	;# 
   901     081C                     	;# 
   902     081C                     	;# 
   903     081D                     	;# 
   904     081E                     	;# 
   905     081F                     	;# 
   906     088E                     	;# 
   907     0890                     	;# 
   908     0891                     	;# 
   909     0892                     	;# 
   910     0893                     	;# 
   911     090C                     	;# 
   912     1E8F                     	;# 
   913     1E90                     	;# 
   914     1E91                     	;# 
   915     1E92                     	;# 
   916     1E93                     	;# 
   917     1E9C                     	;# 
   918     1EA1                     	;# 
   919     1EA2                     	;# 
   920     1EC3                     	;# 
   921     1EC5                     	;# 
   922     1EC6                     	;# 
   923     1EC7                     	;# 
   924     1ECB                     	;# 
   925     1ECB                     	;# 
   926     1ECB                     	;# 
   927     1ECC                     	;# 
   928     1ECC                     	;# 
   929     1ECC                     	;# 
   930     1F10                     	;# 
   931     1F11                     	;# 
   932     1F12                     	;# 
   933     1F14                     	;# 
   934     1F15                     	;# 
   935     1F38                     	;# 
   936     1F39                     	;# 
   937     1F3A                     	;# 
   938     1F3B                     	;# 
   939     1F3C                     	;# 
   940     1F3D                     	;# 
   941     1F3E                     	;# 
   942     1F3F                     	;# 
   943     1FE4                     	;# 
   944     1FE5                     	;# 
   945     1FE6                     	;# 
   946     1FE7                     	;# 
   947     1FE8                     	;# 
   948     1FE8                     	;# 
   949     1FE9                     	;# 
   950     1FEA                     	;# 
   951     1FEB                     	;# 
   952     1FED                     	;# 
   953     1FEE                     	;# 
   954     1FEF                     	;# 
   955     0000                     	;# 
   956     0001                     	;# 
   957     0002                     	;# 
   958     0003                     	;# 
   959     0004                     	;# 
   960     0005                     	;# 
   961     0006                     	;# 
   962     0007                     	;# 
   963     0008                     	;# 
   964     0009                     	;# 
   965     000A                     	;# 
   966     000B                     	;# 
   967     000C                     	;# 
   968     0012                     	;# 
   969     0018                     	;# 
   970     009A                     	;# 
   971     009B                     	;# 
   972     009B                     	;# 
   973     009C                     	;# 
   974     009D                     	;# 
   975     009E                     	;# 
   976     009F                     	;# 
   977     0119                     	;# 
   978     011A                     	;# 
   979     011B                     	;# 
   980     011B                     	;# 
   981     011C                     	;# 
   982     011D                     	;# 
   983     011E                     	;# 
   984     011F                     	;# 
   985     018C                     	;# 
   986     018D                     	;# 
   987     018E                     	;# 
   988     018F                     	;# 
   989     0190                     	;# 
   990     0191                     	;# 
   991     0192                     	;# 
   992     020C                     	;# 
   993     020D                     	;# 
   994     020E                     	;# 
   995     020E                     	;# 
   996     020F                     	;# 
   997     020F                     	;# 
   998     0210                     	;# 
   999     0210                     	;# 
  1000     0211                     	;# 
  1001     0211                     	;# 
  1002     028C                     	;# 
  1003     028C                     	;# 
  1004     028D                     	;# 
  1005     028D                     	;# 
  1006     028E                     	;# 
  1007     028F                     	;# 
  1008     0290                     	;# 
  1009     0291                     	;# 
  1010     030C                     	;# 
  1011     030C                     	;# 
  1012     030D                     	;# 
  1013     030E                     	;# 
  1014     030F                     	;# 
  1015     0310                     	;# 
  1016     0310                     	;# 
  1017     0311                     	;# 
  1018     0312                     	;# 
  1019     0313                     	;# 
  1020     0314                     	;# 
  1021     0314                     	;# 
  1022     0315                     	;# 
  1023     0316                     	;# 
  1024     0318                     	;# 
  1025     0318                     	;# 
  1026     0319                     	;# 
  1027     031A                     	;# 
  1028     059C                     	;# 
  1029     059C                     	;# 
  1030     059D                     	;# 
  1031     059D                     	;# 
  1032     059E                     	;# 
  1033     059F                     	;# 
  1034     070C                     	;# 
  1035     070D                     	;# 
  1036     070E                     	;# 
  1037     0716                     	;# 
  1038     0717                     	;# 
  1039     0718                     	;# 
  1040     080C                     	;# 
  1041     0811                     	;# 
  1042     0813                     	;# 
  1043     0814                     	;# 
  1044     081A                     	;# 
  1045     081A                     	;# 
  1046     081B                     	;# 
  1047     081C                     	;# 
  1048     081C                     	;# 
  1049     081D                     	;# 
  1050     081E                     	;# 
  1051     081F                     	;# 
  1052     088E                     	;# 
  1053     0890                     	;# 
  1054     0891                     	;# 
  1055     0892                     	;# 
  1056     0893                     	;# 
  1057     090C                     	;# 
  1058     1E8F                     	;# 
  1059     1E90                     	;# 
  1060     1E91                     	;# 
  1061     1E92                     	;# 
  1062     1E93                     	;# 
  1063     1E9C                     	;# 
  1064     1EA1                     	;# 
  1065     1EA2                     	;# 
  1066     1EC3                     	;# 
  1067     1EC5                     	;# 
  1068     1EC6                     	;# 
  1069     1EC7                     	;# 
  1070     1ECB                     	;# 
  1071     1ECB                     	;# 
  1072     1ECB                     	;# 
  1073     1ECC                     	;# 
  1074     1ECC                     	;# 
  1075     1ECC                     	;# 
  1076     1F10                     	;# 
  1077     1F11                     	;# 
  1078     1F12                     	;# 
  1079     1F14                     	;# 
  1080     1F15                     	;# 
  1081     1F38                     	;# 
  1082     1F39                     	;# 
  1083     1F3A                     	;# 
  1084     1F3B                     	;# 
  1085     1F3C                     	;# 
  1086     1F3D                     	;# 
  1087     1F3E                     	;# 
  1088     1F3F                     	;# 
  1089     1FE4                     	;# 
  1090     1FE5                     	;# 
  1091     1FE6                     	;# 
  1092     1FE7                     	;# 
  1093     1FE8                     	;# 
  1094     1FE8                     	;# 
  1095     1FE9                     	;# 
  1096     1FEA                     	;# 
  1097     1FEB                     	;# 
  1098     1FED                     	;# 
  1099     1FEE                     	;# 
  1100     1FEF                     	;# 
  1101     0000                     	;# 
  1102     0001                     	;# 
  1103     0002                     	;# 
  1104     0003                     	;# 
  1105     0004                     	;# 
  1106     0005                     	;# 
  1107     0006                     	;# 
  1108     0007                     	;# 
  1109     0008                     	;# 
  1110     0009                     	;# 
  1111     000A                     	;# 
  1112     000B                     	;# 
  1113     000C                     	;# 
  1114     0012                     	;# 
  1115     0018                     	;# 
  1116     009A                     	;# 
  1117     009B                     	;# 
  1118     009B                     	;# 
  1119     009C                     	;# 
  1120     009D                     	;# 
  1121     009E                     	;# 
  1122     009F                     	;# 
  1123     0119                     	;# 
  1124     011A                     	;# 
  1125     011B                     	;# 
  1126     011B                     	;# 
  1127     011C                     	;# 
  1128     011D                     	;# 
  1129     011E                     	;# 
  1130     011F                     	;# 
  1131     018C                     	;# 
  1132     018D                     	;# 
  1133     018E                     	;# 
  1134     018F                     	;# 
  1135     0190                     	;# 
  1136     0191                     	;# 
  1137     0192                     	;# 
  1138     020C                     	;# 
  1139     020D                     	;# 
  1140     020E                     	;# 
  1141     020E                     	;# 
  1142     020F                     	;# 
  1143     020F                     	;# 
  1144     0210                     	;# 
  1145     0210                     	;# 
  1146     0211                     	;# 
  1147     0211                     	;# 
  1148     028C                     	;# 
  1149     028C                     	;# 
  1150     028D                     	;# 
  1151     028D                     	;# 
  1152     028E                     	;# 
  1153     028F                     	;# 
  1154     0290                     	;# 
  1155     0291                     	;# 
  1156     030C                     	;# 
  1157     030C                     	;# 
  1158     030D                     	;# 
  1159     030E                     	;# 
  1160     030F                     	;# 
  1161     0310                     	;# 
  1162     0310                     	;# 
  1163     0311                     	;# 
  1164     0312                     	;# 
  1165     0313                     	;# 
  1166     0314                     	;# 
  1167     0314                     	;# 
  1168     0315                     	;# 
  1169     0316                     	;# 
  1170     0318                     	;# 
  1171     0318                     	;# 
  1172     0319                     	;# 
  1173     031A                     	;# 
  1174     059C                     	;# 
  1175     059C                     	;# 
  1176     059D                     	;# 
  1177     059D                     	;# 
  1178     059E                     	;# 
  1179     059F                     	;# 
  1180     070C                     	;# 
  1181     070D                     	;# 
  1182     070E                     	;# 
  1183     0716                     	;# 
  1184     0717                     	;# 
  1185     0718                     	;# 
  1186     080C                     	;# 
  1187     0811                     	;# 
  1188     0813                     	;# 
  1189     0814                     	;# 
  1190     081A                     	;# 
  1191     081A                     	;# 
  1192     081B                     	;# 
  1193     081C                     	;# 
  1194     081C                     	;# 
  1195     081D                     	;# 
  1196     081E                     	;# 
  1197     081F                     	;# 
  1198     088E                     	;# 
  1199     0890                     	;# 
  1200     0891                     	;# 
  1201     0892                     	;# 
  1202     0893                     	;# 
  1203     090C                     	;# 
  1204     1E8F                     	;# 
  1205     1E90                     	;# 
  1206     1E91                     	;# 
  1207     1E92                     	;# 
  1208     1E93                     	;# 
  1209     1E9C                     	;# 
  1210     1EA1                     	;# 
  1211     1EA2                     	;# 
  1212     1EC3                     	;# 
  1213     1EC5                     	;# 
  1214     1EC6                     	;# 
  1215     1EC7                     	;# 
  1216     1ECB                     	;# 
  1217     1ECB                     	;# 
  1218     1ECB                     	;# 
  1219     1ECC                     	;# 
  1220     1ECC                     	;# 
  1221     1ECC                     	;# 
  1222     1F10                     	;# 
  1223     1F11                     	;# 
  1224     1F12                     	;# 
  1225     1F14                     	;# 
  1226     1F15                     	;# 
  1227     1F38                     	;# 
  1228     1F39                     	;# 
  1229     1F3A                     	;# 
  1230     1F3B                     	;# 
  1231     1F3C                     	;# 
  1232     1F3D                     	;# 
  1233     1F3E                     	;# 
  1234     1F3F                     	;# 
  1235     1FE4                     	;# 
  1236     1FE5                     	;# 
  1237     1FE6                     	;# 
  1238     1FE7                     	;# 
  1239     1FE8                     	;# 
  1240     1FE8                     	;# 
  1241     1FE9                     	;# 
  1242     1FEA                     	;# 
  1243     1FEB                     	;# 
  1244     1FED                     	;# 
  1245     1FEE                     	;# 
  1246     1FEF                     	;# 
  1247                           
  1248                           	psect	nvBANK0
  1249     0051                     __pnvBANK0:
  1250     0051                     _TMR2_InterruptHandler:
  1251     0051                     	ds	2
  1252     0053                     _CCP1_CallBack:
  1253     0053                     	ds	2
  1254     0055                     _TMR0_InterruptHandler:
  1255     0055                     	ds	2
  1256     000C                     _PORTAbits	set	12
  1257     0018                     _LATAbits	set	24
  1258     000B                     _INTCONbits	set	11
  1259     0012                     _TRISA	set	18
  1260     0018                     _LATA	set	24
  1261     020F                     _T1GCONbits	set	527
  1262     020E                     _T1CONbits	set	526
  1263     020E                     _T1CON	set	526
  1264     020C                     _TMR1L	set	524
  1265     020D                     _TMR1H	set	525
  1266     0211                     _T1CLK	set	529
  1267     0210                     _T1GATE	set	528
  1268     020F                     _T1GCON	set	527
  1269     028D                     _PR2	set	653
  1270     028C                     _TMR2	set	652
  1271     028E                     _T2CONbits	set	654
  1272     0291                     _T2RSTbits	set	657
  1273     028F                     _T2HLTbits	set	655
  1274     028E                     _T2CON	set	654
  1275     028C                     _T2TMR	set	652
  1276     028D                     _T2PR	set	653
  1277     0291                     _T2RST	set	657
  1278     028F                     _T2HLT	set	655
  1279     0290                     _T2CLKCON	set	656
  1280     030C                     _CCPR1L	set	780
  1281     030D                     _CCPR1H	set	781
  1282     030F                     _CCP1CAP	set	783
  1283     030E                     _CCP1CON	set	782
  1284     059E                     _T0CON0bits	set	1438
  1285     059E                     _T0CON0	set	1438
  1286     059C                     _TMR0L	set	1436
  1287     059D                     _TMR0H	set	1437
  1288     059F                     _T0CON1	set	1439
  1289     070D                     _PIR1bits	set	1805
  1290     0717                     _PIE1bits	set	1815
  1291     070C                     _PIR0bits	set	1804
  1292     0716                     _PIE0bits	set	1814
  1293     080C                     _WDTCON	set	2060
  1294     0892                     _OSCTUNE	set	2194
  1295     0893                     _OSCFRQ	set	2195
  1296     0891                     _OSCEN	set	2193
  1297     1EA1                     _CCP1PPS	set	7841
  1298     1F3C                     _INLVLA	set	7996
  1299     1F3B                     _SLRCONA	set	7995
  1300     1F3A                     _ODCONA	set	7994
  1301     1F39                     _WPUA	set	7993
  1302     1F38                     _ANSELA	set	7992
  1303                           
  1304                           	psect	cinit
  1305     0032                     start_initialization:	
  1306                           ; #config settings
  1307                           
  1308     0032                     __initialization:
  1309                           
  1310                           ; Clear objects allocated to COMMON
  1311     0032  01F0               	clrf	__pbssCOMMON& (0+127)
  1312     0033  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1313     0034  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1314     0035  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1315     0036  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1316     0037  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1317     0038  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1318                           
  1319                           ; Clear objects allocated to BANK0
  1320     0039  303A               	movlw	low __pbssBANK0
  1321     003A  0084               	movwf	4
  1322     003B  3000               	movlw	high __pbssBANK0
  1323     003C  0085               	movwf	5
  1324     003D  3017               	movlw	23
  1325     003E  3182  22CA  3180   	fcall	clear_ram0
  1326     0041                     end_of_initialization:	
  1327                           ;End of C runtime variable initialization code
  1328                           
  1329     0041                     __end_of__initialization:
  1330     0041  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1331     0042  0140               	movlb	0
  1332     0043  2844               	ljmp	_main	;jump to C main() function
  1333                           
  1334                           	psect	bssCOMMON
  1335     0070                     __pbssCOMMON:
  1336     0070                     CCP1_EvenCallBack@rising_edge_time:
  1337     0070                     	ds	2
  1338     0072                     CCP1_EvenCallBack@falling_edge_time:
  1339     0072                     	ds	2
  1340     0074                     _timer1ReloadVal:
  1341     0074                     	ds	2
  1342     0076                     CCP1_EvenCallBack@rise_edge_flag:
  1343     0076                     	ds	1
  1344                           
  1345                           	psect	bssBANK0
  1346     003A                     __pbssBANK0:
  1347     003A                     _Duty_PERCENT:
  1348     003A                     	ds	4
  1349     003E                     _PWM_Frequent:
  1350     003E                     	ds	4
  1351     0042                     CCP1_EvenCallBack@LO_us:
  1352     0042                     	ds	2
  1353     0044                     CCP1_EvenCallBack@HI_us:
  1354     0044                     	ds	2
  1355     0046                     CCP1_EvenCallBack@pluse_width_HI:
  1356     0046                     	ds	2
  1357     0048                     CCP1_EvenCallBack@pluse_width_LO:
  1358     0048                     	ds	2
  1359     004A                     _HI_time:
  1360     004A                     	ds	2
  1361     004C                     _fpluseOK:
  1362     004C                     	ds	1
  1363     004D                     _cycle_time:
  1364     004D                     	ds	4
  1365                           
  1366                           	psect	clrtext
  1367     02CA                     clear_ram0:	
  1368                           ;	Called with FSR0 containing the base address, and
  1369                           ;	WREG with the size to clear
  1370                           
  1371     02CA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1372     02CB                     clrloop0:
  1373     02CB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1374     02CC  3101               	addfsr 0,1
  1375     02CD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1376     02CE  2ACB               	goto	clrloop0	;have we reached the end yet?
  1377     02CF  3400               	retlw	0	;all done for this memory range, return
  1378                           
  1379                           	psect	cstackCOMMON
  1380     0077                     __pcstackCOMMON:
  1381     0077                     ?_PIN_MANAGER_Initialize:
  1382     0077                     ?_OSCILLATOR_Initialize:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385     0077                     ?_WDT_Initialize:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388     0077                     ?_CCP1_Initialize:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391     0077                     ?_TMR2_Initialize:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394     0077                     ?_TMR1_Initialize:	
  1395                           ; 1 bytes @ 0x0
  1396                           
  1397     0077                     ?_TMR0_Initialize:	
  1398                           ; 1 bytes @ 0x0
  1399                           
  1400     0077                     ?_TMR0_ISR:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403     0077                     ??_TMR0_ISR:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406     0077                     ?_CCP1_CaptureISR:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409     0077                     ?_TMR2_ISR:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412     0077                     ??_TMR2_ISR:	
  1413                           ; 1 bytes @ 0x0
  1414                           
  1415     0077                     ?_TMR0_DefaultInterruptHandler:	
  1416                           ; 1 bytes @ 0x0
  1417                           
  1418     0077                     ??_TMR0_DefaultInterruptHandler:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421     0077                     ?_TMR2_DefaultInterruptHandler:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424     0077                     ??_TMR2_DefaultInterruptHandler:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427     0077                     ?_SYSTEM_Initialize:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430     0077                     ?_INTERRUPT_InterruptManager:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433     0077                     ?_TMR0_WriteTimer:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436     0077                     ?_TMR2_Start:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439     0077                     ?_TMR2_StartTimer:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442     0077                     ?_TMR2_Counter8BitSet:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445     0077                     ?_TMR2_WriteTimer:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448     0077                     ?_TMR0_EvenHandler:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451     0077                     ??_TMR0_EvenHandler:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454     0077                     ?_TMR2_EvenHandler:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457     0077                     ??_TMR2_EvenHandler:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460     0077                     ?_main:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463     0077                     ?i1_TMR0_WriteTimer:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466     0077                     ??i1_TMR0_WriteTimer:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469     0077                     i1TMR0_WriteTimer@timerVal:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472                           
  1473                           ; 1 bytes @ 0x0
  1474     0077                     	ds	1
  1475     0078                     ?_CCP1_DefaultCallBack:
  1476     0078                     ?_CCP1_EvenCallBack:	
  1477                           ; 1 bytes @ 0x1
  1478                           
  1479     0078                     CCP1_DefaultCallBack@capturedValue:	
  1480                           ; 1 bytes @ 0x1
  1481                           
  1482     0078                     CCP1_EvenCallBack@captured:	
  1483                           ; 2 bytes @ 0x1
  1484                           
  1485                           
  1486                           ; 2 bytes @ 0x1
  1487     0078                     	ds	2
  1488     007A                     ??_CCP1_DefaultCallBack:
  1489     007A                     ??_CCP1_EvenCallBack:	
  1490                           ; 1 bytes @ 0x3
  1491                           
  1492                           
  1493                           ; 1 bytes @ 0x3
  1494     007A                     	ds	2
  1495     007C                     ??_CCP1_CaptureISR:
  1496     007C                     CCP1_CaptureISR@module:	
  1497                           ; 1 bytes @ 0x5
  1498                           
  1499                           
  1500                           ; 2 bytes @ 0x5
  1501     007C                     	ds	2
  1502     007E                     ??_INTERRUPT_InterruptManager:
  1503                           
  1504                           	psect	cstackBANK0
  1505     0020                     __pcstackBANK0:	
  1506                           ; 1 bytes @ 0x7
  1507                           
  1508     0020                     ??_PIN_MANAGER_Initialize:
  1509     0020                     ??_OSCILLATOR_Initialize:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512     0020                     ??_WDT_Initialize:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515     0020                     ??_TMR1_Initialize:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518     0020                     ?_TMR0_SetInterruptHandler:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521     0020                     ?_CCP1_SetCallBack:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524     0020                     ?_TMR2_SetInterruptHandler:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527     0020                     ??_TMR0_WriteTimer:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530     0020                     ??_TMR2_Start:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533     0020                     ??_TMR2_StartTimer:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536     0020                     ??_TMR2_Counter8BitSet:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539     0020                     ?___lmul:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542     0020                     TMR0_WriteTimer@timerVal:	
  1543                           ; 4 bytes @ 0x0
  1544                           
  1545     0020                     TMR2_Counter8BitSet@timerVal:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548     0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551     0020                     CCP1_SetCallBack@customCallBack:	
  1552                           ; 2 bytes @ 0x0
  1553                           
  1554     0020                     TMR2_SetInterruptHandler@InterruptHandler:	
  1555                           ; 2 bytes @ 0x0
  1556                           
  1557     0020                     ___lmul@multiplier:	
  1558                           ; 2 bytes @ 0x0
  1559                           
  1560                           
  1561                           ; 4 bytes @ 0x0
  1562     0020                     	ds	1
  1563     0021                     ??_TMR2_WriteTimer:
  1564     0021                     TMR2_WriteTimer@timerVal:	
  1565                           ; 1 bytes @ 0x1
  1566                           
  1567                           
  1568                           ; 1 bytes @ 0x1
  1569     0021                     	ds	1
  1570     0022                     ??_CCP1_Initialize:
  1571     0022                     ??_TMR2_Initialize:	
  1572                           ; 1 bytes @ 0x2
  1573                           
  1574     0022                     ??_TMR0_Initialize:	
  1575                           ; 1 bytes @ 0x2
  1576                           
  1577     0022                     ??_TMR0_SetInterruptHandler:	
  1578                           ; 1 bytes @ 0x2
  1579                           
  1580     0022                     ??_CCP1_SetCallBack:	
  1581                           ; 1 bytes @ 0x2
  1582                           
  1583     0022                     ??_TMR2_SetInterruptHandler:	
  1584                           ; 1 bytes @ 0x2
  1585                           
  1586     0022                     ??_SYSTEM_Initialize:	
  1587                           ; 1 bytes @ 0x2
  1588                           
  1589                           
  1590                           ; 1 bytes @ 0x2
  1591     0022                     	ds	2
  1592     0024                     ___lmul@multiplicand:
  1593                           
  1594                           ; 4 bytes @ 0x4
  1595     0024                     	ds	4
  1596     0028                     ??___lmul:
  1597     0028                     ___lmul@product:	
  1598                           ; 1 bytes @ 0x8
  1599                           
  1600                           
  1601                           ; 4 bytes @ 0x8
  1602     0028                     	ds	4
  1603     002C                     ?___lldiv:
  1604     002C                     ___lldiv@divisor:	
  1605                           ; 4 bytes @ 0xC
  1606                           
  1607                           
  1608                           ; 4 bytes @ 0xC
  1609     002C                     	ds	4
  1610     0030                     ___lldiv@dividend:
  1611                           
  1612                           ; 4 bytes @ 0x10
  1613     0030                     	ds	4
  1614     0034                     ??___lldiv:
  1615                           
  1616                           ; 1 bytes @ 0x14
  1617     0034                     	ds	1
  1618     0035                     ___lldiv@quotient:
  1619                           
  1620                           ; 4 bytes @ 0x15
  1621     0035                     	ds	4
  1622     0039                     ___lldiv@counter:
  1623                           
  1624                           ; 1 bytes @ 0x19
  1625     0039                     	ds	1
  1626     003A                     ??_main:
  1627                           
  1628                           	psect	maintext
  1629     0044                     __pmaintext:	
  1630                           ; 1 bytes @ 0x1A
  1631 ;;
  1632 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1633 ;;
  1634 ;; *************** function _main *****************
  1635 ;; Defined at:
  1636 ;;		line 133 in file "main.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0, pclath, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : B3F/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1650 ;;      Params:         0       0       0       0
  1651 ;;      Locals:         0       0       0       0
  1652 ;;      Temps:          0       0       0       0
  1653 ;;      Totals:         0       0       0       0
  1654 ;;Total ram usage:        0 bytes
  1655 ;; Hardware stack levels required when called: 7
  1656 ;; This function calls:
  1657 ;;		_CCP1_SetCallBack
  1658 ;;		_SYSTEM_Initialize
  1659 ;;		_TMR0_SetInterruptHandler
  1660 ;;		_TMR0_WriteTimer
  1661 ;;		_TMR2_SetInterruptHandler
  1662 ;;		_TMR2_StartTimer
  1663 ;;		_TMR2_WriteTimer
  1664 ;;		___lldiv
  1665 ;;		___lmul
  1666 ;; This function is called by:
  1667 ;;		Startup code after reset
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671     0044                     _main:	
  1672                           ;psect for function _main
  1673                           
  1674     0044                     l1572:	
  1675                           ;incstack = 0
  1676                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1677                           
  1678                           
  1679                           ;main.c: 135:   SYSTEM_Initialize();
  1680     0044  3182  2234  3180   	fcall	_SYSTEM_Initialize
  1681                           
  1682                           ;main.c: 136:   TMR0_SetInterruptHandler(TMR0_EvenHandler);
  1683     0047  3001               	movlw	low _TMR0_EvenHandler
  1684     0048  0140               	movlb	0	; select bank0
  1685     0049  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1686     004A  3003               	movlw	high _TMR0_EvenHandler
  1687     004B  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1688     004C  3182  22E2  3180   	fcall	_TMR0_SetInterruptHandler
  1689                           
  1690                           ;main.c: 137:   CCP1_SetCallBack(CCP1_EvenCallBack);
  1691     004F  30FC               	movlw	low _CCP1_EvenCallBack
  1692     0050  0140               	movlb	0	; select bank0
  1693     0051  00A0               	movwf	CCP1_SetCallBack@customCallBack
  1694     0052  3000               	movlw	high _CCP1_EvenCallBack
  1695     0053  00A1               	movwf	CCP1_SetCallBack@customCallBack+1
  1696     0054  3182  22EE  3180   	fcall	_CCP1_SetCallBack
  1697                           
  1698                           ;main.c: 138:   TMR2_SetInterruptHandler(TMR2_EvenHandler);
  1699     0057  30FD               	movlw	low _TMR2_EvenHandler
  1700     0058  0140               	movlb	0	; select bank0
  1701     0059  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1702     005A  3002               	movlw	high _TMR2_EvenHandler
  1703     005B  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1704     005C  3182  22DC  3180   	fcall	_TMR2_SetInterruptHandler
  1705     005F                     l1574:
  1706                           
  1707                           ;main.c: 144:   (INTCONbits.GIE = 1);
  1708     005F  178B               	bsf	11,7	;volatile
  1709     0060                     l1576:
  1710                           
  1711                           ;main.c: 147:   (INTCONbits.PEIE = 1);
  1712     0060  170B               	bsf	11,6	;volatile
  1713     0061                     l1578:
  1714                           
  1715                           ;main.c: 154:   TMR2_StartTimer();
  1716     0061  3182  22F9  3180   	fcall	_TMR2_StartTimer
  1717     0064                     l1580:
  1718                           
  1719                           ;main.c: 158:     if (PORTAbits.RA5 == 0) {
  1720     0064  0140               	movlb	0	; select bank0
  1721     0065  1A8C               	btfsc	12,5	;volatile
  1722     0066  2868               	goto	u661
  1723     0067  2869               	goto	u660
  1724     0068                     u661:
  1725     0068  286E               	goto	l1584
  1726     0069                     u660:
  1727     0069                     l1582:
  1728                           
  1729                           ;main.c: 159:       TMR2_WriteTimer(0);
  1730     0069  3000               	movlw	0
  1731     006A  3182  22C3  3180   	fcall	_TMR2_WriteTimer
  1732                           
  1733                           ;main.c: 160:     } else {
  1734     006D  2872               	goto	l1586
  1735     006E                     l1584:
  1736                           
  1737                           ;main.c: 161:       TMR0_WriteTimer(0);
  1738     006E  3000               	movlw	0
  1739     006F  3182  22D6  3180   	fcall	_TMR0_WriteTimer
  1740     0072                     l1586:
  1741                           
  1742                           ;main.c: 164:     if (fpluseOK == 1) {
  1743     0072  0140               	movlb	0	; select bank0
  1744     0073  034C               	decf	_fpluseOK,w
  1745     0074  1D03               	btfss	3,2
  1746     0075  2877               	goto	u671
  1747     0076  2878               	goto	u670
  1748     0077                     u671:
  1749     0077  2864               	goto	l1580
  1750     0078                     u670:
  1751     0078                     l1588:
  1752                           
  1753                           ;main.c: 165:       fpluseOK = 0;
  1754     0078  01CC               	clrf	_fpluseOK
  1755     0079                     l1590:
  1756                           
  1757                           ;main.c: 166:       PWM_Frequent = 1000000UL / cycle_time;
  1758     0079  0850               	movf	_cycle_time+3,w
  1759     007A  00AF               	movwf	___lldiv@divisor+3
  1760     007B  084F               	movf	_cycle_time+2,w
  1761     007C  00AE               	movwf	___lldiv@divisor+2
  1762     007D  084E               	movf	_cycle_time+1,w
  1763     007E  00AD               	movwf	___lldiv@divisor+1
  1764     007F  084D               	movf	_cycle_time,w
  1765     0080  00AC               	movwf	___lldiv@divisor
  1766     0081  3000               	movlw	0
  1767     0082  00B3               	movwf	___lldiv@dividend+3
  1768     0083  300F               	movlw	15
  1769     0084  00B2               	movwf	___lldiv@dividend+2
  1770     0085  3042               	movlw	66
  1771     0086  00B1               	movwf	___lldiv@dividend+1
  1772     0087  3040               	movlw	64
  1773     0088  00B0               	movwf	___lldiv@dividend
  1774     0089  3181  218E  3180   	fcall	___lldiv
  1775     008C  0140               	movlb	0	; select bank0
  1776     008D  082F               	movf	?___lldiv+3,w
  1777     008E  00C1               	movwf	_PWM_Frequent+3
  1778     008F  082E               	movf	?___lldiv+2,w
  1779     0090  00C0               	movwf	_PWM_Frequent+2
  1780     0091  082D               	movf	?___lldiv+1,w
  1781     0092  00BF               	movwf	_PWM_Frequent+1
  1782     0093  082C               	movf	?___lldiv,w
  1783     0094  00BE               	movwf	_PWM_Frequent
  1784     0095                     l1592:
  1785                           
  1786                           ;main.c: 167:       if ((PWM_Frequent > (190)) && (PWM_Frequent < (220))) {
  1787     0095  0841               	movf	_PWM_Frequent+3,w
  1788     0096  1D03               	btfss	3,2
  1789     0097  28A4               	goto	u680
  1790     0098  0840               	movf	_PWM_Frequent+2,w
  1791     0099  1D03               	btfss	3,2
  1792     009A  28A4               	goto	u680
  1793     009B  083F               	movf	_PWM_Frequent+1,w
  1794     009C  1D03               	btfss	3,2
  1795     009D  28A4               	goto	u680
  1796     009E  30BF               	movlw	191
  1797     009F  023E               	subwf	_PWM_Frequent,w
  1798     00A0  1C03               	btfss	3,0
  1799     00A1  28A3               	goto	u681
  1800     00A2  28A4               	goto	u680
  1801     00A3                     u681:
  1802     00A3  28F8               	goto	l378
  1803     00A4                     u680:
  1804     00A4                     l1594:
  1805     00A4  0140               	movlb	0	; select bank0
  1806     00A5  0841               	movf	_PWM_Frequent+3,w
  1807     00A6  1D03               	btfss	3,2
  1808     00A7  28B3               	goto	u691
  1809     00A8  0840               	movf	_PWM_Frequent+2,w
  1810     00A9  1D03               	btfss	3,2
  1811     00AA  28B3               	goto	u691
  1812     00AB  083F               	movf	_PWM_Frequent+1,w
  1813     00AC  1D03               	btfss	3,2
  1814     00AD  28B3               	goto	u691
  1815     00AE  30DC               	movlw	220
  1816     00AF  023E               	subwf	_PWM_Frequent,w
  1817     00B0  1803               	btfsc	3,0
  1818     00B1  28B3               	goto	u691
  1819     00B2  28B4               	goto	u690
  1820     00B3                     u691:
  1821     00B3  28F8               	goto	l378
  1822     00B4                     u690:
  1823     00B4                     l1596:
  1824                           
  1825                           ;main.c: 168:         Duty_PERCENT = (uint32_t)(HI_time * 100UL) / cycle_time;
  1826     00B4  0140               	movlb	0	; select bank0
  1827     00B5  0850               	movf	_cycle_time+3,w
  1828     00B6  00AF               	movwf	___lldiv@divisor+3
  1829     00B7  084F               	movf	_cycle_time+2,w
  1830     00B8  00AE               	movwf	___lldiv@divisor+2
  1831     00B9  084E               	movf	_cycle_time+1,w
  1832     00BA  00AD               	movwf	___lldiv@divisor+1
  1833     00BB  084D               	movf	_cycle_time,w
  1834     00BC  00AC               	movwf	___lldiv@divisor
  1835     00BD  084A               	movf	_HI_time,w
  1836     00BE  00A0               	movwf	___lmul@multiplier
  1837     00BF  084B               	movf	_HI_time+1,w
  1838     00C0  00A1               	movwf	___lmul@multiplier+1
  1839     00C1  01A2               	clrf	___lmul@multiplier+2
  1840     00C2  01A3               	clrf	___lmul@multiplier+3
  1841     00C3  3000               	movlw	0
  1842     00C4  00A7               	movwf	___lmul@multiplicand+3
  1843     00C5  3000               	movlw	0
  1844     00C6  00A6               	movwf	___lmul@multiplicand+2
  1845     00C7  3000               	movlw	0
  1846     00C8  00A5               	movwf	___lmul@multiplicand+1
  1847     00C9  3064               	movlw	100
  1848     00CA  00A4               	movwf	___lmul@multiplicand
  1849     00CB  3181  21E9  3180   	fcall	___lmul
  1850     00CE  0140               	movlb	0	; select bank0
  1851     00CF  0823               	movf	?___lmul+3,w
  1852     00D0  00B3               	movwf	___lldiv@dividend+3
  1853     00D1  0822               	movf	?___lmul+2,w
  1854     00D2  00B2               	movwf	___lldiv@dividend+2
  1855     00D3  0821               	movf	?___lmul+1,w
  1856     00D4  00B1               	movwf	___lldiv@dividend+1
  1857     00D5  0820               	movf	?___lmul,w
  1858     00D6  00B0               	movwf	___lldiv@dividend
  1859     00D7  3181  218E  3180   	fcall	___lldiv
  1860     00DA  0140               	movlb	0	; select bank0
  1861     00DB  082F               	movf	?___lldiv+3,w
  1862     00DC  00BD               	movwf	_Duty_PERCENT+3
  1863     00DD  082E               	movf	?___lldiv+2,w
  1864     00DE  00BC               	movwf	_Duty_PERCENT+2
  1865     00DF  082D               	movf	?___lldiv+1,w
  1866     00E0  00BB               	movwf	_Duty_PERCENT+1
  1867     00E1  082C               	movf	?___lldiv,w
  1868     00E2  00BA               	movwf	_Duty_PERCENT
  1869     00E3                     l1598:
  1870                           
  1871                           ;main.c: 169:         if (Duty_PERCENT >= (80)) {
  1872     00E3  083D               	movf	_Duty_PERCENT+3,w
  1873     00E4  1D03               	btfss	3,2
  1874     00E5  28F2               	goto	u700
  1875     00E6  083C               	movf	_Duty_PERCENT+2,w
  1876     00E7  1D03               	btfss	3,2
  1877     00E8  28F2               	goto	u700
  1878     00E9  083B               	movf	_Duty_PERCENT+1,w
  1879     00EA  1D03               	btfss	3,2
  1880     00EB  28F2               	goto	u700
  1881     00EC  3050               	movlw	80
  1882     00ED  023A               	subwf	_Duty_PERCENT,w
  1883     00EE  1C03               	btfss	3,0
  1884     00EF  28F1               	goto	u701
  1885     00F0  28F2               	goto	u700
  1886     00F1                     u701:
  1887     00F1  28F5               	goto	l375
  1888     00F2                     u700:
  1889     00F2                     l372:	
  1890                           ;main.c: 170:           do { LATAbits.LATA2 = 1; } while(0);
  1891                           
  1892     00F2  0140               	movlb	0	; select bank0
  1893     00F3  1518               	bsf	24,2	;volatile
  1894     00F4  2864               	goto	l1580
  1895     00F5                     l375:	
  1896                           ;main.c: 172:           do { LATAbits.LATA2 = 0; } while(0);
  1897                           
  1898     00F5  0140               	movlb	0	; select bank0
  1899     00F6  1118               	bcf	24,2	;volatile
  1900     00F7  2864               	goto	l1580
  1901     00F8                     l378:	
  1902                           ;main.c: 176:         do { LATAbits.LATA2 = 0; } while(0);
  1903                           
  1904     00F8  0140               	movlb	0	; select bank0
  1905     00F9  1118               	bcf	24,2	;volatile
  1906     00FA  2864               	goto	l1580
  1907     00FB  2831               	ljmp	start
  1908     00FC                     __end_of_main:
  1909                           
  1910                           	psect	text1
  1911     01E9                     __ptext1:	
  1912 ;; *************** function ___lmul *****************
  1913 ;; Defined at:
  1914 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1917 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  product         4    8[BANK0 ] unsigned long 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  4    0[BANK0 ] unsigned long 
  1922 ;; Registers used:
  1923 ;;		wreg, status,2, status,0
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1929 ;;      Params:         0       8       0       0
  1930 ;;      Locals:         0       4       0       0
  1931 ;;      Temps:          0       0       0       0
  1932 ;;      Totals:         0      12       0       0
  1933 ;;Total ram usage:       12 bytes
  1934 ;; Hardware stack levels used: 1
  1935 ;; Hardware stack levels required when called: 4
  1936 ;; This function calls:
  1937 ;;		Nothing
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943     01E9                     ___lmul:	
  1944                           ;psect for function ___lmul
  1945                           
  1946     01E9                     l1558:	
  1947                           ;incstack = 0
  1948                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1949                           
  1950     01E9  3000               	movlw	0
  1951     01EA  0140               	movlb	0	; select bank0
  1952     01EB  00AB               	movwf	___lmul@product+3
  1953     01EC  3000               	movlw	0
  1954     01ED  00AA               	movwf	___lmul@product+2
  1955     01EE  3000               	movlw	0
  1956     01EF  00A9               	movwf	___lmul@product+1
  1957     01F0  3000               	movlw	0
  1958     01F1  00A8               	movwf	___lmul@product
  1959     01F2                     l1560:
  1960     01F2  1C20               	btfss	___lmul@multiplier,0
  1961     01F3  29F5               	goto	u621
  1962     01F4  29F6               	goto	u620
  1963     01F5                     u621:
  1964     01F5  29FE               	goto	l1564
  1965     01F6                     u620:
  1966     01F6                     l1562:
  1967     01F6  0824               	movf	___lmul@multiplicand,w
  1968     01F7  07A8               	addwf	___lmul@product,f
  1969     01F8  0825               	movf	___lmul@multiplicand+1,w
  1970     01F9  3DA9               	addwfc	___lmul@product+1,f
  1971     01FA  0826               	movf	___lmul@multiplicand+2,w
  1972     01FB  3DAA               	addwfc	___lmul@product+2,f
  1973     01FC  0827               	movf	___lmul@multiplicand+3,w
  1974     01FD  3DAB               	addwfc	___lmul@product+3,f
  1975     01FE                     l1564:
  1976     01FE  3001               	movlw	1
  1977     01FF                     u635:
  1978     01FF  35A4               	lslf	___lmul@multiplicand,f
  1979     0200  0DA5               	rlf	___lmul@multiplicand+1,f
  1980     0201  0DA6               	rlf	___lmul@multiplicand+2,f
  1981     0202  0DA7               	rlf	___lmul@multiplicand+3,f
  1982     0203  0B89               	decfsz	9,f
  1983     0204  29FF               	goto	u635
  1984     0205                     l1566:
  1985     0205  3001               	movlw	1
  1986     0206                     u645:
  1987     0206  36A3               	lsrf	___lmul@multiplier+3,f
  1988     0207  0CA2               	rrf	___lmul@multiplier+2,f
  1989     0208  0CA1               	rrf	___lmul@multiplier+1,f
  1990     0209  0CA0               	rrf	___lmul@multiplier,f
  1991     020A  0B89               	decfsz	9,f
  1992     020B  2A06               	goto	u645
  1993     020C  0823               	movf	___lmul@multiplier+3,w
  1994     020D  0422               	iorwf	___lmul@multiplier+2,w
  1995     020E  0421               	iorwf	___lmul@multiplier+1,w
  1996     020F  0420               	iorwf	___lmul@multiplier,w
  1997     0210  1D03               	skipz
  1998     0211  2A13               	goto	u651
  1999     0212  2A14               	goto	u650
  2000     0213                     u651:
  2001     0213  29F2               	goto	l1560
  2002     0214                     u650:
  2003     0214                     l1568:
  2004     0214  082B               	movf	___lmul@product+3,w
  2005     0215  00A3               	movwf	?___lmul+3
  2006     0216  082A               	movf	___lmul@product+2,w
  2007     0217  00A2               	movwf	?___lmul+2
  2008     0218  0829               	movf	___lmul@product+1,w
  2009     0219  00A1               	movwf	?___lmul+1
  2010     021A  0828               	movf	___lmul@product,w
  2011     021B  00A0               	movwf	?___lmul
  2012     021C                     l464:
  2013     021C  0008               	return
  2014     021D                     __end_of___lmul:
  2015                           
  2016                           	psect	text2
  2017     018E                     __ptext2:	
  2018 ;; *************** function ___lldiv *****************
  2019 ;; Defined at:
  2020 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  divisor         4   12[BANK0 ] unsigned long 
  2023 ;;  dividend        4   16[BANK0 ] unsigned long 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  quotient        4   21[BANK0 ] unsigned long 
  2026 ;;  counter         1   25[BANK0 ] unsigned char 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  4   12[BANK0 ] unsigned long 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2, status,0
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2036 ;;      Params:         0       8       0       0
  2037 ;;      Locals:         0       5       0       0
  2038 ;;      Temps:          0       1       0       0
  2039 ;;      Totals:         0      14       0       0
  2040 ;;Total ram usage:       14 bytes
  2041 ;; Hardware stack levels used: 1
  2042 ;; Hardware stack levels required when called: 4
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_main
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050     018E                     ___lldiv:	
  2051                           ;psect for function ___lldiv
  2052                           
  2053     018E                     l1386:	
  2054                           ;incstack = 0
  2055                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2056                           
  2057     018E  3000               	movlw	0
  2058     018F  0140               	movlb	0	; select bank0
  2059     0190  00B8               	movwf	___lldiv@quotient+3
  2060     0191  3000               	movlw	0
  2061     0192  00B7               	movwf	___lldiv@quotient+2
  2062     0193  3000               	movlw	0
  2063     0194  00B6               	movwf	___lldiv@quotient+1
  2064     0195  3000               	movlw	0
  2065     0196  00B5               	movwf	___lldiv@quotient
  2066     0197  082F               	movf	___lldiv@divisor+3,w
  2067     0198  042E               	iorwf	___lldiv@divisor+2,w
  2068     0199  042D               	iorwf	___lldiv@divisor+1,w
  2069     019A  042C               	iorwf	___lldiv@divisor,w
  2070     019B  1903               	skipnz
  2071     019C  299E               	goto	u431
  2072     019D  299F               	goto	u430
  2073     019E                     u431:
  2074     019E  29E0               	goto	l1406
  2075     019F                     u430:
  2076     019F                     l1388:
  2077     019F  01B9               	clrf	___lldiv@counter
  2078     01A0  0AB9               	incf	___lldiv@counter,f
  2079     01A1  29AD               	goto	l1392
  2080     01A2                     l1390:
  2081     01A2  3001               	movlw	1
  2082     01A3                     u445:
  2083     01A3  35AC               	lslf	___lldiv@divisor,f
  2084     01A4  0DAD               	rlf	___lldiv@divisor+1,f
  2085     01A5  0DAE               	rlf	___lldiv@divisor+2,f
  2086     01A6  0DAF               	rlf	___lldiv@divisor+3,f
  2087     01A7  0B89               	decfsz	9,f
  2088     01A8  29A3               	goto	u445
  2089     01A9  3001               	movlw	1
  2090     01AA  00B4               	movwf	??___lldiv
  2091     01AB  0834               	movf	??___lldiv,w
  2092     01AC  07B9               	addwf	___lldiv@counter,f
  2093     01AD                     l1392:
  2094     01AD  1FAF               	btfss	___lldiv@divisor+3,7
  2095     01AE  29B0               	goto	u451
  2096     01AF  29B1               	goto	u450
  2097     01B0                     u451:
  2098     01B0  29A2               	goto	l1390
  2099     01B1                     u450:
  2100     01B1                     l1394:
  2101     01B1  3001               	movlw	1
  2102     01B2                     u465:
  2103     01B2  35B5               	lslf	___lldiv@quotient,f
  2104     01B3  0DB6               	rlf	___lldiv@quotient+1,f
  2105     01B4  0DB7               	rlf	___lldiv@quotient+2,f
  2106     01B5  0DB8               	rlf	___lldiv@quotient+3,f
  2107     01B6  0B89               	decfsz	9,f
  2108     01B7  29B2               	goto	u465
  2109     01B8                     l1396:
  2110     01B8  082F               	movf	___lldiv@divisor+3,w
  2111     01B9  0233               	subwf	___lldiv@dividend+3,w
  2112     01BA  1D03               	skipz
  2113     01BB  29C6               	goto	u475
  2114     01BC  082E               	movf	___lldiv@divisor+2,w
  2115     01BD  0232               	subwf	___lldiv@dividend+2,w
  2116     01BE  1D03               	skipz
  2117     01BF  29C6               	goto	u475
  2118     01C0  082D               	movf	___lldiv@divisor+1,w
  2119     01C1  0231               	subwf	___lldiv@dividend+1,w
  2120     01C2  1D03               	skipz
  2121     01C3  29C6               	goto	u475
  2122     01C4  082C               	movf	___lldiv@divisor,w
  2123     01C5  0230               	subwf	___lldiv@dividend,w
  2124     01C6                     u475:
  2125     01C6  1C03               	skipc
  2126     01C7  29C9               	goto	u471
  2127     01C8  29CA               	goto	u470
  2128     01C9                     u471:
  2129     01C9  29D3               	goto	l1402
  2130     01CA                     u470:
  2131     01CA                     l1398:
  2132     01CA  082C               	movf	___lldiv@divisor,w
  2133     01CB  02B0               	subwf	___lldiv@dividend,f
  2134     01CC  082D               	movf	___lldiv@divisor+1,w
  2135     01CD  3BB1               	subwfb	___lldiv@dividend+1,f
  2136     01CE  082E               	movf	___lldiv@divisor+2,w
  2137     01CF  3BB2               	subwfb	___lldiv@dividend+2,f
  2138     01D0  082F               	movf	___lldiv@divisor+3,w
  2139     01D1  3BB3               	subwfb	___lldiv@dividend+3,f
  2140     01D2                     l1400:
  2141     01D2  1435               	bsf	___lldiv@quotient,0
  2142     01D3                     l1402:
  2143     01D3  3001               	movlw	1
  2144     01D4                     u485:
  2145     01D4  36AF               	lsrf	___lldiv@divisor+3,f
  2146     01D5  0CAE               	rrf	___lldiv@divisor+2,f
  2147     01D6  0CAD               	rrf	___lldiv@divisor+1,f
  2148     01D7  0CAC               	rrf	___lldiv@divisor,f
  2149     01D8  0B89               	decfsz	9,f
  2150     01D9  29D4               	goto	u485
  2151     01DA                     l1404:
  2152     01DA  3001               	movlw	1
  2153     01DB  02B9               	subwf	___lldiv@counter,f
  2154     01DC  1D03               	btfss	3,2
  2155     01DD  29DF               	goto	u491
  2156     01DE  29E0               	goto	u490
  2157     01DF                     u491:
  2158     01DF  29B1               	goto	l1394
  2159     01E0                     u490:
  2160     01E0                     l1406:
  2161     01E0  0838               	movf	___lldiv@quotient+3,w
  2162     01E1  00AF               	movwf	?___lldiv+3
  2163     01E2  0837               	movf	___lldiv@quotient+2,w
  2164     01E3  00AE               	movwf	?___lldiv+2
  2165     01E4  0836               	movf	___lldiv@quotient+1,w
  2166     01E5  00AD               	movwf	?___lldiv+1
  2167     01E6  0835               	movf	___lldiv@quotient,w
  2168     01E7  00AC               	movwf	?___lldiv
  2169     01E8                     l486:
  2170     01E8  0008               	return
  2171     01E9                     __end_of___lldiv:
  2172                           
  2173                           	psect	text3
  2174     02C3                     __ptext3:	
  2175 ;; *************** function _TMR2_WriteTimer *****************
  2176 ;; Defined at:
  2177 ;;		line 150 in file "mcc_generated_files/tmr2.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  timerVal        1    wreg     unsigned char 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  timerVal        1    1[BANK0 ] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0, pclath, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2191 ;;      Params:         0       0       0       0
  2192 ;;      Locals:         0       1       0       0
  2193 ;;      Temps:          0       0       0       0
  2194 ;;      Totals:         0       1       0       0
  2195 ;;Total ram usage:        1 bytes
  2196 ;; Hardware stack levels used: 1
  2197 ;; Hardware stack levels required when called: 5
  2198 ;; This function calls:
  2199 ;;		_TMR2_Counter8BitSet
  2200 ;; This function is called by:
  2201 ;;		_main
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205     02C3                     _TMR2_WriteTimer:	
  2206                           ;psect for function _TMR2_WriteTimer
  2207                           
  2208                           
  2209                           ;incstack = 0
  2210                           ; Regs used in _TMR2_WriteTimer: [wreg+status,2+status,0+pclath+cstack]
  2211                           ;TMR2_WriteTimer@timerVal stored from wreg
  2212     02C3  0140               	movlb	0	; select bank0
  2213     02C4  00A1               	movwf	TMR2_WriteTimer@timerVal
  2214     02C5                     l1556:
  2215                           
  2216                           ;mcc_generated_files/tmr2.c: 150: void TMR2_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr2.c: 151: {;mcc_generated_files/tmr2.c: 152:     TMR2_Counter8BitSet(timerVal);
  2217     02C5  0821               	movf	TMR2_WriteTimer@timerVal,w
  2218     02C6  3182  22D0  3182   	fcall	_TMR2_Counter8BitSet
  2219     02C9                     l272:
  2220     02C9  0008               	return
  2221     02CA                     __end_of_TMR2_WriteTimer:
  2222                           
  2223                           	psect	text4
  2224     02D0                     __ptext4:	
  2225 ;; *************** function _TMR2_Counter8BitSet *****************
  2226 ;; Defined at:
  2227 ;;		line 144 in file "mcc_generated_files/tmr2.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  timerVal        1    wreg     unsigned char 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  timerVal        1    0[BANK0 ] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2241 ;;      Params:         0       0       0       0
  2242 ;;      Locals:         0       1       0       0
  2243 ;;      Temps:          0       0       0       0
  2244 ;;      Totals:         0       1       0       0
  2245 ;;Total ram usage:        1 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; Hardware stack levels required when called: 4
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_TMR2_WriteTimer
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255     02D0                     _TMR2_Counter8BitSet:	
  2256                           ;psect for function _TMR2_Counter8BitSet
  2257                           
  2258                           
  2259                           ;incstack = 0
  2260                           ; Regs used in _TMR2_Counter8BitSet: [wreg]
  2261                           ;TMR2_Counter8BitSet@timerVal stored from wreg
  2262     02D0  0140               	movlb	0	; select bank0
  2263     02D1  00A0               	movwf	TMR2_Counter8BitSet@timerVal
  2264     02D2                     l1538:
  2265                           
  2266                           ;mcc_generated_files/tmr2.c: 144: void TMR2_Counter8BitSet(uint8_t timerVal);mcc_generat
      +                          ed_files/tmr2.c: 145: {;mcc_generated_files/tmr2.c: 147:     TMR2 = timerVal;
  2267     02D2  0820               	movf	TMR2_Counter8BitSet@timerVal,w
  2268     02D3  0145               	movlb	5	; select bank5
  2269     02D4  008C               	movwf	12	;volatile
  2270     02D5                     l269:
  2271     02D5  0008               	return
  2272     02D6                     __end_of_TMR2_Counter8BitSet:
  2273                           
  2274                           	psect	text5
  2275     02F9                     __ptext5:	
  2276 ;; *************** function _TMR2_StartTimer *****************
  2277 ;; Defined at:
  2278 ;;		line 114 in file "mcc_generated_files/tmr2.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;		None
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;		None
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		status,2, status,0, pclath, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2292 ;;      Params:         0       0       0       0
  2293 ;;      Locals:         0       0       0       0
  2294 ;;      Temps:          0       0       0       0
  2295 ;;      Totals:         0       0       0       0
  2296 ;;Total ram usage:        0 bytes
  2297 ;; Hardware stack levels used: 1
  2298 ;; Hardware stack levels required when called: 5
  2299 ;; This function calls:
  2300 ;;		_TMR2_Start
  2301 ;; This function is called by:
  2302 ;;		_main
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306     02F9                     _TMR2_StartTimer:	
  2307                           ;psect for function _TMR2_StartTimer
  2308                           
  2309     02F9                     l1554:	
  2310                           ;incstack = 0
  2311                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
  2312                           
  2313                           
  2314                           ;mcc_generated_files/tmr2.c: 116:     TMR2_Start();
  2315     02F9  3183  2305  3182   	fcall	_TMR2_Start
  2316     02FC                     l254:
  2317     02FC  0008               	return
  2318     02FD                     __end_of_TMR2_StartTimer:
  2319                           
  2320                           	psect	text6
  2321     0305                     __ptext6:	
  2322 ;; *************** function _TMR2_Start *****************
  2323 ;; Defined at:
  2324 ;;		line 108 in file "mcc_generated_files/tmr2.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;		None
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		None
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2338 ;;      Params:         0       0       0       0
  2339 ;;      Locals:         0       0       0       0
  2340 ;;      Temps:          0       0       0       0
  2341 ;;      Totals:         0       0       0       0
  2342 ;;Total ram usage:        0 bytes
  2343 ;; Hardware stack levels used: 1
  2344 ;; Hardware stack levels required when called: 4
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_TMR2_StartTimer
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352     0305                     _TMR2_Start:	
  2353                           ;psect for function _TMR2_Start
  2354                           
  2355     0305                     l1536:	
  2356                           ;incstack = 0
  2357                           ; Regs used in _TMR2_Start: []
  2358                           
  2359                           
  2360                           ;mcc_generated_files/tmr2.c: 111:     T2CONbits.TMR2ON = 1;
  2361     0305  0145               	movlb	5	; select bank5
  2362     0306  178E               	bsf	14,7	;volatile
  2363     0307                     l251:
  2364     0307  0008               	return
  2365     0308                     __end_of_TMR2_Start:
  2366                           
  2367                           	psect	text7
  2368     02D6                     __ptext7:	
  2369 ;; *************** function _TMR0_WriteTimer *****************
  2370 ;; Defined at:
  2371 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  timerVal        1    wreg     unsigned char 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  timerVal        1    0[BANK0 ] unsigned char 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2385 ;;      Params:         0       0       0       0
  2386 ;;      Locals:         0       1       0       0
  2387 ;;      Temps:          0       0       0       0
  2388 ;;      Totals:         0       1       0       0
  2389 ;;Total ram usage:        1 bytes
  2390 ;; Hardware stack levels used: 1
  2391 ;; Hardware stack levels required when called: 4
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_main
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399     02D6                     _TMR0_WriteTimer:	
  2400                           ;psect for function _TMR0_WriteTimer
  2401                           
  2402                           
  2403                           ;incstack = 0
  2404                           ; Regs used in _TMR0_WriteTimer: [wreg]
  2405                           ;TMR0_WriteTimer@timerVal stored from wreg
  2406     02D6  0140               	movlb	0	; select bank0
  2407     02D7  00A0               	movwf	TMR0_WriteTimer@timerVal
  2408     02D8                     l1552:
  2409                           
  2410                           ;mcc_generated_files/tmr0.c: 109: void TMR0_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr0.c: 110: {;mcc_generated_files/tmr0.c: 112:     TMR0L = timerVal;
  2411     02D8  0820               	movf	TMR0_WriteTimer@timerVal,w
  2412     02D9  014B               	movlb	11	; select bank11
  2413     02DA  009C               	movwf	28	;volatile
  2414     02DB                     l117:
  2415     02DB  0008               	return
  2416     02DC                     __end_of_TMR0_WriteTimer:
  2417                           
  2418                           	psect	text8
  2419     0234                     __ptext8:	
  2420 ;; *************** function _SYSTEM_Initialize *****************
  2421 ;; Defined at:
  2422 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;		None
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0, pclath, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2436 ;;      Params:         0       0       0       0
  2437 ;;      Locals:         0       0       0       0
  2438 ;;      Temps:          0       0       0       0
  2439 ;;      Totals:         0       0       0       0
  2440 ;;Total ram usage:        0 bytes
  2441 ;; Hardware stack levels used: 1
  2442 ;; Hardware stack levels required when called: 6
  2443 ;; This function calls:
  2444 ;;		_CCP1_Initialize
  2445 ;;		_OSCILLATOR_Initialize
  2446 ;;		_PIN_MANAGER_Initialize
  2447 ;;		_TMR0_Initialize
  2448 ;;		_TMR1_Initialize
  2449 ;;		_TMR2_Initialize
  2450 ;;		_WDT_Initialize
  2451 ;; This function is called by:
  2452 ;;		_main
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456     0234                     _SYSTEM_Initialize:	
  2457                           ;psect for function _SYSTEM_Initialize
  2458                           
  2459     0234                     l1540:	
  2460                           ;incstack = 0
  2461                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2462                           
  2463                           
  2464                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2465     0234  3182  2294  3182   	fcall	_PIN_MANAGER_Initialize
  2466                           
  2467                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2468     0237  3182  22E8  3182   	fcall	_OSCILLATOR_Initialize
  2469     023A                     l1542:
  2470                           
  2471                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2472     023A  3183  2308  3182   	fcall	_WDT_Initialize
  2473     023D                     l1544:
  2474                           
  2475                           ;mcc_generated_files/mcc.c: 56:     CCP1_Initialize();
  2476     023D  3182  225F  3182   	fcall	_CCP1_Initialize
  2477     0240                     l1546:
  2478                           
  2479                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  2480     0240  3182  221D  3182   	fcall	_TMR2_Initialize
  2481     0243                     l1548:
  2482                           
  2483                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  2484     0243  3182  2283  3182   	fcall	_TMR1_Initialize
  2485     0246                     l1550:
  2486                           
  2487                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  2488     0246  3182  224A  3182   	fcall	_TMR0_Initialize
  2489     0249                     l25:
  2490     0249  0008               	return
  2491     024A                     __end_of_SYSTEM_Initialize:
  2492                           
  2493                           	psect	text9
  2494     0308                     __ptext9:	
  2495 ;; *************** function _WDT_Initialize *****************
  2496 ;; Defined at:
  2497 ;;		line 72 in file "mcc_generated_files/mcc.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;		None
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;		None
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		status,2
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2511 ;;      Params:         0       0       0       0
  2512 ;;      Locals:         0       0       0       0
  2513 ;;      Temps:          0       0       0       0
  2514 ;;      Totals:         0       0       0       0
  2515 ;;Total ram usage:        0 bytes
  2516 ;; Hardware stack levels used: 1
  2517 ;; Hardware stack levels required when called: 4
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_SYSTEM_Initialize
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525     0308                     _WDT_Initialize:	
  2526                           ;psect for function _WDT_Initialize
  2527                           
  2528     0308                     l1478:	
  2529                           ;incstack = 0
  2530                           ; Regs used in _WDT_Initialize: [status,2]
  2531                           
  2532                           
  2533                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x00;
  2534     0308  0150               	movlb	16	; select bank16
  2535     0309  018C               	clrf	12	;volatile
  2536     030A                     l31:
  2537     030A  0008               	return
  2538     030B                     __end_of_WDT_Initialize:
  2539                           
  2540                           	psect	text10
  2541     021D                     __ptext10:	
  2542 ;; *************** function _TMR2_Initialize *****************
  2543 ;; Defined at:
  2544 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, status,2, status,0, pclath, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2558 ;;      Params:         0       0       0       0
  2559 ;;      Locals:         0       0       0       0
  2560 ;;      Temps:          0       0       0       0
  2561 ;;      Totals:         0       0       0       0
  2562 ;;Total ram usage:        0 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 5
  2565 ;; This function calls:
  2566 ;;		_TMR2_SetInterruptHandler
  2567 ;; This function is called by:
  2568 ;;		_SYSTEM_Initialize
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572     021D                     _TMR2_Initialize:	
  2573                           ;psect for function _TMR2_Initialize
  2574                           
  2575     021D                     l1494:	
  2576                           ;incstack = 0
  2577                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2578                           
  2579                           
  2580                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
  2581     021D  3001               	movlw	1
  2582     021E  0145               	movlb	5	; select bank5
  2583     021F  0090               	movwf	16	;volatile
  2584     0220                     l1496:
  2585                           
  2586                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
  2587     0220  018F               	clrf	15	;volatile
  2588     0221                     l1498:
  2589                           
  2590                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
  2591     0221  0191               	clrf	17	;volatile
  2592                           
  2593                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x8C;
  2594     0222  308C               	movlw	140
  2595     0223  008D               	movwf	13	;volatile
  2596     0224                     l1500:
  2597                           
  2598                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
  2599     0224  018C               	clrf	12	;volatile
  2600     0225                     l1502:
  2601                           
  2602                           ;mcc_generated_files/tmr2.c: 84:     PIR1bits.TMR2IF = 0;
  2603     0225  014E               	movlb	14	; select bank14
  2604     0226  130D               	bcf	13,6	;volatile
  2605     0227                     l1504:
  2606                           
  2607                           ;mcc_generated_files/tmr2.c: 87:     PIE1bits.TMR2IE = 1;
  2608     0227  1717               	bsf	23,6	;volatile
  2609     0228                     l1506:
  2610                           
  2611                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2612     0228  300B               	movlw	low _TMR2_DefaultInterruptHandler
  2613     0229  0140               	movlb	0	; select bank0
  2614     022A  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2615     022B  3003               	movlw	high _TMR2_DefaultInterruptHandler
  2616     022C  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2617     022D  3182  22DC  3182   	fcall	_TMR2_SetInterruptHandler
  2618     0230                     l1508:
  2619                           
  2620                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xF1;
  2621     0230  30F1               	movlw	241
  2622     0231  0145               	movlb	5	; select bank5
  2623     0232  008E               	movwf	14	;volatile
  2624     0233                     l242:
  2625     0233  0008               	return
  2626     0234                     __end_of_TMR2_Initialize:
  2627                           
  2628                           	psect	text11
  2629     02DC                     __ptext11:	
  2630 ;; *************** function _TMR2_SetInterruptHandler *****************
  2631 ;; Defined at:
  2632 ;;		line 178 in file "mcc_generated_files/tmr2.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2635 ;;		 -> TMR2_EvenHandler(1), TMR2_DefaultInterruptHandler(1), 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;		None
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      void 
  2640 ;; Registers used:
  2641 ;;		wreg
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2647 ;;      Params:         0       2       0       0
  2648 ;;      Locals:         0       0       0       0
  2649 ;;      Temps:          0       0       0       0
  2650 ;;      Totals:         0       2       0       0
  2651 ;;Total ram usage:        2 bytes
  2652 ;; Hardware stack levels used: 1
  2653 ;; Hardware stack levels required when called: 4
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_TMR2_Initialize
  2658 ;;		_main
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662     02DC                     _TMR2_SetInterruptHandler:	
  2663                           ;psect for function _TMR2_SetInterruptHandler
  2664                           
  2665     02DC                     l1458:	
  2666                           ;incstack = 0
  2667                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2668                           
  2669                           
  2670                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
  2671     02DC  0140               	movlb	0	; select bank0
  2672     02DD  0821               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2673     02DE  00D2               	movwf	_TMR2_InterruptHandler+1
  2674     02DF  0820               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2675     02E0  00D1               	movwf	_TMR2_InterruptHandler
  2676     02E1                     l285:
  2677     02E1  0008               	return
  2678     02E2                     __end_of_TMR2_SetInterruptHandler:
  2679                           
  2680                           	psect	text12
  2681     0283                     __ptext12:	
  2682 ;; *************** function _TMR1_Initialize *****************
  2683 ;; Defined at:
  2684 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;		None
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, status,2
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2698 ;;      Params:         0       0       0       0
  2699 ;;      Locals:         0       0       0       0
  2700 ;;      Temps:          0       0       0       0
  2701 ;;      Totals:         0       0       0       0
  2702 ;;Total ram usage:        0 bytes
  2703 ;; Hardware stack levels used: 1
  2704 ;; Hardware stack levels required when called: 4
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		_SYSTEM_Initialize
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712     0283                     _TMR1_Initialize:	
  2713                           ;psect for function _TMR1_Initialize
  2714                           
  2715     0283                     l1510:	
  2716                           ;incstack = 0
  2717                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  2718                           
  2719                           
  2720                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  2721     0283  0144               	movlb	4	; select bank4
  2722     0284  018F               	clrf	15	;volatile
  2723                           
  2724                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x00;
  2725     0285  0190               	clrf	16	;volatile
  2726     0286                     l1512:
  2727                           
  2728                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x01;
  2729     0286  3001               	movlw	1
  2730     0287  0091               	movwf	17	;volatile
  2731     0288                     l1514:
  2732                           
  2733                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0x00;
  2734     0288  018D               	clrf	13	;volatile
  2735     0289                     l1516:
  2736                           
  2737                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0x00;
  2738     0289  018C               	clrf	12	;volatile
  2739     028A                     l1518:
  2740                           
  2741                           ;mcc_generated_files/tmr1.c: 83:     PIR1bits.TMR1IF = 0;
  2742     028A  014E               	movlb	14	; select bank14
  2743     028B  128D               	bcf	13,5	;volatile
  2744     028C                     l1520:
  2745                           
  2746                           ;mcc_generated_files/tmr1.c: 86:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2747     028C  0144               	movlb	4	; select bank4
  2748     028D  080D               	movf	13,w	;volatile
  2749     028E  00F5               	movwf	_timer1ReloadVal+1	;volatile
  2750     028F  080C               	movf	12,w	;volatile
  2751     0290  00F4               	movwf	_timer1ReloadVal	;volatile
  2752     0291                     l1522:
  2753                           
  2754                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x01;
  2755     0291  3001               	movlw	1
  2756     0292  008E               	movwf	14	;volatile
  2757     0293                     l153:
  2758     0293  0008               	return
  2759     0294                     __end_of_TMR1_Initialize:
  2760                           
  2761                           	psect	text13
  2762     024A                     __ptext13:	
  2763 ;; *************** function _TMR0_Initialize *****************
  2764 ;; Defined at:
  2765 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;		None
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;		None
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		wreg, status,2, status,0, pclath, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2779 ;;      Params:         0       0       0       0
  2780 ;;      Locals:         0       0       0       0
  2781 ;;      Temps:          0       0       0       0
  2782 ;;      Totals:         0       0       0       0
  2783 ;;Total ram usage:        0 bytes
  2784 ;; Hardware stack levels used: 1
  2785 ;; Hardware stack levels required when called: 5
  2786 ;; This function calls:
  2787 ;;		_TMR0_SetInterruptHandler
  2788 ;; This function is called by:
  2789 ;;		_SYSTEM_Initialize
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793     024A                     _TMR0_Initialize:	
  2794                           ;psect for function _TMR0_Initialize
  2795                           
  2796     024A                     l1524:	
  2797                           ;incstack = 0
  2798                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2799                           
  2800                           
  2801                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x44;
  2802     024A  3044               	movlw	68
  2803     024B  014B               	movlb	11	; select bank11
  2804     024C  009F               	movwf	31	;volatile
  2805                           
  2806                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x9B;
  2807     024D  309B               	movlw	155
  2808     024E  009D               	movwf	29	;volatile
  2809     024F                     l1526:
  2810                           
  2811                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  2812     024F  019C               	clrf	28	;volatile
  2813     0250                     l1528:
  2814                           
  2815                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  2816     0250  014E               	movlb	14	; select bank14
  2817     0251  128C               	bcf	12,5	;volatile
  2818     0252                     l1530:
  2819                           
  2820                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  2821     0252  1696               	bsf	22,5	;volatile
  2822     0253                     l1532:
  2823                           
  2824                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2825     0253  300C               	movlw	low _TMR0_DefaultInterruptHandler
  2826     0254  0140               	movlb	0	; select bank0
  2827     0255  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2828     0256  3003               	movlw	high _TMR0_DefaultInterruptHandler
  2829     0257  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2830     0258  3182  22E2  3182   	fcall	_TMR0_SetInterruptHandler
  2831     025B                     l1534:
  2832                           
  2833                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x8F;
  2834     025B  308F               	movlw	143
  2835     025C  014B               	movlb	11	; select bank11
  2836     025D  009E               	movwf	30	;volatile
  2837     025E                     l105:
  2838     025E  0008               	return
  2839     025F                     __end_of_TMR0_Initialize:
  2840                           
  2841                           	psect	text14
  2842     02E2                     __ptext14:	
  2843 ;; *************** function _TMR0_SetInterruptHandler *****************
  2844 ;; Defined at:
  2845 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2848 ;;		 -> TMR0_EvenHandler(1), TMR0_DefaultInterruptHandler(1), 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;		None
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		wreg
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2860 ;;      Params:         0       2       0       0
  2861 ;;      Locals:         0       0       0       0
  2862 ;;      Temps:          0       0       0       0
  2863 ;;      Totals:         0       2       0       0
  2864 ;;Total ram usage:        2 bytes
  2865 ;; Hardware stack levels used: 1
  2866 ;; Hardware stack levels required when called: 4
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_TMR0_Initialize
  2871 ;;		_main
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875     02E2                     _TMR0_SetInterruptHandler:	
  2876                           ;psect for function _TMR0_SetInterruptHandler
  2877                           
  2878     02E2                     l1454:	
  2879                           ;incstack = 0
  2880                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2881                           
  2882                           
  2883                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
  2884     02E2  0140               	movlb	0	; select bank0
  2885     02E3  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2886     02E4  00D6               	movwf	_TMR0_InterruptHandler+1
  2887     02E5  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2888     02E6  00D5               	movwf	_TMR0_InterruptHandler
  2889     02E7                     l127:
  2890     02E7  0008               	return
  2891     02E8                     __end_of_TMR0_SetInterruptHandler:
  2892                           
  2893                           	psect	text15
  2894     0294                     __ptext15:	
  2895 ;; *************** function _PIN_MANAGER_Initialize *****************
  2896 ;; Defined at:
  2897 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;		None
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2911 ;;      Params:         0       0       0       0
  2912 ;;      Locals:         0       0       0       0
  2913 ;;      Temps:          0       0       0       0
  2914 ;;      Totals:         0       0       0       0
  2915 ;;Total ram usage:        0 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; Hardware stack levels required when called: 4
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_SYSTEM_Initialize
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925     0294                     _PIN_MANAGER_Initialize:	
  2926                           ;psect for function _PIN_MANAGER_Initialize
  2927                           
  2928     0294                     l1460:	
  2929                           ;incstack = 0
  2930                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2931                           
  2932                           
  2933                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2934     0294  0140               	movlb	0	; select bank0
  2935     0295  0198               	clrf	24	;volatile
  2936     0296                     l1462:
  2937                           
  2938                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x2B;
  2939     0296  302B               	movlw	43
  2940     0297  0092               	movwf	18	;volatile
  2941     0298                     l1464:
  2942                           
  2943                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x03;
  2944     0298  3003               	movlw	3
  2945     0299  017E               	movlb	62	; select bank62
  2946     029A  00B8               	movwf	56	;volatile
  2947                           
  2948                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  2949     029B  01B9               	clrf	57	;volatile
  2950                           
  2951                           ;mcc_generated_files/pin_manager.c: 80:     ODCONA = 0x00;
  2952     029C  01BA               	clrf	58	;volatile
  2953     029D                     l1466:
  2954                           
  2955                           ;mcc_generated_files/pin_manager.c: 85:     SLRCONA = 0x37;
  2956     029D  3037               	movlw	55
  2957     029E  00BB               	movwf	59	;volatile
  2958     029F                     l1468:
  2959                           
  2960                           ;mcc_generated_files/pin_manager.c: 90:     INLVLA = 0x3F;
  2961     029F  303F               	movlw	63
  2962     02A0  00BC               	movwf	60	;volatile
  2963     02A1                     l1470:
  2964                           
  2965                           ;mcc_generated_files/pin_manager.c: 99:     CCP1PPS = 0x05;
  2966     02A1  3005               	movlw	5
  2967     02A2  017D               	movlb	61	; select bank61
  2968     02A3  00A1               	movwf	33	;volatile
  2969     02A4                     l50:
  2970     02A4  0008               	return
  2971     02A5                     __end_of_PIN_MANAGER_Initialize:
  2972                           
  2973                           	psect	text16
  2974     02E8                     __ptext16:	
  2975 ;; *************** function _OSCILLATOR_Initialize *****************
  2976 ;; Defined at:
  2977 ;;		line 62 in file "mcc_generated_files/mcc.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg, status,2
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2991 ;;      Params:         0       0       0       0
  2992 ;;      Locals:         0       0       0       0
  2993 ;;      Temps:          0       0       0       0
  2994 ;;      Totals:         0       0       0       0
  2995 ;;Total ram usage:        0 bytes
  2996 ;; Hardware stack levels used: 1
  2997 ;; Hardware stack levels required when called: 4
  2998 ;; This function calls:
  2999 ;;		Nothing
  3000 ;; This function is called by:
  3001 ;;		_SYSTEM_Initialize
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005     02E8                     _OSCILLATOR_Initialize:	
  3006                           ;psect for function _OSCILLATOR_Initialize
  3007                           
  3008     02E8                     l1472:	
  3009                           ;incstack = 0
  3010                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3011                           
  3012                           
  3013                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  3014     02E8  0151               	movlb	17	; select bank17
  3015     02E9  0191               	clrf	17	;volatile
  3016     02EA                     l1474:
  3017                           
  3018                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x05;
  3019     02EA  3005               	movlw	5
  3020     02EB  0093               	movwf	19	;volatile
  3021     02EC                     l1476:
  3022                           
  3023                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  3024     02EC  0192               	clrf	18	;volatile
  3025     02ED                     l28:
  3026     02ED  0008               	return
  3027     02EE                     __end_of_OSCILLATOR_Initialize:
  3028                           
  3029                           	psect	text17
  3030     025F                     __ptext17:	
  3031 ;; *************** function _CCP1_Initialize *****************
  3032 ;; Defined at:
  3033 ;;		line 65 in file "mcc_generated_files/ccp1.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0, pclath, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3047 ;;      Params:         0       0       0       0
  3048 ;;      Locals:         0       0       0       0
  3049 ;;      Temps:          0       0       0       0
  3050 ;;      Totals:         0       0       0       0
  3051 ;;Total ram usage:        0 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; Hardware stack levels required when called: 5
  3054 ;; This function calls:
  3055 ;;		_CCP1_SetCallBack
  3056 ;; This function is called by:
  3057 ;;		_SYSTEM_Initialize
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061     025F                     _CCP1_Initialize:	
  3062                           ;psect for function _CCP1_Initialize
  3063                           
  3064     025F                     l1480:	
  3065                           ;incstack = 0
  3066                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3067                           
  3068                           
  3069                           ;mcc_generated_files/ccp1.c: 70:  CCP1CON = 0x84;
  3070     025F  3084               	movlw	132
  3071     0260  0146               	movlb	6	; select bank6
  3072     0261  008E               	movwf	14	;volatile
  3073     0262                     l1482:
  3074                           
  3075                           ;mcc_generated_files/ccp1.c: 73:  CCP1CAP = 0x00;
  3076     0262  018F               	clrf	15	;volatile
  3077     0263                     l1484:
  3078                           
  3079                           ;mcc_generated_files/ccp1.c: 76:  CCPR1H = 0x00;
  3080     0263  018D               	clrf	13	;volatile
  3081     0264                     l1486:
  3082                           
  3083                           ;mcc_generated_files/ccp1.c: 79:  CCPR1L = 0x00;
  3084     0264  018C               	clrf	12	;volatile
  3085     0265                     l1488:
  3086                           
  3087                           ;mcc_generated_files/ccp1.c: 82:     CCP1_SetCallBack(CCP1_DefaultCallBack);
  3088     0265  300D               	movlw	low _CCP1_DefaultCallBack
  3089     0266  0140               	movlb	0	; select bank0
  3090     0267  00A0               	movwf	CCP1_SetCallBack@customCallBack
  3091     0268  3003               	movlw	high _CCP1_DefaultCallBack
  3092     0269  00A1               	movwf	CCP1_SetCallBack@customCallBack+1
  3093     026A  3182  22EE  3182   	fcall	_CCP1_SetCallBack
  3094     026D                     l1490:
  3095                           
  3096                           ;mcc_generated_files/ccp1.c: 86:     PIR1bits.CCP1IF = 0;
  3097     026D  014E               	movlb	14	; select bank14
  3098     026E  138D               	bcf	13,7	;volatile
  3099     026F                     l1492:
  3100                           
  3101                           ;mcc_generated_files/ccp1.c: 89:     PIE1bits.CCP1IE = 1;
  3102     026F  1797               	bsf	23,7	;volatile
  3103     0270                     l201:
  3104     0270  0008               	return
  3105     0271                     __end_of_CCP1_Initialize:
  3106                           
  3107                           	psect	text18
  3108     02EE                     __ptext18:	
  3109 ;; *************** function _CCP1_SetCallBack *****************
  3110 ;; Defined at:
  3111 ;;		line 107 in file "mcc_generated_files/ccp1.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  3114 ;;		 -> CCP1_EvenCallBack(1), CCP1_DefaultCallBack(1), 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		wreg
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3126 ;;      Params:         0       2       0       0
  3127 ;;      Locals:         0       0       0       0
  3128 ;;      Temps:          0       0       0       0
  3129 ;;      Totals:         0       2       0       0
  3130 ;;Total ram usage:        2 bytes
  3131 ;; Hardware stack levels used: 1
  3132 ;; Hardware stack levels required when called: 4
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_CCP1_Initialize
  3137 ;;		_main
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141     02EE                     _CCP1_SetCallBack:	
  3142                           ;psect for function _CCP1_SetCallBack
  3143                           
  3144     02EE                     l1456:	
  3145                           ;incstack = 0
  3146                           ; Regs used in _CCP1_SetCallBack: [wreg]
  3147                           
  3148                           
  3149                           ;mcc_generated_files/ccp1.c: 108:     CCP1_CallBack = customCallBack;
  3150     02EE  0140               	movlb	0	; select bank0
  3151     02EF  0821               	movf	CCP1_SetCallBack@customCallBack+1,w
  3152     02F0  00D4               	movwf	_CCP1_CallBack+1
  3153     02F1  0820               	movf	CCP1_SetCallBack@customCallBack,w
  3154     02F2  00D3               	movwf	_CCP1_CallBack
  3155     02F3                     l207:
  3156     02F3  0008               	return
  3157     02F4                     __end_of_CCP1_SetCallBack:
  3158                           
  3159                           	psect	intentry
  3160     0004                     __pintentry:	
  3161 ;; *************** function _INTERRUPT_InterruptManager *****************
  3162 ;; Defined at:
  3163 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;		None
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		wreg, status,2, status,0, pclath, cstack
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3177 ;;      Params:         0       0       0       0
  3178 ;;      Locals:         0       0       0       0
  3179 ;;      Temps:          0       0       0       0
  3180 ;;      Totals:         0       0       0       0
  3181 ;;Total ram usage:        0 bytes
  3182 ;; Hardware stack levels used: 1
  3183 ;; Hardware stack levels required when called: 3
  3184 ;; This function calls:
  3185 ;;		_CCP1_CaptureISR
  3186 ;;		_TMR0_ISR
  3187 ;;		_TMR2_ISR
  3188 ;; This function is called by:
  3189 ;;		Interrupt level 1
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193     0004                     _INTERRUPT_InterruptManager:
  3194                           
  3195                           ;incstack = 0
  3196     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3197                           
  3198                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3199     0005  3180               	pagesel	$
  3200     0006                     i1l1410:
  3201                           
  3202                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  3203     0006  014E               	movlb	14	; select bank14
  3204     0007  1E96               	btfss	22,5	;volatile
  3205     0008  280A               	goto	u50_21
  3206     0009  280B               	goto	u50_20
  3207     000A                     u50_21:
  3208     000A  2813               	goto	i1l74
  3209     000B                     u50_20:
  3210     000B                     i1l1412:
  3211     000B  1E8C               	btfss	12,5	;volatile
  3212     000C  280E               	goto	u51_21
  3213     000D  280F               	goto	u51_20
  3214     000E                     u51_21:
  3215     000E  2813               	goto	i1l74
  3216     000F                     u51_20:
  3217     000F                     i1l1414:
  3218                           
  3219                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  3220     000F  3182  22B4  3180   	fcall	_TMR0_ISR
  3221                           
  3222                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  3223     0012  282F               	goto	i1l82
  3224     0013                     i1l74:	
  3225                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  3226                           
  3227     0013  1F0B               	btfss	11,6	;volatile
  3228     0014  2816               	goto	u52_21
  3229     0015  2817               	goto	u52_20
  3230     0016                     u52_21:
  3231     0016  282F               	goto	i1l82
  3232     0017                     u52_20:
  3233     0017                     i1l1416:
  3234                           
  3235                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.CCP1IE == 1 && PIR1bits.CCP1IF == 1)
  3236     0017  1F97               	btfss	23,7	;volatile
  3237     0018  281A               	goto	u53_21
  3238     0019  281B               	goto	u53_20
  3239     001A                     u53_21:
  3240     001A  2823               	goto	i1l77
  3241     001B                     u53_20:
  3242     001B                     i1l1418:
  3243     001B  1F8D               	btfss	13,7	;volatile
  3244     001C  281E               	goto	u54_21
  3245     001D  281F               	goto	u54_20
  3246     001E                     u54_21:
  3247     001E  2823               	goto	i1l77
  3248     001F                     u54_20:
  3249     001F                     i1l1420:
  3250                           
  3251                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             CCP1_CaptureISR();
  3252     001F  3182  2271  3180   	fcall	_CCP1_CaptureISR
  3253                           
  3254                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  3255     0022  282F               	goto	i1l82
  3256     0023                     i1l77:	
  3257                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.TMR2IE == 1 && PI
      +                          R1bits.TMR2IF == 1)
  3258                           
  3259     0023  1F17               	btfss	23,6	;volatile
  3260     0024  2826               	goto	u55_21
  3261     0025  2827               	goto	u55_20
  3262     0026                     u55_21:
  3263     0026  282F               	goto	i1l81
  3264     0027                     u55_20:
  3265     0027                     i1l1422:
  3266     0027  1F0D               	btfss	13,6	;volatile
  3267     0028  282A               	goto	u56_21
  3268     0029  282B               	goto	u56_20
  3269     002A                     u56_21:
  3270     002A  282F               	goto	i1l81
  3271     002B                     u56_20:
  3272     002B                     i1l1424:
  3273                           
  3274                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR2_ISR();
  3275     002B  3182  22A5  3180   	fcall	_TMR2_ISR
  3276                           
  3277                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  3278     002E  282F               	goto	i1l82
  3279     002F                     i1l81:	
  3280                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  3281                           
  3282     002F                     i1l82:
  3283     002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3284     0030  0009               	retfie
  3285     0031                     __end_of_INTERRUPT_InterruptManager:
  3286                           
  3287                           	psect	text20
  3288     02A5                     __ptext20:	
  3289 ;; *************** function _TMR2_ISR *****************
  3290 ;; Defined at:
  3291 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg, status,2, status,0, pclath, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3305 ;;      Params:         0       0       0       0
  3306 ;;      Locals:         0       0       0       0
  3307 ;;      Temps:          0       0       0       0
  3308 ;;      Totals:         0       0       0       0
  3309 ;;Total ram usage:        0 bytes
  3310 ;; Hardware stack levels used: 1
  3311 ;; Hardware stack levels required when called: 1
  3312 ;; This function calls:
  3313 ;;		NULL
  3314 ;;		_TMR2_DefaultInterruptHandler
  3315 ;;		_TMR2_EvenHandler
  3316 ;; This function is called by:
  3317 ;;		_INTERRUPT_InterruptManager
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321     02A5                     _TMR2_ISR:	
  3322                           ;psect for function _TMR2_ISR
  3323                           
  3324     02A5                     i1l1360:	
  3325                           ;incstack = 0
  3326                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  3327                           
  3328                           
  3329                           ;mcc_generated_files/tmr2.c: 169:     PIR1bits.TMR2IF = 0;
  3330     02A5  014E               	movlb	14	; select bank14
  3331     02A6  130D               	bcf	13,6	;volatile
  3332     02A7                     i1l1362:
  3333                           
  3334                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
  3335     02A7  0140               	movlb	0	; select bank0
  3336     02A8  0851               	movf	_TMR2_InterruptHandler,w
  3337     02A9  0452               	iorwf	_TMR2_InterruptHandler+1,w
  3338     02AA  1903               	btfsc	3,2
  3339     02AB  2AAD               	goto	u38_21
  3340     02AC  2AAE               	goto	u38_20
  3341     02AD                     u38_21:
  3342     02AD  2AB3               	goto	i1l282
  3343     02AE                     u38_20:
  3344     02AE                     i1l1364:
  3345                           
  3346                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
  3347     02AE  0852               	movf	_TMR2_InterruptHandler+1,w
  3348     02AF  008A               	movwf	10
  3349     02B0  0851               	movf	_TMR2_InterruptHandler,w
  3350     02B1  000A               	callw
  3351     02B2  3182               	pagesel	$
  3352     02B3                     i1l282:
  3353     02B3  0008               	return
  3354     02B4                     __end_of_TMR2_ISR:
  3355                           
  3356                           	psect	text21
  3357     030B                     __ptext21:	
  3358 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3359 ;; Defined at:
  3360 ;;		line 182 in file "mcc_generated_files/tmr2.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;		None
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;		None
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		None
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3374 ;;      Params:         0       0       0       0
  3375 ;;      Locals:         0       0       0       0
  3376 ;;      Temps:          0       0       0       0
  3377 ;;      Totals:         0       0       0       0
  3378 ;;Total ram usage:        0 bytes
  3379 ;; Hardware stack levels used: 1
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_TMR2_Initialize
  3384 ;;		_TMR2_ISR
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388     030B                     _TMR2_DefaultInterruptHandler:	
  3389                           ;psect for function _TMR2_DefaultInterruptHandler
  3390                           
  3391     030B                     i1l288:	
  3392                           ;incstack = 0
  3393                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  3394                           
  3395     030B  0008               	return
  3396     030C                     __end_of_TMR2_DefaultInterruptHandler:
  3397                           
  3398                           	psect	text22
  3399     02FD                     __ptext22:	
  3400 ;; *************** function _TMR2_EvenHandler *****************
  3401 ;; Defined at:
  3402 ;;		line 78 in file "main.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;		None
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;		None
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1    wreg      void 
  3409 ;; Registers used:
  3410 ;;		None
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3416 ;;      Params:         0       0       0       0
  3417 ;;      Locals:         0       0       0       0
  3418 ;;      Temps:          0       0       0       0
  3419 ;;      Totals:         0       0       0       0
  3420 ;;Total ram usage:        0 bytes
  3421 ;; Hardware stack levels used: 1
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_main
  3426 ;;		_TMR2_ISR
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430     02FD                     _TMR2_EvenHandler:	
  3431                           ;psect for function _TMR2_EvenHandler
  3432                           
  3433     02FD                     i1l330:	
  3434                           ;incstack = 0
  3435                           ; Regs used in _TMR2_EvenHandler: []
  3436                           ;main.c: 79:   do { LATAbits.LATA4 = 1; } while(0);
  3437                           
  3438     02FD  0140               	movlb	0	; select bank0
  3439     02FE  1618               	bsf	24,4	;volatile
  3440     02FF                     i1l332:	
  3441                           ;main.c: 80:   do { LATAbits.LATA2 = 1; } while(0);
  3442                           
  3443     02FF  1518               	bsf	24,2	;volatile
  3444     0300                     i1l334:
  3445     0300  0008               	return
  3446     0301                     __end_of_TMR2_EvenHandler:
  3447                           
  3448                           	psect	text23
  3449     02B4                     __ptext23:	
  3450 ;; *************** function _TMR0_ISR *****************
  3451 ;; Defined at:
  3452 ;;		line 121 in file "mcc_generated_files/tmr0.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;		None
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;		None
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0, pclath, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3466 ;;      Params:         0       0       0       0
  3467 ;;      Locals:         0       0       0       0
  3468 ;;      Temps:          0       0       0       0
  3469 ;;      Totals:         0       0       0       0
  3470 ;;Total ram usage:        0 bytes
  3471 ;; Hardware stack levels used: 1
  3472 ;; Hardware stack levels required when called: 1
  3473 ;; This function calls:
  3474 ;;		NULL
  3475 ;;		_TMR0_DefaultInterruptHandler
  3476 ;;		_TMR0_EvenHandler
  3477 ;; This function is called by:
  3478 ;;		_INTERRUPT_InterruptManager
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482     02B4                     _TMR0_ISR:	
  3483                           ;psect for function _TMR0_ISR
  3484                           
  3485     02B4                     i1l1348:	
  3486                           ;incstack = 0
  3487                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3488                           
  3489                           
  3490                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
  3491     02B4  014E               	movlb	14	; select bank14
  3492     02B5  128C               	bcf	12,5	;volatile
  3493     02B6                     i1l1350:
  3494                           
  3495                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
  3496     02B6  0140               	movlb	0	; select bank0
  3497     02B7  0855               	movf	_TMR0_InterruptHandler,w
  3498     02B8  0456               	iorwf	_TMR0_InterruptHandler+1,w
  3499     02B9  1903               	btfsc	3,2
  3500     02BA  2ABC               	goto	u37_21
  3501     02BB  2ABD               	goto	u37_20
  3502     02BC                     u37_21:
  3503     02BC  2AC2               	goto	i1l124
  3504     02BD                     u37_20:
  3505     02BD                     i1l1352:
  3506                           
  3507                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
  3508     02BD  0856               	movf	_TMR0_InterruptHandler+1,w
  3509     02BE  008A               	movwf	10
  3510     02BF  0855               	movf	_TMR0_InterruptHandler,w
  3511     02C0  000A               	callw
  3512     02C1  3182               	pagesel	$
  3513     02C2                     i1l124:
  3514     02C2  0008               	return
  3515     02C3                     __end_of_TMR0_ISR:
  3516                           
  3517                           	psect	text24
  3518     030C                     __ptext24:	
  3519 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3520 ;; Defined at:
  3521 ;;		line 138 in file "mcc_generated_files/tmr0.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		None
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3535 ;;      Params:         0       0       0       0
  3536 ;;      Locals:         0       0       0       0
  3537 ;;      Temps:          0       0       0       0
  3538 ;;      Totals:         0       0       0       0
  3539 ;;Total ram usage:        0 bytes
  3540 ;; Hardware stack levels used: 1
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_TMR0_Initialize
  3545 ;;		_TMR0_ISR
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549     030C                     _TMR0_DefaultInterruptHandler:	
  3550                           ;psect for function _TMR0_DefaultInterruptHandler
  3551                           
  3552     030C                     i1l130:	
  3553                           ;incstack = 0
  3554                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  3555                           
  3556     030C  0008               	return
  3557     030D                     __end_of_TMR0_DefaultInterruptHandler:
  3558                           
  3559                           	psect	text25
  3560     0301                     __ptext25:	
  3561 ;; *************** function _TMR0_EvenHandler *****************
  3562 ;; Defined at:
  3563 ;;		line 72 in file "main.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;		None
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		None
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3577 ;;      Params:         0       0       0       0
  3578 ;;      Locals:         0       0       0       0
  3579 ;;      Temps:          0       0       0       0
  3580 ;;      Totals:         0       0       0       0
  3581 ;;Total ram usage:        0 bytes
  3582 ;; Hardware stack levels used: 1
  3583 ;; This function calls:
  3584 ;;		Nothing
  3585 ;; This function is called by:
  3586 ;;		_main
  3587 ;;		_TMR0_ISR
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591     0301                     _TMR0_EvenHandler:	
  3592                           ;psect for function _TMR0_EvenHandler
  3593                           
  3594     0301                     i1l323:	
  3595                           ;incstack = 0
  3596                           ; Regs used in _TMR0_EvenHandler: []
  3597                           ;main.c: 73:   do { LATAbits.LATA4 = 0; } while(0);
  3598                           
  3599     0301  0140               	movlb	0	; select bank0
  3600     0302  1218               	bcf	24,4	;volatile
  3601     0303                     i1l325:	
  3602                           ;main.c: 74:   do { LATAbits.LATA2 = 0; } while(0);
  3603                           
  3604     0303  1118               	bcf	24,2	;volatile
  3605     0304                     i1l327:
  3606     0304  0008               	return
  3607     0305                     __end_of_TMR0_EvenHandler:
  3608                           
  3609                           	psect	text26
  3610     0271                     __ptext26:	
  3611 ;; *************** function _CCP1_CaptureISR *****************
  3612 ;; Defined at:
  3613 ;;		line 92 in file "mcc_generated_files/ccp1.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;		None
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  module          2    5[COMMON] struct CCPR1Reg_tag
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      void 
  3620 ;; Registers used:
  3621 ;;		wreg, status,2, status,0, pclath, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3627 ;;      Params:         0       0       0       0
  3628 ;;      Locals:         2       0       0       0
  3629 ;;      Temps:          0       0       0       0
  3630 ;;      Totals:         2       0       0       0
  3631 ;;Total ram usage:        2 bytes
  3632 ;; Hardware stack levels used: 1
  3633 ;; Hardware stack levels required when called: 2
  3634 ;; This function calls:
  3635 ;;		NULL
  3636 ;;		_CCP1_DefaultCallBack
  3637 ;;		_CCP1_EvenCallBack
  3638 ;; This function is called by:
  3639 ;;		_INTERRUPT_InterruptManager
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643     0271                     _CCP1_CaptureISR:	
  3644                           ;psect for function _CCP1_CaptureISR
  3645                           
  3646     0271                     i1l1354:	
  3647                           ;incstack = 0
  3648                           ; Regs used in _CCP1_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
  3649                           
  3650                           
  3651                           ;mcc_generated_files/ccp1.c: 94:     CCP1_PERIOD_REG_T module;;mcc_generated_files/ccp1.
      +                          c: 97:     PIR1bits.CCP1IF = 0;
  3652     0271  014E               	movlb	14	; select bank14
  3653     0272  138D               	bcf	13,7	;volatile
  3654     0273                     i1l1356:
  3655                           
  3656                           ;mcc_generated_files/ccp1.c: 100:     module.ccpr1l = CCPR1L;
  3657     0273  0146               	movlb	6	; select bank6
  3658     0274  080C               	movf	12,w	;volatile
  3659     0275  00FC               	movwf	CCP1_CaptureISR@module
  3660                           
  3661                           ;mcc_generated_files/ccp1.c: 101:     module.ccpr1h = CCPR1H;
  3662     0276  080D               	movf	13,w	;volatile
  3663     0277  00FD               	movwf	CCP1_CaptureISR@module+1
  3664     0278                     i1l1358:
  3665                           
  3666                           ;mcc_generated_files/ccp1.c: 104:     CCP1_CallBack(module.ccpr1_16Bit);
  3667     0278  087D               	movf	CCP1_CaptureISR@module+1,w
  3668     0279  00F9               	movwf	CCP1_EvenCallBack@captured+1
  3669     027A  087C               	movf	CCP1_CaptureISR@module,w
  3670     027B  00F8               	movwf	CCP1_EvenCallBack@captured
  3671     027C  0140               	movlb	0	; select bank0
  3672     027D  0854               	movf	_CCP1_CallBack+1,w
  3673     027E  008A               	movwf	10
  3674     027F  0853               	movf	_CCP1_CallBack,w
  3675     0280  000A               	callw
  3676     0281  3182               	pagesel	$
  3677     0282                     i1l204:
  3678     0282  0008               	return
  3679     0283                     __end_of_CCP1_CaptureISR:
  3680                           
  3681                           	psect	text27
  3682     030D                     __ptext27:	
  3683 ;; *************** function _CCP1_DefaultCallBack *****************
  3684 ;; Defined at:
  3685 ;;		line 60 in file "mcc_generated_files/ccp1.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  capturedValu    2    1[COMMON] unsigned short 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		None
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3699 ;;      Params:         2       0       0       0
  3700 ;;      Locals:         0       0       0       0
  3701 ;;      Temps:          0       0       0       0
  3702 ;;      Totals:         2       0       0       0
  3703 ;;Total ram usage:        2 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_CCP1_Initialize
  3709 ;;		_CCP1_CaptureISR
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713     030D                     _CCP1_DefaultCallBack:	
  3714                           ;psect for function _CCP1_DefaultCallBack
  3715                           
  3716     030D                     i1l198:	
  3717                           ;incstack = 0
  3718                           ; Regs used in _CCP1_DefaultCallBack: []
  3719                           
  3720     030D  0008               	return
  3721     030E                     __end_of_CCP1_DefaultCallBack:
  3722                           
  3723                           	psect	text28
  3724     00FC                     __ptext28:	
  3725 ;; *************** function _CCP1_EvenCallBack *****************
  3726 ;; Defined at:
  3727 ;;		line 84 in file "main.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  captured        2    1[COMMON] unsigned short 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;		None
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      void 
  3734 ;; Registers used:
  3735 ;;		wreg, status,2, status,0, pclath, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3741 ;;      Params:         2       0       0       0
  3742 ;;      Locals:         0       0       0       0
  3743 ;;      Temps:          2       0       0       0
  3744 ;;      Totals:         4       0       0       0
  3745 ;;Total ram usage:        4 bytes
  3746 ;; Hardware stack levels used: 1
  3747 ;; Hardware stack levels required when called: 1
  3748 ;; This function calls:
  3749 ;;		i1_TMR0_WriteTimer
  3750 ;; This function is called by:
  3751 ;;		_main
  3752 ;;		_CCP1_CaptureISR
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756     00FC                     _CCP1_EvenCallBack:	
  3757                           ;psect for function _CCP1_EvenCallBack
  3758                           
  3759     00FC                     i1l1302:	
  3760                           ;incstack = 0
  3761                           ; Regs used in _CCP1_EvenCallBack: [wreg+status,2+status,0+pclath+cstack]
  3762                           
  3763                           
  3764                           ;main.c: 85:   static uint16_t pluse_width_LO = 0;;main.c: 86:   static uint16_t pluse_w
      +                          idth_HI = 0;;main.c: 88:   static uint16_t HI_us = 0;;main.c: 89:   static uint16_t LO_u
      +                          s = 0;;main.c: 90:   static uint16_t falling_edge_time = 0;;main.c: 91:   static uint16_
      +                          t rising_edge_time = 0;;main.c: 92:   static _Bool rise_edge_flag = 0;;main.c: 95:   if 
      +                          (CCP1CON == 0x84) {
  3765     00FC  3084               	movlw	132
  3766     00FD  0146               	movlb	6	; select bank6
  3767     00FE  060E               	xorwf	14,w	;volatile
  3768     00FF  1D03               	btfss	3,2
  3769     0100  2902               	goto	u32_21
  3770     0101  2903               	goto	u32_20
  3771     0102                     u32_21:
  3772     0102  2959               	goto	i1l1320
  3773     0103                     u32_20:
  3774     0103                     i1l1304:
  3775                           
  3776                           ;main.c: 96:     falling_edge_time = captured;
  3777     0103  0879               	movf	CCP1_EvenCallBack@captured+1,w
  3778     0104  00F3               	movwf	CCP1_EvenCallBack@falling_edge_time+1
  3779     0105  0878               	movf	CCP1_EvenCallBack@captured,w
  3780     0106  00F2               	movwf	CCP1_EvenCallBack@falling_edge_time
  3781                           
  3782                           ;main.c: 97:     CCP1CON = 0x85;
  3783     0107  3085               	movlw	133
  3784     0108  008E               	movwf	14	;volatile
  3785     0109                     i1l1306:
  3786                           
  3787                           ;main.c: 98:     if (rise_edge_flag == 1) {
  3788     0109  0376               	decf	CCP1_EvenCallBack@rise_edge_flag,w
  3789     010A  1D03               	btfss	3,2
  3790     010B  290D               	goto	u33_21
  3791     010C  290E               	goto	u33_20
  3792     010D                     u33_21:
  3793     010D  298D               	goto	i1l361
  3794     010E                     u33_20:
  3795     010E                     i1l1308:
  3796                           
  3797                           ;main.c: 99:       rise_edge_flag = 0;
  3798     010E  01F6               	clrf	CCP1_EvenCallBack@rise_edge_flag
  3799     010F                     i1l1310:
  3800                           
  3801                           ;main.c: 101:       if (falling_edge_time >= rising_edge_time) {
  3802     010F  0871               	movf	CCP1_EvenCallBack@rising_edge_time+1,w
  3803     0110  0273               	subwf	CCP1_EvenCallBack@falling_edge_time+1,w
  3804     0111  1D03               	skipz
  3805     0112  2915               	goto	u34_25
  3806     0113  0870               	movf	CCP1_EvenCallBack@rising_edge_time,w
  3807     0114  0272               	subwf	CCP1_EvenCallBack@falling_edge_time,w
  3808     0115                     u34_25:
  3809     0115  1C03               	skipc
  3810     0116  2918               	goto	u34_21
  3811     0117  2919               	goto	u34_20
  3812     0118                     u34_21:
  3813     0118  2921               	goto	i1l1314
  3814     0119                     u34_20:
  3815     0119                     i1l1312:
  3816                           
  3817                           ;main.c: 102:         pluse_width_HI = falling_edge_time - rising_edge_time;
  3818     0119  0870               	movf	CCP1_EvenCallBack@rising_edge_time,w
  3819     011A  0272               	subwf	CCP1_EvenCallBack@falling_edge_time,w
  3820     011B  0140               	movlb	0	; select bank0
  3821     011C  00C6               	movwf	CCP1_EvenCallBack@pluse_width_HI
  3822     011D  0871               	movf	CCP1_EvenCallBack@rising_edge_time+1,w
  3823     011E  3B73               	subwfb	CCP1_EvenCallBack@falling_edge_time+1,w
  3824     011F  00C7               	movwf	CCP1_EvenCallBack@pluse_width_HI+1
  3825                           
  3826                           ;main.c: 103:       } else {
  3827     0120  292E               	goto	i1l354
  3828     0121                     i1l1314:
  3829                           
  3830                           ;main.c: 104:         pluse_width_HI = (0xffff - rising_edge_time) + falling_edge_time;
  3831     0121  0871               	movf	CCP1_EvenCallBack@rising_edge_time+1,w
  3832     0122  00FB               	movwf	??_CCP1_EvenCallBack+1
  3833     0123  0870               	movf	CCP1_EvenCallBack@rising_edge_time,w
  3834     0124  00FA               	movwf	??_CCP1_EvenCallBack
  3835     0125  09FA               	comf	??_CCP1_EvenCallBack,f
  3836     0126  09FB               	comf	??_CCP1_EvenCallBack+1,f
  3837     0127  0872               	movf	CCP1_EvenCallBack@falling_edge_time,w
  3838     0128  077A               	addwf	??_CCP1_EvenCallBack,w
  3839     0129  0140               	movlb	0	; select bank0
  3840     012A  00C6               	movwf	CCP1_EvenCallBack@pluse_width_HI
  3841     012B  0873               	movf	CCP1_EvenCallBack@falling_edge_time+1,w
  3842     012C  3D7B               	addwfc	??_CCP1_EvenCallBack+1,w
  3843     012D  00C7               	movwf	CCP1_EvenCallBack@pluse_width_HI+1
  3844     012E                     i1l354:	
  3845                           ;main.c: 105:       }
  3846                           
  3847                           
  3848                           ;main.c: 106:       LO_us = (pluse_width_LO >> 3);
  3849     012E  0849               	movf	CCP1_EvenCallBack@pluse_width_LO+1,w
  3850     012F  00FB               	movwf	??_CCP1_EvenCallBack+1
  3851     0130  0848               	movf	CCP1_EvenCallBack@pluse_width_LO,w
  3852     0131  00FA               	movwf	??_CCP1_EvenCallBack
  3853     0132  36FB               	lsrf	??_CCP1_EvenCallBack+1,f
  3854     0133  0CFA               	rrf	??_CCP1_EvenCallBack,f
  3855     0134  36FB               	lsrf	??_CCP1_EvenCallBack+1,f
  3856     0135  0CFA               	rrf	??_CCP1_EvenCallBack,f
  3857     0136  36FB               	lsrf	??_CCP1_EvenCallBack+1,f
  3858     0137  0CFA               	rrf	??_CCP1_EvenCallBack,f
  3859     0138  087A               	movf	??_CCP1_EvenCallBack,w
  3860     0139  00C2               	movwf	CCP1_EvenCallBack@LO_us
  3861     013A  087B               	movf	??_CCP1_EvenCallBack+1,w
  3862     013B  00C3               	movwf	CCP1_EvenCallBack@LO_us+1
  3863                           
  3864                           ;main.c: 107:       HI_us = (pluse_width_HI >> 3);
  3865     013C  0847               	movf	CCP1_EvenCallBack@pluse_width_HI+1,w
  3866     013D  00FB               	movwf	??_CCP1_EvenCallBack+1
  3867     013E  0846               	movf	CCP1_EvenCallBack@pluse_width_HI,w
  3868     013F  00FA               	movwf	??_CCP1_EvenCallBack
  3869     0140  36FB               	lsrf	??_CCP1_EvenCallBack+1,f
  3870     0141  0CFA               	rrf	??_CCP1_EvenCallBack,f
  3871     0142  36FB               	lsrf	??_CCP1_EvenCallBack+1,f
  3872     0143  0CFA               	rrf	??_CCP1_EvenCallBack,f
  3873     0144  36FB               	lsrf	??_CCP1_EvenCallBack+1,f
  3874     0145  0CFA               	rrf	??_CCP1_EvenCallBack,f
  3875     0146  087A               	movf	??_CCP1_EvenCallBack,w
  3876     0147  00C4               	movwf	CCP1_EvenCallBack@HI_us
  3877     0148  087B               	movf	??_CCP1_EvenCallBack+1,w
  3878     0149  00C5               	movwf	CCP1_EvenCallBack@HI_us+1
  3879                           
  3880                           ;main.c: 108:       cycle_time = HI_us + LO_us;
  3881     014A  0842               	movf	CCP1_EvenCallBack@LO_us,w
  3882     014B  0744               	addwf	CCP1_EvenCallBack@HI_us,w
  3883     014C  00CD               	movwf	_cycle_time
  3884     014D  0843               	movf	CCP1_EvenCallBack@LO_us+1,w
  3885     014E  3D45               	addwfc	CCP1_EvenCallBack@HI_us+1,w
  3886     014F  00CE               	movwf	_cycle_time+1
  3887     0150  01CF               	clrf	_cycle_time+2
  3888     0151  01D0               	clrf	_cycle_time+3
  3889     0152                     i1l1316:
  3890                           
  3891                           ;main.c: 109:       HI_time = HI_us;
  3892     0152  0845               	movf	CCP1_EvenCallBack@HI_us+1,w
  3893     0153  00CB               	movwf	_HI_time+1
  3894     0154  0844               	movf	CCP1_EvenCallBack@HI_us,w
  3895     0155  00CA               	movwf	_HI_time
  3896     0156                     i1l1318:
  3897                           
  3898                           ;main.c: 110:       fpluseOK = 1;
  3899     0156  01CC               	clrf	_fpluseOK
  3900     0157  0ACC               	incf	_fpluseOK,f
  3901     0158  298D               	goto	i1l361
  3902     0159                     i1l1320:
  3903     0159  3085               	movlw	133
  3904     015A  060E               	xorwf	14,w	;volatile
  3905     015B  1D03               	btfss	3,2
  3906     015C  295E               	goto	u35_21
  3907     015D  295F               	goto	u35_20
  3908     015E                     u35_21:
  3909     015E  298D               	goto	i1l361
  3910     015F                     u35_20:
  3911     015F                     i1l357:	
  3912                           ;main.c: 116:     do { LATAbits.LATA4 = 1; } while(0);
  3913                           
  3914     015F  0140               	movlb	0	; select bank0
  3915     0160  1618               	bsf	24,4	;volatile
  3916     0161                     i1l1322:
  3917                           
  3918                           ;main.c: 117:     TMR0_WriteTimer(0);
  3919     0161  3000               	movlw	0
  3920     0162  3182  22F4  3180   	fcall	i1_TMR0_WriteTimer
  3921     0165                     i1l1324:
  3922                           
  3923                           ;main.c: 118:     rising_edge_time = captured;
  3924     0165  0879               	movf	CCP1_EvenCallBack@captured+1,w
  3925     0166  00F1               	movwf	CCP1_EvenCallBack@rising_edge_time+1
  3926     0167  0878               	movf	CCP1_EvenCallBack@captured,w
  3927     0168  00F0               	movwf	CCP1_EvenCallBack@rising_edge_time
  3928     0169                     i1l1326:
  3929                           
  3930                           ;main.c: 119:     CCP1CON = 0x84;
  3931     0169  3084               	movlw	132
  3932     016A  0146               	movlb	6	; select bank6
  3933     016B  008E               	movwf	14	;volatile
  3934     016C                     i1l1328:
  3935                           
  3936                           ;main.c: 121:     if (rising_edge_time >= falling_edge_time) {
  3937     016C  0873               	movf	CCP1_EvenCallBack@falling_edge_time+1,w
  3938     016D  0271               	subwf	CCP1_EvenCallBack@rising_edge_time+1,w
  3939     016E  1D03               	skipz
  3940     016F  2972               	goto	u36_25
  3941     0170  0872               	movf	CCP1_EvenCallBack@falling_edge_time,w
  3942     0171  0270               	subwf	CCP1_EvenCallBack@rising_edge_time,w
  3943     0172                     u36_25:
  3944     0172  1C03               	skipc
  3945     0173  2975               	goto	u36_21
  3946     0174  2976               	goto	u36_20
  3947     0175                     u36_21:
  3948     0175  297E               	goto	i1l1332
  3949     0176                     u36_20:
  3950     0176                     i1l1330:
  3951                           
  3952                           ;main.c: 122:       pluse_width_LO = rising_edge_time - falling_edge_time;
  3953     0176  0872               	movf	CCP1_EvenCallBack@falling_edge_time,w
  3954     0177  0270               	subwf	CCP1_EvenCallBack@rising_edge_time,w
  3955     0178  0140               	movlb	0	; select bank0
  3956     0179  00C8               	movwf	CCP1_EvenCallBack@pluse_width_LO
  3957     017A  0873               	movf	CCP1_EvenCallBack@falling_edge_time+1,w
  3958     017B  3B71               	subwfb	CCP1_EvenCallBack@rising_edge_time+1,w
  3959     017C  00C9               	movwf	CCP1_EvenCallBack@pluse_width_LO+1
  3960                           
  3961                           ;main.c: 123:     } else {
  3962     017D  298B               	goto	i1l1334
  3963     017E                     i1l1332:
  3964                           
  3965                           ;main.c: 124:       pluse_width_LO = (0xffff - falling_edge_time) + rising_edge_time;
  3966     017E  0873               	movf	CCP1_EvenCallBack@falling_edge_time+1,w
  3967     017F  00FB               	movwf	??_CCP1_EvenCallBack+1
  3968     0180  0872               	movf	CCP1_EvenCallBack@falling_edge_time,w
  3969     0181  00FA               	movwf	??_CCP1_EvenCallBack
  3970     0182  09FA               	comf	??_CCP1_EvenCallBack,f
  3971     0183  09FB               	comf	??_CCP1_EvenCallBack+1,f
  3972     0184  0870               	movf	CCP1_EvenCallBack@rising_edge_time,w
  3973     0185  077A               	addwf	??_CCP1_EvenCallBack,w
  3974     0186  0140               	movlb	0	; select bank0
  3975     0187  00C8               	movwf	CCP1_EvenCallBack@pluse_width_LO
  3976     0188  0871               	movf	CCP1_EvenCallBack@rising_edge_time+1,w
  3977     0189  3D7B               	addwfc	??_CCP1_EvenCallBack+1,w
  3978     018A  00C9               	movwf	CCP1_EvenCallBack@pluse_width_LO+1
  3979     018B                     i1l1334:
  3980                           
  3981                           ;main.c: 126:     rise_edge_flag = 1;
  3982     018B  01F6               	clrf	CCP1_EvenCallBack@rise_edge_flag
  3983     018C  0AF6               	incf	CCP1_EvenCallBack@rise_edge_flag,f
  3984     018D                     i1l361:
  3985     018D  0008               	return
  3986     018E                     __end_of_CCP1_EvenCallBack:
  3987                           
  3988                           	psect	text29
  3989     02F4                     __ptext29:	
  3990 ;; *************** function i1_TMR0_WriteTimer *****************
  3991 ;; Defined at:
  3992 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  timerVal        1    wreg     unsigned char 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  timerVal        1    0[COMMON] unsigned char 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		wreg
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4006 ;;      Params:         0       0       0       0
  4007 ;;      Locals:         1       0       0       0
  4008 ;;      Temps:          0       0       0       0
  4009 ;;      Totals:         1       0       0       0
  4010 ;;Total ram usage:        1 bytes
  4011 ;; Hardware stack levels used: 1
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_CCP1_EvenCallBack
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019     02F4                     i1_TMR0_WriteTimer:	
  4020                           ;psect for function i1_TMR0_WriteTimer
  4021                           
  4022                           
  4023                           ;incstack = 0
  4024                           ; Regs used in i1_TMR0_WriteTimer: [wreg]
  4025                           ;i1TMR0_WriteTimer@timerVal stored from wreg
  4026     02F4  00F7               	movwf	i1TMR0_WriteTimer@timerVal
  4027     02F5                     i1l1220:
  4028                           
  4029                           ;mcc_generated_files/tmr0.c: 109: void TMR0_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr0.c: 110: {;mcc_generated_files/tmr0.c: 112:     TMR0L = timerVal;
  4030     02F5  0877               	movf	i1TMR0_WriteTimer@timerVal,w
  4031     02F6  014B               	movlb	11	; select bank11
  4032     02F7  009C               	movwf	28	;volatile
  4033     02F8                     i1l117:
  4034     02F8  0008               	return
  4035     02F9                     __end_ofi1_TMR0_WriteTimer:
  4036     007E                     btemp	set	126	;btemp
  4037     007E                     int$flags	set	126
  4038     007E                     wtemp0	set	126
  4039                           
  4040                           	psect	config
  4041                           
  4042                           ;Config register CONFIG1 @ 0x8007
  4043                           ;	External Oscillator Mode Selection bits
  4044                           ;	FEXTOSC = OFF, Oscillator not enabled
  4045                           ;	Power-up Default Value for COSC bits
  4046                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  4047                           ;	Clock Out Enable bit
  4048                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  4049                           ;	VDD Range Analog Calibration Selection bit
  4050                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  4051     8007                     	org	32775
  4052     8007  3FCD               	dw	16333
  4053                           
  4054                           ;Config register CONFIG2 @ 0x8008
  4055                           ;	Master Clear Enable bit
  4056                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  4057                           ;	Power-up Timer Selection bits
  4058                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4059                           ;	WDT Operating Mode bits
  4060                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  4061                           ;	Brown-out Reset Enable bits
  4062                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  4063                           ;	Brown-out Reset Voltage Selection bit
  4064                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  4065                           ;	PPSLOCKED One-Way Set Enable bit
  4066                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  4067                           ;	Stack Overflow/Underflow Reset Enable bit
  4068                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4069     8008                     	org	32776
  4070     8008  3FE7               	dw	16359
  4071                           
  4072                           ;Config register CONFIG4 @ 0x800A
  4073                           ;	Boot Block Size Selection bits
  4074                           ;	BBSIZE = BB512, 512 words boot block size
  4075                           ;	Boot Block Enable bit
  4076                           ;	BBEN = OFF, Boot Block is disabled
  4077                           ;	SAF Enable bit
  4078                           ;	SAFEN = OFF, SAF is disabled
  4079                           ;	Application Block Write Protection bit
  4080                           ;	WRTAPP = OFF, Application Block is not write-protected
  4081                           ;	Boot Block Write Protection bit
  4082                           ;	WRTB = OFF, Boot Block is not write-protected
  4083                           ;	Configuration Registers Write Protection bit
  4084                           ;	WRTC = OFF, Configuration Registers are not write-protected
  4085                           ;	Storage Area Flash (SAF) Write Protection bit
  4086                           ;	WRTSAF = OFF, SAF is not write-protected
  4087                           ;	Low Voltage Programming Enable bit
  4088                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
  4089     800A                     	org	32778
  4090     800A  1FFF               	dw	8191
  4091                           
  4092                           ;Config register CONFIG5 @ 0x800B
  4093                           ;	User Program Flash Memory Code Protection bit
  4094                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  4095     800B                     	org	32779
  4096     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         30
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     26      55
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), CCP1_EvenCallBack(), NULL(), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), CCP1_EvenCallBack(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), TMR0_EvenHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), TMR0_EvenHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), TMR2_EvenHandler(), NULL(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), TMR2_EvenHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _CCP1_CaptureISR->_CCP1_EvenCallBack
    _CCP1_EvenCallBack->i1_TMR0_WriteTimer

Critical Paths under _main in BANK0

    _main->___lldiv
    ___lldiv->___lmul
    _TMR2_WriteTimer->_TMR2_Counter8BitSet
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _CCP1_Initialize->_CCP1_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2141
                   _CCP1_SetCallBack
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                    _TMR2_WriteTimer
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     316
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     466
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR2_WriteTimer                                      1     1      0      62
                                              1 BANK0      1     1      0
                _TMR2_Counter8BitSet
 ---------------------------------------------------------------------------------
 (2) _TMR2_Counter8BitSet                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (2) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     633
                    _CCP1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0     211
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP1_SetCallBack                                     2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     166
                    _CCP1_CaptureISR
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                                NULL *
       _TMR2_DefaultInterruptHandler *
                   _TMR2_EvenHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR2_EvenHandler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
                   _TMR0_EvenHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_EvenHandler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CCP1_CaptureISR                                      2     2      0     166
                                              5 COMMON     2     2      0
                                NULL *
               _CCP1_DefaultCallBack *
                  _CCP1_EvenCallBack *
 ---------------------------------------------------------------------------------
 (6) _CCP1_EvenCallBack                                    4     2      2     119
                                              1 COMMON     4     2      2
                  i1_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (7) i1_TMR0_WriteTimer                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _CCP1_DefaultCallBack                                 2     0      2       0
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP1_SetCallBack
   _SYSTEM_Initialize
     _CCP1_Initialize
       _CCP1_SetCallBack
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _TMR2_SetInterruptHandler
   _TMR2_StartTimer
     _TMR2_Start
   _TMR2_WriteTimer
     _TMR2_Counter8BitSet
   ___lldiv
     ___lmul (ARG)
   ___lmul

 _INTERRUPT_InterruptManager (ROOT)
   _CCP1_CaptureISR
     NULL(Fake) *
     _CCP1_DefaultCallBack *
     _CCP1_EvenCallBack *
       i1_TMR0_WriteTimer
   _TMR0_ISR
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_EvenHandler *
   _TMR2_ISR
     NULL(Fake) *
     _TMR2_DefaultInterruptHandler *
     _TMR2_EvenHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      37       5       68.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      45      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      45      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 14 14:18:59 2025

        __end_of_TMR2_SetInterruptHandler 02E2                                        l31 030A  
                                      l25 0249                                        l50 02A4  
                                      l28 02ED                   __end_of_CCP1_Initialize 0271  
                                     l201 0270                                       l105 025E  
                                     l117 02DB                                       l207 02F3  
                                     l127 02E7                                       l153 0293  
                                     l242 0233                                       l251 0307  
                                     l254 02FC                                       l272 02C9  
                                     l372 00F2                                       l285 02E1  
                                     l269 02D5                                       l375 00F5  
                                     l464 021C                                       l378 00F8  
                                     l486 01E8                                       u430 019F  
                                     _PR2 028D                                       u431 019E  
                                     u450 01B1                                       u451 01B0  
                                     u620 01F6                                       u700 00F2  
                                     u445 01A3                                       u621 01F5  
                                     u701 00F1                                       u470 01CA  
                                     u471 01C9                                       u465 01B2  
                                     u490 01E0                                       u650 0214  
                                     u491 01DF                                       u475 01C6  
                                     u651 0213                                       u635 01FF  
                                     u660 0069                                       u485 01D4  
                                     u645 0206                                       u661 0068  
                                     u670 0078                                       u671 0077  
                                     u680 00A4                                       u681 00A3  
                                     u690 00B4                                       u691 00B3  
                         _timer1ReloadVal 0074                           _TMR2_Initialize 021D  
                                     wreg 0009        CCP1_EvenCallBack@falling_edge_time 0072  
                                    l1400 01D2                                      l1402 01D3  
                                    l1500 0224                                      l1404 01DA  
                                    l1510 0283                                      l1502 0225  
                                    l1406 01E0                                      l1520 028C  
                                    l1512 0286                                      l1504 0227  
                                    l1530 0252                                      l1522 0291  
                                    l1514 0288                                      l1506 0228  
                                    l1460 0294                                      l1532 0253  
                                    l1524 024A                                      l1516 0289  
                                    l1508 0230                                      l1540 0234  
                                    l1470 02A1                                      l1462 0296  
                                    l1454 02E2                                      l1534 025B  
                                    l1526 024F                                      l1518 028A  
                                    l1550 0246                                      l1542 023A  
                                    l1390 01A2                                      l1456 02EE  
                                    l1480 025F                                      l1472 02E8  
                                    l1464 0298                                      l1528 0250  
                                    l1544 023D                                      l1552 02D8  
                                    l1536 0305                                      l1392 01AD  
                                    l1560 01F2                                      l1490 026D  
                                    l1482 0262                                      l1474 02EA  
                                    l1466 029D                                      l1458 02DC  
                                    l1546 0240                                      l1554 02F9  
                                    l1538 02D2                                      l1394 01B1  
                                    l1386 018E                                      l1562 01F6  
                                    l1492 026F                                      l1484 0263  
                                    l1476 02EC                                      l1468 029F  
                                    l1548 0243                                      l1556 02C5  
                                    l1396 01B8                                      l1388 019F  
                                    l1564 01FE                                      l1580 0064  
                                    l1572 0044                                      l1486 0264  
                                    l1494 021D                                      l1478 0308  
                                    l1398 01CA                                      l1566 0205  
                                    l1558 01E9                                      l1590 0079  
                                    l1582 0069                                      l1574 005F  
                                    l1488 0265                                      l1496 0220  
                                    l1568 0214                                      l1592 0095  
                                    l1584 006E                                      l1576 0060  
                                    l1498 0221                                      l1594 00A4  
                                    l1586 0072                                      l1578 0061  
                                    l1596 00B4                                      l1588 0078  
                                    l1598 00E3                                      _LATA 0018  
                                    _T2PR 028D                                      i1l81 002F  
                                    i1l82 002F                                      i1l74 0013  
                                    i1l77 0023                                      _TMR2 028C  
                                    _WPUA 1F39                              _PWM_Frequent 003E  
                                    _main 0044                                      fsr0h 0005  
                                    indf0 0000                                      fsr0l 0004  
                                    btemp 007E                                      start 0031  
                __end_of_CCP1_SetCallBack 02F4                       _TMR2_Counter8BitSet 02D0  
                        ?_CCP1_CaptureISR 0077                   __end_of_TMR0_Initialize 025F  
          ??_TMR0_DefaultInterruptHandler 0077             __end_of_OSCILLATOR_Initialize 02EE  
                                   ?_main 0077                           __end_of___lldiv 01E9  
                                   _T1CLK 0211                                     _T1CON 020E  
                                   _T2CON 028E                                     _T2HLT 028F  
                                   i1l130 030C                                     i1l204 0282  
                                   i1l124 02C2                                     _T2TMR 028C  
                                   i1l117 02F8                                     i1l330 02FD  
                                   _T2RST 0291                                     i1l323 0301  
                                   i1l332 02FF                                     i1l325 0303  
                                   i1l334 0300                                     i1l327 0304  
                                   i1l361 018D                                     i1l354 012E  
                                   i1l282 02B3                                     i1l357 015F  
                                   i1l198 030D                                     i1l288 030B  
                         _TMR0_WriteTimer 02D6                  __end_of_TMR0_EvenHandler 0305  
                                   _OSCEN 0891                                     u32_20 0103  
                                   u32_21 0102                                     u33_20 010E  
                                   _TMR0H 059D                                     u33_21 010D  
                                   _TMR1H 020D                                     _TMR0L 059C  
                                   _TMR1L 020C                                     u34_20 0119  
                                   u50_20 000B                                     u34_21 0118  
                                   u50_21 000A                                     u34_25 0115  
                                   u35_20 015F                                     u51_20 000F  
                                   u35_21 015E                                     u51_21 000E  
                                   u36_20 0176                                     u52_20 0017  
                                   u36_21 0175                                     u52_21 0016  
                                   u36_25 0172                                     u37_20 02BD  
                                   u53_20 001B                                     u37_21 02BC  
                                   u53_21 001A                                     u38_20 02AE  
                                   u54_20 001F                                     u38_21 02AD  
                                   u54_21 001E                                     u55_20 0027  
                                   u55_21 0026                                     u56_20 002B  
                                   u56_21 002A                                     _TRISA 0012  
                     ___lmul@multiplicand 0024                 ?_TMR0_SetInterruptHandler 0020  
                    ?_TMR2_Counter8BitSet 0077                          __end_of_TMR0_ISR 02C3  
                        __end_of_TMR2_ISR 02B4                               ?_TMR2_Start 0077  
                          _WDT_Initialize 0308                   __end_of_TMR1_Initialize 0294  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           _TMR2_StartTimer 02F9  
                         __initialization 0032                              __end_of_main 00FC  
                 __end_of_TMR2_Initialize 0234               ?_INTERRUPT_InterruptManager 0077  
                _TMR2_SetInterruptHandler 02DC                                    ??_main 003A  
                        ?_CCP1_Initialize 0077                           _TMR2_WriteTimer 02C3  
                   ??_TMR2_Counter8BitSet 0020                    __end_of_WDT_Initialize 030B  
                                  _CCPR1H 030D                                    _CCPR1L 030C  
                                  _ANSELA 1F38                                    _T0CON0 059E  
                                  _T0CON1 059F                                    _T1GATE 0210  
                                  _T1GCON 020F                                    i1l1220 02F5  
                                  i1l1310 010F                                    i1l1302 00FC  
                                  i1l1312 0119                                    i1l1304 0103  
                                  i1l1320 0159                                    i1l1330 0176  
                                  i1l1322 0161                                    i1l1314 0121  
                                  i1l1306 0109                                    i1l1410 0006  
                                  i1l1332 017E                                    i1l1324 0165  
                                  i1l1316 0152                                    i1l1308 010E  
                                  i1l1420 001F                                    i1l1412 000B  
                                  i1l1334 018B                                    i1l1326 0169  
                                  i1l1318 0156                                    i1l1350 02B6  
                                  i1l1422 0027                                    i1l1414 000F  
                                  i1l1328 016C                                    i1l1352 02BD  
                                  i1l1360 02A5                                    i1l1424 002B  
                                  i1l1416 0017                                    _ODCONA 1F3A  
                                  i1l1354 0271                                    i1l1362 02A7  
                                  i1l1418 001B                                    i1l1356 0273  
                                  i1l1348 02B4                                    i1l1364 02AE  
                                  i1l1358 0278                                    _INLVLA 1F3C  
                                  _OSCFRQ 0893                                    _WDTCON 080C  
                           _CCP1_CallBack 0053                                    ___lmul 01E9  
                 __end_of_TMR0_WriteTimer 02DC                                 ??___lldiv 0034  
                        ?_TMR0_Initialize 0077                  __end_of_TMR2_EvenHandler 0301  
                         ?_WDT_Initialize 0077                   __end_of_TMR2_StartTimer 02FD  
TMR2_SetInterruptHandler@InterruptHandler 0020  TMR0_SetInterruptHandler@InterruptHandler 0020  
                        ?_TMR1_Initialize 0077                         _SYSTEM_Initialize 0234  
                 __end_of__initialization 0041                        ?_SYSTEM_Initialize 0077  
                          __pcstackCOMMON 0077                       ??_SYSTEM_Initialize 0022  
                               ?_TMR0_ISR 0077                                 ?_TMR2_ISR 0077  
                 __end_of_TMR2_WriteTimer 02CA                          ?_TMR2_Initialize 0077  
         CCP1_EvenCallBack@rise_edge_flag 0076                 __end_of_SYSTEM_Initialize 024A  
                              __pbssBANK0 003A                         ?_CCP1_SetCallBack 0020  
                              __pmaintext 0044          __end_of_TMR0_SetInterruptHandler 02E8  
                                 ?___lmul 0020                                ??_TMR0_ISR 0077  
                              ??_TMR2_ISR 0077                        ??_CCP1_SetCallBack 0022  
                              __pintentry 0004                          ?_TMR0_WriteTimer 0077  
                                 _CCP1CAP 030F                                   _CCP1CON 030E  
                                 _CCP1PPS 1EA1                            ___lmul@product 0028  
                       ?_TMR0_EvenHandler 0077                                   _OSCTUNE 0892  
                      ??_TMR0_EvenHandler 0077                                   _SLRCONA 1F3B  
                                 _HI_time 004A                              ??_TMR2_Start 0020  
                        ?_TMR2_StartTimer 0077         CCP1_DefaultCallBack@capturedValue 0078  
                              _cycle_time 004D                ??_TMR2_SetInterruptHandler 0022  
                                 ___lldiv 018E                          ?_TMR2_WriteTimer 0077  
                      __end_of_TMR2_Start 0308                                   __ptext1 01E9  
                                 __ptext2 018E                                   __ptext3 02C3  
                                 __ptext4 02D0                                   __ptext5 02F9  
                                 __ptext6 0305                                   __ptext7 02D6  
                                 __ptext8 0234                                   __ptext9 0308  
                               _T1CONbits 020E                     _OSCILLATOR_Initialize 02E8  
                               _T2CONbits 028E                  ??_PIN_MANAGER_Initialize 0020  
                               _T2HLTbits 028F                                   clrloop0 02CB  
                    end_of_initialization 0041                                 _T2RSTbits 0291  
                       _CCP1_EvenCallBack 00FC                           ___lldiv@divisor 002C  
                         ___lldiv@counter 0039                        ?_CCP1_EvenCallBack 0078  
            __end_of_CCP1_DefaultCallBack 030E                       ??_CCP1_EvenCallBack 007A  
             __end_of_TMR2_Counter8BitSet 02D6                          ??_WDT_Initialize 0020  
                _TMR0_SetInterruptHandler 02E2                                 _PORTAbits 000C  
                       ?_TMR2_EvenHandler 0077                        ??_TMR2_EvenHandler 0077  
                 TMR2_WriteTimer@timerVal 0021                 __end_of_CCP1_EvenCallBack 018E  
               CCP1_EvenCallBack@captured 0078      __end_of_TMR2_DefaultInterruptHandler 030C  
            _TMR2_DefaultInterruptHandler 030B                            __end_of___lmul 021D  
                  ?_OSCILLATOR_Initialize 0077                       start_initialization 0032  
                            _Duty_PERCENT 003A                         ??_CCP1_CaptureISR 007C  
         CCP1_EvenCallBack@pluse_width_HI 0046           CCP1_EvenCallBack@pluse_width_LO 0048  
                                ??___lmul 0028                    CCP1_EvenCallBack@HI_us 0044  
                  CCP1_EvenCallBack@LO_us 0042             ?_TMR2_DefaultInterruptHandler 0077  
                   CCP1_CaptureISR@module 007C                               __pbssCOMMON 0070  
                               ___latbits 0000                             __pcstackBANK0 0020  
                    _CCP1_DefaultCallBack 030D                     _TMR0_InterruptHandler 0055  
                       ??_CCP1_Initialize 0022                                 __pnvBANK0 0051  
                  _PIN_MANAGER_Initialize 0294                                  ?___lldiv 002C  
                       i1_TMR0_WriteTimer 02F4              ??_INTERRUPT_InterruptManager 007E  
                      ?i1_TMR0_WriteTimer 0077                       ??i1_TMR0_WriteTimer 0077  
                                _T2CLKCON 0290                     ?_CCP1_DefaultCallBack 0078  
                       ??_TMR0_Initialize 0022                                  _LATAbits 0018  
                               clear_ram0 02CA                                  _PIE0bits 0716  
                                _PIE1bits 0717                ??_TMR0_SetInterruptHandler 0022  
                                _PIR0bits 070C                                  _PIR1bits 070D  
                                _TMR0_ISR 02B4                 __end_ofi1_TMR0_WriteTimer 02F9  
                                _TMR2_ISR 02A5                         ??_TMR1_Initialize 0020  
          ??_TMR2_DefaultInterruptHandler 0077                 ?_TMR2_SetInterruptHandler 0020  
                       ___lmul@multiplier 0020                         ??_TMR2_Initialize 0022  
                 ??_OSCILLATOR_Initialize 0020                           _CCP1_CaptureISR 0271  
                              _T0CON0bits 059E                          _CCP1_SetCallBack 02EE  
          CCP1_SetCallBack@customCallBack 0020                                  __ptext10 021D  
                                __ptext11 02DC                                  __ptext20 02A5  
                                __ptext12 0283                                  __ptext21 030B  
                                __ptext13 024A                                _T1GCONbits 020F  
                                __ptext22 02FD                                  __ptext14 02E2  
                                __ptext23 02B4                                  __ptext15 0294  
                                __ptext24 030C                                  __ptext16 02E8  
                                __ptext25 0301                                  __ptext17 025F  
                                __ptext26 0271                                  __ptext18 02EE  
                                __ptext27 030D                                  __ptext28 00FC  
                                __ptext29 02F4                    ??_CCP1_DefaultCallBack 007A  
                 TMR0_WriteTimer@timerVal 0020                         ??_TMR0_WriteTimer 0020  
                                _fpluseOK 004C                          _TMR0_EvenHandler 0301  
    __end_of_TMR0_DefaultInterruptHandler 030D              _TMR0_DefaultInterruptHandler 030C  
               i1TMR0_WriteTimer@timerVal 0077                                  int$flags 007E  
                       ??_TMR2_StartTimer 0020        __end_of_INTERRUPT_InterruptManager 0031  
              _INTERRUPT_InterruptManager 0004                                _INTCONbits 000B  
                         _CCP1_Initialize 025F               TMR2_Counter8BitSet@timerVal 0020  
                                intlevel1 0000                         ??_TMR2_WriteTimer 0021  
                        ___lldiv@dividend 0030                   ?_PIN_MANAGER_Initialize 0077  
           ?_TMR0_DefaultInterruptHandler 0077                   __end_of_CCP1_CaptureISR 0283  
       CCP1_EvenCallBack@rising_edge_time 0070                          ___lldiv@quotient 0035  
                         _TMR0_Initialize 024A                                _TMR2_Start 0305  
          __end_of_PIN_MANAGER_Initialize 02A5                     _TMR2_InterruptHandler 0051  
                        _TMR2_EvenHandler 02FD                           _TMR1_Initialize 0283  
