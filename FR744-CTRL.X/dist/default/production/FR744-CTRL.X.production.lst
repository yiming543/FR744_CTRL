

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jul 04 11:08:34 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F15213
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Version 2.30
    42                           ; Generated 15/09/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F15213 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76     0000                     	;# 
    77     0001                     	;# 
    78     0002                     	;# 
    79     0003                     	;# 
    80     0004                     	;# 
    81     0005                     	;# 
    82     0006                     	;# 
    83     0007                     	;# 
    84     0008                     	;# 
    85     0009                     	;# 
    86     000A                     	;# 
    87     000B                     	;# 
    88     000C                     	;# 
    89     0012                     	;# 
    90     0018                     	;# 
    91     009A                     	;# 
    92     009B                     	;# 
    93     009B                     	;# 
    94     009C                     	;# 
    95     009D                     	;# 
    96     009E                     	;# 
    97     009F                     	;# 
    98     0119                     	;# 
    99     011A                     	;# 
   100     011B                     	;# 
   101     011B                     	;# 
   102     011C                     	;# 
   103     011D                     	;# 
   104     011E                     	;# 
   105     011F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     018E                     	;# 
   109     018F                     	;# 
   110     0190                     	;# 
   111     0191                     	;# 
   112     0192                     	;# 
   113     020C                     	;# 
   114     020D                     	;# 
   115     020E                     	;# 
   116     020E                     	;# 
   117     020F                     	;# 
   118     020F                     	;# 
   119     0210                     	;# 
   120     0210                     	;# 
   121     0211                     	;# 
   122     0211                     	;# 
   123     028C                     	;# 
   124     028C                     	;# 
   125     028D                     	;# 
   126     028D                     	;# 
   127     028E                     	;# 
   128     028F                     	;# 
   129     0290                     	;# 
   130     0291                     	;# 
   131     030C                     	;# 
   132     030C                     	;# 
   133     030D                     	;# 
   134     030E                     	;# 
   135     030F                     	;# 
   136     0310                     	;# 
   137     0310                     	;# 
   138     0311                     	;# 
   139     0312                     	;# 
   140     0313                     	;# 
   141     0314                     	;# 
   142     0314                     	;# 
   143     0315                     	;# 
   144     0316                     	;# 
   145     0318                     	;# 
   146     0318                     	;# 
   147     0319                     	;# 
   148     031A                     	;# 
   149     059C                     	;# 
   150     059C                     	;# 
   151     059D                     	;# 
   152     059D                     	;# 
   153     059E                     	;# 
   154     059F                     	;# 
   155     070C                     	;# 
   156     070D                     	;# 
   157     070E                     	;# 
   158     0716                     	;# 
   159     0717                     	;# 
   160     0718                     	;# 
   161     080C                     	;# 
   162     0811                     	;# 
   163     0813                     	;# 
   164     0814                     	;# 
   165     081A                     	;# 
   166     081A                     	;# 
   167     081B                     	;# 
   168     081C                     	;# 
   169     081C                     	;# 
   170     081D                     	;# 
   171     081E                     	;# 
   172     081F                     	;# 
   173     088E                     	;# 
   174     0890                     	;# 
   175     0891                     	;# 
   176     0892                     	;# 
   177     0893                     	;# 
   178     090C                     	;# 
   179     1E8F                     	;# 
   180     1E90                     	;# 
   181     1E91                     	;# 
   182     1E92                     	;# 
   183     1E93                     	;# 
   184     1E9C                     	;# 
   185     1EA1                     	;# 
   186     1EA2                     	;# 
   187     1EC3                     	;# 
   188     1EC5                     	;# 
   189     1EC6                     	;# 
   190     1EC7                     	;# 
   191     1ECB                     	;# 
   192     1ECB                     	;# 
   193     1ECB                     	;# 
   194     1ECC                     	;# 
   195     1ECC                     	;# 
   196     1ECC                     	;# 
   197     1F10                     	;# 
   198     1F11                     	;# 
   199     1F12                     	;# 
   200     1F14                     	;# 
   201     1F15                     	;# 
   202     1F38                     	;# 
   203     1F39                     	;# 
   204     1F3A                     	;# 
   205     1F3B                     	;# 
   206     1F3C                     	;# 
   207     1F3D                     	;# 
   208     1F3E                     	;# 
   209     1F3F                     	;# 
   210     1FE4                     	;# 
   211     1FE5                     	;# 
   212     1FE6                     	;# 
   213     1FE7                     	;# 
   214     1FE8                     	;# 
   215     1FE8                     	;# 
   216     1FE9                     	;# 
   217     1FEA                     	;# 
   218     1FEB                     	;# 
   219     1FED                     	;# 
   220     1FEE                     	;# 
   221     1FEF                     	;# 
   222     0000                     	;# 
   223     0001                     	;# 
   224     0002                     	;# 
   225     0003                     	;# 
   226     0004                     	;# 
   227     0005                     	;# 
   228     0006                     	;# 
   229     0007                     	;# 
   230     0008                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     0012                     	;# 
   236     0018                     	;# 
   237     009A                     	;# 
   238     009B                     	;# 
   239     009B                     	;# 
   240     009C                     	;# 
   241     009D                     	;# 
   242     009E                     	;# 
   243     009F                     	;# 
   244     0119                     	;# 
   245     011A                     	;# 
   246     011B                     	;# 
   247     011B                     	;# 
   248     011C                     	;# 
   249     011D                     	;# 
   250     011E                     	;# 
   251     011F                     	;# 
   252     018C                     	;# 
   253     018D                     	;# 
   254     018E                     	;# 
   255     018F                     	;# 
   256     0190                     	;# 
   257     0191                     	;# 
   258     0192                     	;# 
   259     020C                     	;# 
   260     020D                     	;# 
   261     020E                     	;# 
   262     020E                     	;# 
   263     020F                     	;# 
   264     020F                     	;# 
   265     0210                     	;# 
   266     0210                     	;# 
   267     0211                     	;# 
   268     0211                     	;# 
   269     028C                     	;# 
   270     028C                     	;# 
   271     028D                     	;# 
   272     028D                     	;# 
   273     028E                     	;# 
   274     028F                     	;# 
   275     0290                     	;# 
   276     0291                     	;# 
   277     030C                     	;# 
   278     030C                     	;# 
   279     030D                     	;# 
   280     030E                     	;# 
   281     030F                     	;# 
   282     0310                     	;# 
   283     0310                     	;# 
   284     0311                     	;# 
   285     0312                     	;# 
   286     0313                     	;# 
   287     0314                     	;# 
   288     0314                     	;# 
   289     0315                     	;# 
   290     0316                     	;# 
   291     0318                     	;# 
   292     0318                     	;# 
   293     0319                     	;# 
   294     031A                     	;# 
   295     059C                     	;# 
   296     059C                     	;# 
   297     059D                     	;# 
   298     059D                     	;# 
   299     059E                     	;# 
   300     059F                     	;# 
   301     070C                     	;# 
   302     070D                     	;# 
   303     070E                     	;# 
   304     0716                     	;# 
   305     0717                     	;# 
   306     0718                     	;# 
   307     080C                     	;# 
   308     0811                     	;# 
   309     0813                     	;# 
   310     0814                     	;# 
   311     081A                     	;# 
   312     081A                     	;# 
   313     081B                     	;# 
   314     081C                     	;# 
   315     081C                     	;# 
   316     081D                     	;# 
   317     081E                     	;# 
   318     081F                     	;# 
   319     088E                     	;# 
   320     0890                     	;# 
   321     0891                     	;# 
   322     0892                     	;# 
   323     0893                     	;# 
   324     090C                     	;# 
   325     1E8F                     	;# 
   326     1E90                     	;# 
   327     1E91                     	;# 
   328     1E92                     	;# 
   329     1E93                     	;# 
   330     1E9C                     	;# 
   331     1EA1                     	;# 
   332     1EA2                     	;# 
   333     1EC3                     	;# 
   334     1EC5                     	;# 
   335     1EC6                     	;# 
   336     1EC7                     	;# 
   337     1ECB                     	;# 
   338     1ECB                     	;# 
   339     1ECB                     	;# 
   340     1ECC                     	;# 
   341     1ECC                     	;# 
   342     1ECC                     	;# 
   343     1F10                     	;# 
   344     1F11                     	;# 
   345     1F12                     	;# 
   346     1F14                     	;# 
   347     1F15                     	;# 
   348     1F38                     	;# 
   349     1F39                     	;# 
   350     1F3A                     	;# 
   351     1F3B                     	;# 
   352     1F3C                     	;# 
   353     1F3D                     	;# 
   354     1F3E                     	;# 
   355     1F3F                     	;# 
   356     1FE4                     	;# 
   357     1FE5                     	;# 
   358     1FE6                     	;# 
   359     1FE7                     	;# 
   360     1FE8                     	;# 
   361     1FE8                     	;# 
   362     1FE9                     	;# 
   363     1FEA                     	;# 
   364     1FEB                     	;# 
   365     1FED                     	;# 
   366     1FEE                     	;# 
   367     1FEF                     	;# 
   368     0000                     	;# 
   369     0001                     	;# 
   370     0002                     	;# 
   371     0003                     	;# 
   372     0004                     	;# 
   373     0005                     	;# 
   374     0006                     	;# 
   375     0007                     	;# 
   376     0008                     	;# 
   377     0009                     	;# 
   378     000A                     	;# 
   379     000B                     	;# 
   380     000C                     	;# 
   381     0012                     	;# 
   382     0018                     	;# 
   383     009A                     	;# 
   384     009B                     	;# 
   385     009B                     	;# 
   386     009C                     	;# 
   387     009D                     	;# 
   388     009E                     	;# 
   389     009F                     	;# 
   390     0119                     	;# 
   391     011A                     	;# 
   392     011B                     	;# 
   393     011B                     	;# 
   394     011C                     	;# 
   395     011D                     	;# 
   396     011E                     	;# 
   397     011F                     	;# 
   398     018C                     	;# 
   399     018D                     	;# 
   400     018E                     	;# 
   401     018F                     	;# 
   402     0190                     	;# 
   403     0191                     	;# 
   404     0192                     	;# 
   405     020C                     	;# 
   406     020D                     	;# 
   407     020E                     	;# 
   408     020E                     	;# 
   409     020F                     	;# 
   410     020F                     	;# 
   411     0210                     	;# 
   412     0210                     	;# 
   413     0211                     	;# 
   414     0211                     	;# 
   415     028C                     	;# 
   416     028C                     	;# 
   417     028D                     	;# 
   418     028D                     	;# 
   419     028E                     	;# 
   420     028F                     	;# 
   421     0290                     	;# 
   422     0291                     	;# 
   423     030C                     	;# 
   424     030C                     	;# 
   425     030D                     	;# 
   426     030E                     	;# 
   427     030F                     	;# 
   428     0310                     	;# 
   429     0310                     	;# 
   430     0311                     	;# 
   431     0312                     	;# 
   432     0313                     	;# 
   433     0314                     	;# 
   434     0314                     	;# 
   435     0315                     	;# 
   436     0316                     	;# 
   437     0318                     	;# 
   438     0318                     	;# 
   439     0319                     	;# 
   440     031A                     	;# 
   441     059C                     	;# 
   442     059C                     	;# 
   443     059D                     	;# 
   444     059D                     	;# 
   445     059E                     	;# 
   446     059F                     	;# 
   447     070C                     	;# 
   448     070D                     	;# 
   449     070E                     	;# 
   450     0716                     	;# 
   451     0717                     	;# 
   452     0718                     	;# 
   453     080C                     	;# 
   454     0811                     	;# 
   455     0813                     	;# 
   456     0814                     	;# 
   457     081A                     	;# 
   458     081A                     	;# 
   459     081B                     	;# 
   460     081C                     	;# 
   461     081C                     	;# 
   462     081D                     	;# 
   463     081E                     	;# 
   464     081F                     	;# 
   465     088E                     	;# 
   466     0890                     	;# 
   467     0891                     	;# 
   468     0892                     	;# 
   469     0893                     	;# 
   470     090C                     	;# 
   471     1E8F                     	;# 
   472     1E90                     	;# 
   473     1E91                     	;# 
   474     1E92                     	;# 
   475     1E93                     	;# 
   476     1E9C                     	;# 
   477     1EA1                     	;# 
   478     1EA2                     	;# 
   479     1EC3                     	;# 
   480     1EC5                     	;# 
   481     1EC6                     	;# 
   482     1EC7                     	;# 
   483     1ECB                     	;# 
   484     1ECB                     	;# 
   485     1ECB                     	;# 
   486     1ECC                     	;# 
   487     1ECC                     	;# 
   488     1ECC                     	;# 
   489     1F10                     	;# 
   490     1F11                     	;# 
   491     1F12                     	;# 
   492     1F14                     	;# 
   493     1F15                     	;# 
   494     1F38                     	;# 
   495     1F39                     	;# 
   496     1F3A                     	;# 
   497     1F3B                     	;# 
   498     1F3C                     	;# 
   499     1F3D                     	;# 
   500     1F3E                     	;# 
   501     1F3F                     	;# 
   502     1FE4                     	;# 
   503     1FE5                     	;# 
   504     1FE6                     	;# 
   505     1FE7                     	;# 
   506     1FE8                     	;# 
   507     1FE8                     	;# 
   508     1FE9                     	;# 
   509     1FEA                     	;# 
   510     1FEB                     	;# 
   511     1FED                     	;# 
   512     1FEE                     	;# 
   513     1FEF                     	;# 
   514     0000                     	;# 
   515     0001                     	;# 
   516     0002                     	;# 
   517     0003                     	;# 
   518     0004                     	;# 
   519     0005                     	;# 
   520     0006                     	;# 
   521     0007                     	;# 
   522     0008                     	;# 
   523     0009                     	;# 
   524     000A                     	;# 
   525     000B                     	;# 
   526     000C                     	;# 
   527     0012                     	;# 
   528     0018                     	;# 
   529     009A                     	;# 
   530     009B                     	;# 
   531     009B                     	;# 
   532     009C                     	;# 
   533     009D                     	;# 
   534     009E                     	;# 
   535     009F                     	;# 
   536     0119                     	;# 
   537     011A                     	;# 
   538     011B                     	;# 
   539     011B                     	;# 
   540     011C                     	;# 
   541     011D                     	;# 
   542     011E                     	;# 
   543     011F                     	;# 
   544     018C                     	;# 
   545     018D                     	;# 
   546     018E                     	;# 
   547     018F                     	;# 
   548     0190                     	;# 
   549     0191                     	;# 
   550     0192                     	;# 
   551     020C                     	;# 
   552     020D                     	;# 
   553     020E                     	;# 
   554     020E                     	;# 
   555     020F                     	;# 
   556     020F                     	;# 
   557     0210                     	;# 
   558     0210                     	;# 
   559     0211                     	;# 
   560     0211                     	;# 
   561     028C                     	;# 
   562     028C                     	;# 
   563     028D                     	;# 
   564     028D                     	;# 
   565     028E                     	;# 
   566     028F                     	;# 
   567     0290                     	;# 
   568     0291                     	;# 
   569     030C                     	;# 
   570     030C                     	;# 
   571     030D                     	;# 
   572     030E                     	;# 
   573     030F                     	;# 
   574     0310                     	;# 
   575     0310                     	;# 
   576     0311                     	;# 
   577     0312                     	;# 
   578     0313                     	;# 
   579     0314                     	;# 
   580     0314                     	;# 
   581     0315                     	;# 
   582     0316                     	;# 
   583     0318                     	;# 
   584     0318                     	;# 
   585     0319                     	;# 
   586     031A                     	;# 
   587     059C                     	;# 
   588     059C                     	;# 
   589     059D                     	;# 
   590     059D                     	;# 
   591     059E                     	;# 
   592     059F                     	;# 
   593     070C                     	;# 
   594     070D                     	;# 
   595     070E                     	;# 
   596     0716                     	;# 
   597     0717                     	;# 
   598     0718                     	;# 
   599     080C                     	;# 
   600     0811                     	;# 
   601     0813                     	;# 
   602     0814                     	;# 
   603     081A                     	;# 
   604     081A                     	;# 
   605     081B                     	;# 
   606     081C                     	;# 
   607     081C                     	;# 
   608     081D                     	;# 
   609     081E                     	;# 
   610     081F                     	;# 
   611     088E                     	;# 
   612     0890                     	;# 
   613     0891                     	;# 
   614     0892                     	;# 
   615     0893                     	;# 
   616     090C                     	;# 
   617     1E8F                     	;# 
   618     1E90                     	;# 
   619     1E91                     	;# 
   620     1E92                     	;# 
   621     1E93                     	;# 
   622     1E9C                     	;# 
   623     1EA1                     	;# 
   624     1EA2                     	;# 
   625     1EC3                     	;# 
   626     1EC5                     	;# 
   627     1EC6                     	;# 
   628     1EC7                     	;# 
   629     1ECB                     	;# 
   630     1ECB                     	;# 
   631     1ECB                     	;# 
   632     1ECC                     	;# 
   633     1ECC                     	;# 
   634     1ECC                     	;# 
   635     1F10                     	;# 
   636     1F11                     	;# 
   637     1F12                     	;# 
   638     1F14                     	;# 
   639     1F15                     	;# 
   640     1F38                     	;# 
   641     1F39                     	;# 
   642     1F3A                     	;# 
   643     1F3B                     	;# 
   644     1F3C                     	;# 
   645     1F3D                     	;# 
   646     1F3E                     	;# 
   647     1F3F                     	;# 
   648     1FE4                     	;# 
   649     1FE5                     	;# 
   650     1FE6                     	;# 
   651     1FE7                     	;# 
   652     1FE8                     	;# 
   653     1FE8                     	;# 
   654     1FE9                     	;# 
   655     1FEA                     	;# 
   656     1FEB                     	;# 
   657     1FED                     	;# 
   658     1FEE                     	;# 
   659     1FEF                     	;# 
   660     0000                     	;# 
   661     0001                     	;# 
   662     0002                     	;# 
   663     0003                     	;# 
   664     0004                     	;# 
   665     0005                     	;# 
   666     0006                     	;# 
   667     0007                     	;# 
   668     0008                     	;# 
   669     0009                     	;# 
   670     000A                     	;# 
   671     000B                     	;# 
   672     000C                     	;# 
   673     0012                     	;# 
   674     0018                     	;# 
   675     009A                     	;# 
   676     009B                     	;# 
   677     009B                     	;# 
   678     009C                     	;# 
   679     009D                     	;# 
   680     009E                     	;# 
   681     009F                     	;# 
   682     0119                     	;# 
   683     011A                     	;# 
   684     011B                     	;# 
   685     011B                     	;# 
   686     011C                     	;# 
   687     011D                     	;# 
   688     011E                     	;# 
   689     011F                     	;# 
   690     018C                     	;# 
   691     018D                     	;# 
   692     018E                     	;# 
   693     018F                     	;# 
   694     0190                     	;# 
   695     0191                     	;# 
   696     0192                     	;# 
   697     020C                     	;# 
   698     020D                     	;# 
   699     020E                     	;# 
   700     020E                     	;# 
   701     020F                     	;# 
   702     020F                     	;# 
   703     0210                     	;# 
   704     0210                     	;# 
   705     0211                     	;# 
   706     0211                     	;# 
   707     028C                     	;# 
   708     028C                     	;# 
   709     028D                     	;# 
   710     028D                     	;# 
   711     028E                     	;# 
   712     028F                     	;# 
   713     0290                     	;# 
   714     0291                     	;# 
   715     030C                     	;# 
   716     030C                     	;# 
   717     030D                     	;# 
   718     030E                     	;# 
   719     030F                     	;# 
   720     0310                     	;# 
   721     0310                     	;# 
   722     0311                     	;# 
   723     0312                     	;# 
   724     0313                     	;# 
   725     0314                     	;# 
   726     0314                     	;# 
   727     0315                     	;# 
   728     0316                     	;# 
   729     0318                     	;# 
   730     0318                     	;# 
   731     0319                     	;# 
   732     031A                     	;# 
   733     059C                     	;# 
   734     059C                     	;# 
   735     059D                     	;# 
   736     059D                     	;# 
   737     059E                     	;# 
   738     059F                     	;# 
   739     070C                     	;# 
   740     070D                     	;# 
   741     070E                     	;# 
   742     0716                     	;# 
   743     0717                     	;# 
   744     0718                     	;# 
   745     080C                     	;# 
   746     0811                     	;# 
   747     0813                     	;# 
   748     0814                     	;# 
   749     081A                     	;# 
   750     081A                     	;# 
   751     081B                     	;# 
   752     081C                     	;# 
   753     081C                     	;# 
   754     081D                     	;# 
   755     081E                     	;# 
   756     081F                     	;# 
   757     088E                     	;# 
   758     0890                     	;# 
   759     0891                     	;# 
   760     0892                     	;# 
   761     0893                     	;# 
   762     090C                     	;# 
   763     1E8F                     	;# 
   764     1E90                     	;# 
   765     1E91                     	;# 
   766     1E92                     	;# 
   767     1E93                     	;# 
   768     1E9C                     	;# 
   769     1EA1                     	;# 
   770     1EA2                     	;# 
   771     1EC3                     	;# 
   772     1EC5                     	;# 
   773     1EC6                     	;# 
   774     1EC7                     	;# 
   775     1ECB                     	;# 
   776     1ECB                     	;# 
   777     1ECB                     	;# 
   778     1ECC                     	;# 
   779     1ECC                     	;# 
   780     1ECC                     	;# 
   781     1F10                     	;# 
   782     1F11                     	;# 
   783     1F12                     	;# 
   784     1F14                     	;# 
   785     1F15                     	;# 
   786     1F38                     	;# 
   787     1F39                     	;# 
   788     1F3A                     	;# 
   789     1F3B                     	;# 
   790     1F3C                     	;# 
   791     1F3D                     	;# 
   792     1F3E                     	;# 
   793     1F3F                     	;# 
   794     1FE4                     	;# 
   795     1FE5                     	;# 
   796     1FE6                     	;# 
   797     1FE7                     	;# 
   798     1FE8                     	;# 
   799     1FE8                     	;# 
   800     1FE9                     	;# 
   801     1FEA                     	;# 
   802     1FEB                     	;# 
   803     1FED                     	;# 
   804     1FEE                     	;# 
   805     1FEF                     	;# 
   806     0000                     	;# 
   807     0001                     	;# 
   808     0002                     	;# 
   809     0003                     	;# 
   810     0004                     	;# 
   811     0005                     	;# 
   812     0006                     	;# 
   813     0007                     	;# 
   814     0008                     	;# 
   815     0009                     	;# 
   816     000A                     	;# 
   817     000B                     	;# 
   818     000C                     	;# 
   819     0012                     	;# 
   820     0018                     	;# 
   821     009A                     	;# 
   822     009B                     	;# 
   823     009B                     	;# 
   824     009C                     	;# 
   825     009D                     	;# 
   826     009E                     	;# 
   827     009F                     	;# 
   828     0119                     	;# 
   829     011A                     	;# 
   830     011B                     	;# 
   831     011B                     	;# 
   832     011C                     	;# 
   833     011D                     	;# 
   834     011E                     	;# 
   835     011F                     	;# 
   836     018C                     	;# 
   837     018D                     	;# 
   838     018E                     	;# 
   839     018F                     	;# 
   840     0190                     	;# 
   841     0191                     	;# 
   842     0192                     	;# 
   843     020C                     	;# 
   844     020D                     	;# 
   845     020E                     	;# 
   846     020E                     	;# 
   847     020F                     	;# 
   848     020F                     	;# 
   849     0210                     	;# 
   850     0210                     	;# 
   851     0211                     	;# 
   852     0211                     	;# 
   853     028C                     	;# 
   854     028C                     	;# 
   855     028D                     	;# 
   856     028D                     	;# 
   857     028E                     	;# 
   858     028F                     	;# 
   859     0290                     	;# 
   860     0291                     	;# 
   861     030C                     	;# 
   862     030C                     	;# 
   863     030D                     	;# 
   864     030E                     	;# 
   865     030F                     	;# 
   866     0310                     	;# 
   867     0310                     	;# 
   868     0311                     	;# 
   869     0312                     	;# 
   870     0313                     	;# 
   871     0314                     	;# 
   872     0314                     	;# 
   873     0315                     	;# 
   874     0316                     	;# 
   875     0318                     	;# 
   876     0318                     	;# 
   877     0319                     	;# 
   878     031A                     	;# 
   879     059C                     	;# 
   880     059C                     	;# 
   881     059D                     	;# 
   882     059D                     	;# 
   883     059E                     	;# 
   884     059F                     	;# 
   885     070C                     	;# 
   886     070D                     	;# 
   887     070E                     	;# 
   888     0716                     	;# 
   889     0717                     	;# 
   890     0718                     	;# 
   891     080C                     	;# 
   892     0811                     	;# 
   893     0813                     	;# 
   894     0814                     	;# 
   895     081A                     	;# 
   896     081A                     	;# 
   897     081B                     	;# 
   898     081C                     	;# 
   899     081C                     	;# 
   900     081D                     	;# 
   901     081E                     	;# 
   902     081F                     	;# 
   903     088E                     	;# 
   904     0890                     	;# 
   905     0891                     	;# 
   906     0892                     	;# 
   907     0893                     	;# 
   908     090C                     	;# 
   909     1E8F                     	;# 
   910     1E90                     	;# 
   911     1E91                     	;# 
   912     1E92                     	;# 
   913     1E93                     	;# 
   914     1E9C                     	;# 
   915     1EA1                     	;# 
   916     1EA2                     	;# 
   917     1EC3                     	;# 
   918     1EC5                     	;# 
   919     1EC6                     	;# 
   920     1EC7                     	;# 
   921     1ECB                     	;# 
   922     1ECB                     	;# 
   923     1ECB                     	;# 
   924     1ECC                     	;# 
   925     1ECC                     	;# 
   926     1ECC                     	;# 
   927     1F10                     	;# 
   928     1F11                     	;# 
   929     1F12                     	;# 
   930     1F14                     	;# 
   931     1F15                     	;# 
   932     1F38                     	;# 
   933     1F39                     	;# 
   934     1F3A                     	;# 
   935     1F3B                     	;# 
   936     1F3C                     	;# 
   937     1F3D                     	;# 
   938     1F3E                     	;# 
   939     1F3F                     	;# 
   940     1FE4                     	;# 
   941     1FE5                     	;# 
   942     1FE6                     	;# 
   943     1FE7                     	;# 
   944     1FE8                     	;# 
   945     1FE8                     	;# 
   946     1FE9                     	;# 
   947     1FEA                     	;# 
   948     1FEB                     	;# 
   949     1FED                     	;# 
   950     1FEE                     	;# 
   951     1FEF                     	;# 
   952     0000                     	;# 
   953     0001                     	;# 
   954     0002                     	;# 
   955     0003                     	;# 
   956     0004                     	;# 
   957     0005                     	;# 
   958     0006                     	;# 
   959     0007                     	;# 
   960     0008                     	;# 
   961     0009                     	;# 
   962     000A                     	;# 
   963     000B                     	;# 
   964     000C                     	;# 
   965     0012                     	;# 
   966     0018                     	;# 
   967     009A                     	;# 
   968     009B                     	;# 
   969     009B                     	;# 
   970     009C                     	;# 
   971     009D                     	;# 
   972     009E                     	;# 
   973     009F                     	;# 
   974     0119                     	;# 
   975     011A                     	;# 
   976     011B                     	;# 
   977     011B                     	;# 
   978     011C                     	;# 
   979     011D                     	;# 
   980     011E                     	;# 
   981     011F                     	;# 
   982     018C                     	;# 
   983     018D                     	;# 
   984     018E                     	;# 
   985     018F                     	;# 
   986     0190                     	;# 
   987     0191                     	;# 
   988     0192                     	;# 
   989     020C                     	;# 
   990     020D                     	;# 
   991     020E                     	;# 
   992     020E                     	;# 
   993     020F                     	;# 
   994     020F                     	;# 
   995     0210                     	;# 
   996     0210                     	;# 
   997     0211                     	;# 
   998     0211                     	;# 
   999     028C                     	;# 
  1000     028C                     	;# 
  1001     028D                     	;# 
  1002     028D                     	;# 
  1003     028E                     	;# 
  1004     028F                     	;# 
  1005     0290                     	;# 
  1006     0291                     	;# 
  1007     030C                     	;# 
  1008     030C                     	;# 
  1009     030D                     	;# 
  1010     030E                     	;# 
  1011     030F                     	;# 
  1012     0310                     	;# 
  1013     0310                     	;# 
  1014     0311                     	;# 
  1015     0312                     	;# 
  1016     0313                     	;# 
  1017     0314                     	;# 
  1018     0314                     	;# 
  1019     0315                     	;# 
  1020     0316                     	;# 
  1021     0318                     	;# 
  1022     0318                     	;# 
  1023     0319                     	;# 
  1024     031A                     	;# 
  1025     059C                     	;# 
  1026     059C                     	;# 
  1027     059D                     	;# 
  1028     059D                     	;# 
  1029     059E                     	;# 
  1030     059F                     	;# 
  1031     070C                     	;# 
  1032     070D                     	;# 
  1033     070E                     	;# 
  1034     0716                     	;# 
  1035     0717                     	;# 
  1036     0718                     	;# 
  1037     080C                     	;# 
  1038     0811                     	;# 
  1039     0813                     	;# 
  1040     0814                     	;# 
  1041     081A                     	;# 
  1042     081A                     	;# 
  1043     081B                     	;# 
  1044     081C                     	;# 
  1045     081C                     	;# 
  1046     081D                     	;# 
  1047     081E                     	;# 
  1048     081F                     	;# 
  1049     088E                     	;# 
  1050     0890                     	;# 
  1051     0891                     	;# 
  1052     0892                     	;# 
  1053     0893                     	;# 
  1054     090C                     	;# 
  1055     1E8F                     	;# 
  1056     1E90                     	;# 
  1057     1E91                     	;# 
  1058     1E92                     	;# 
  1059     1E93                     	;# 
  1060     1E9C                     	;# 
  1061     1EA1                     	;# 
  1062     1EA2                     	;# 
  1063     1EC3                     	;# 
  1064     1EC5                     	;# 
  1065     1EC6                     	;# 
  1066     1EC7                     	;# 
  1067     1ECB                     	;# 
  1068     1ECB                     	;# 
  1069     1ECB                     	;# 
  1070     1ECC                     	;# 
  1071     1ECC                     	;# 
  1072     1ECC                     	;# 
  1073     1F10                     	;# 
  1074     1F11                     	;# 
  1075     1F12                     	;# 
  1076     1F14                     	;# 
  1077     1F15                     	;# 
  1078     1F38                     	;# 
  1079     1F39                     	;# 
  1080     1F3A                     	;# 
  1081     1F3B                     	;# 
  1082     1F3C                     	;# 
  1083     1F3D                     	;# 
  1084     1F3E                     	;# 
  1085     1F3F                     	;# 
  1086     1FE4                     	;# 
  1087     1FE5                     	;# 
  1088     1FE6                     	;# 
  1089     1FE7                     	;# 
  1090     1FE8                     	;# 
  1091     1FE8                     	;# 
  1092     1FE9                     	;# 
  1093     1FEA                     	;# 
  1094     1FEB                     	;# 
  1095     1FED                     	;# 
  1096     1FEE                     	;# 
  1097     1FEF                     	;# 
  1098     0000                     	;# 
  1099     0001                     	;# 
  1100     0002                     	;# 
  1101     0003                     	;# 
  1102     0004                     	;# 
  1103     0005                     	;# 
  1104     0006                     	;# 
  1105     0007                     	;# 
  1106     0008                     	;# 
  1107     0009                     	;# 
  1108     000A                     	;# 
  1109     000B                     	;# 
  1110     000C                     	;# 
  1111     0012                     	;# 
  1112     0018                     	;# 
  1113     009A                     	;# 
  1114     009B                     	;# 
  1115     009B                     	;# 
  1116     009C                     	;# 
  1117     009D                     	;# 
  1118     009E                     	;# 
  1119     009F                     	;# 
  1120     0119                     	;# 
  1121     011A                     	;# 
  1122     011B                     	;# 
  1123     011B                     	;# 
  1124     011C                     	;# 
  1125     011D                     	;# 
  1126     011E                     	;# 
  1127     011F                     	;# 
  1128     018C                     	;# 
  1129     018D                     	;# 
  1130     018E                     	;# 
  1131     018F                     	;# 
  1132     0190                     	;# 
  1133     0191                     	;# 
  1134     0192                     	;# 
  1135     020C                     	;# 
  1136     020D                     	;# 
  1137     020E                     	;# 
  1138     020E                     	;# 
  1139     020F                     	;# 
  1140     020F                     	;# 
  1141     0210                     	;# 
  1142     0210                     	;# 
  1143     0211                     	;# 
  1144     0211                     	;# 
  1145     028C                     	;# 
  1146     028C                     	;# 
  1147     028D                     	;# 
  1148     028D                     	;# 
  1149     028E                     	;# 
  1150     028F                     	;# 
  1151     0290                     	;# 
  1152     0291                     	;# 
  1153     030C                     	;# 
  1154     030C                     	;# 
  1155     030D                     	;# 
  1156     030E                     	;# 
  1157     030F                     	;# 
  1158     0310                     	;# 
  1159     0310                     	;# 
  1160     0311                     	;# 
  1161     0312                     	;# 
  1162     0313                     	;# 
  1163     0314                     	;# 
  1164     0314                     	;# 
  1165     0315                     	;# 
  1166     0316                     	;# 
  1167     0318                     	;# 
  1168     0318                     	;# 
  1169     0319                     	;# 
  1170     031A                     	;# 
  1171     059C                     	;# 
  1172     059C                     	;# 
  1173     059D                     	;# 
  1174     059D                     	;# 
  1175     059E                     	;# 
  1176     059F                     	;# 
  1177     070C                     	;# 
  1178     070D                     	;# 
  1179     070E                     	;# 
  1180     0716                     	;# 
  1181     0717                     	;# 
  1182     0718                     	;# 
  1183     080C                     	;# 
  1184     0811                     	;# 
  1185     0813                     	;# 
  1186     0814                     	;# 
  1187     081A                     	;# 
  1188     081A                     	;# 
  1189     081B                     	;# 
  1190     081C                     	;# 
  1191     081C                     	;# 
  1192     081D                     	;# 
  1193     081E                     	;# 
  1194     081F                     	;# 
  1195     088E                     	;# 
  1196     0890                     	;# 
  1197     0891                     	;# 
  1198     0892                     	;# 
  1199     0893                     	;# 
  1200     090C                     	;# 
  1201     1E8F                     	;# 
  1202     1E90                     	;# 
  1203     1E91                     	;# 
  1204     1E92                     	;# 
  1205     1E93                     	;# 
  1206     1E9C                     	;# 
  1207     1EA1                     	;# 
  1208     1EA2                     	;# 
  1209     1EC3                     	;# 
  1210     1EC5                     	;# 
  1211     1EC6                     	;# 
  1212     1EC7                     	;# 
  1213     1ECB                     	;# 
  1214     1ECB                     	;# 
  1215     1ECB                     	;# 
  1216     1ECC                     	;# 
  1217     1ECC                     	;# 
  1218     1ECC                     	;# 
  1219     1F10                     	;# 
  1220     1F11                     	;# 
  1221     1F12                     	;# 
  1222     1F14                     	;# 
  1223     1F15                     	;# 
  1224     1F38                     	;# 
  1225     1F39                     	;# 
  1226     1F3A                     	;# 
  1227     1F3B                     	;# 
  1228     1F3C                     	;# 
  1229     1F3D                     	;# 
  1230     1F3E                     	;# 
  1231     1F3F                     	;# 
  1232     1FE4                     	;# 
  1233     1FE5                     	;# 
  1234     1FE6                     	;# 
  1235     1FE7                     	;# 
  1236     1FE8                     	;# 
  1237     1FE8                     	;# 
  1238     1FE9                     	;# 
  1239     1FEA                     	;# 
  1240     1FEB                     	;# 
  1241     1FED                     	;# 
  1242     1FEE                     	;# 
  1243     1FEF                     	;# 
  1244                           
  1245                           	psect	nvBANK0
  1246     002A                     __pnvBANK0:
  1247     002A                     _TMR2_InterruptHandler:
  1248     002A                     	ds	2
  1249     002C                     _CCP1_CallBack:
  1250     002C                     	ds	2
  1251     002E                     _TMR0_InterruptHandler:
  1252     002E                     	ds	2
  1253     000C                     _PORTAbits	set	12
  1254     0018                     _LATAbits	set	24
  1255     000B                     _INTCONbits	set	11
  1256     0012                     _TRISA	set	18
  1257     0018                     _LATA	set	24
  1258     020F                     _T1GCONbits	set	527
  1259     020E                     _T1CONbits	set	526
  1260     020E                     _T1CON	set	526
  1261     020C                     _TMR1L	set	524
  1262     020D                     _TMR1H	set	525
  1263     0211                     _T1CLK	set	529
  1264     0210                     _T1GATE	set	528
  1265     020F                     _T1GCON	set	527
  1266     028D                     _PR2	set	653
  1267     028C                     _TMR2	set	652
  1268     028E                     _T2CONbits	set	654
  1269     0291                     _T2RSTbits	set	657
  1270     028F                     _T2HLTbits	set	655
  1271     028E                     _T2CON	set	654
  1272     028C                     _T2TMR	set	652
  1273     028D                     _T2PR	set	653
  1274     0291                     _T2RST	set	657
  1275     028F                     _T2HLT	set	655
  1276     0290                     _T2CLKCON	set	656
  1277     030C                     _CCPR1L	set	780
  1278     030D                     _CCPR1H	set	781
  1279     030F                     _CCP1CAP	set	783
  1280     030E                     _CCP1CON	set	782
  1281     059E                     _T0CON0bits	set	1438
  1282     059E                     _T0CON0	set	1438
  1283     059C                     _TMR0L	set	1436
  1284     059D                     _TMR0H	set	1437
  1285     059F                     _T0CON1	set	1439
  1286     070D                     _PIR1bits	set	1805
  1287     0717                     _PIE1bits	set	1815
  1288     070C                     _PIR0bits	set	1804
  1289     0716                     _PIE0bits	set	1814
  1290     080C                     _WDTCON	set	2060
  1291     0892                     _OSCTUNE	set	2194
  1292     0893                     _OSCFRQ	set	2195
  1293     0891                     _OSCEN	set	2193
  1294     1EA1                     _CCP1PPS	set	7841
  1295     1F3C                     _INLVLA	set	7996
  1296     1F3B                     _SLRCONA	set	7995
  1297     1F3A                     _ODCONA	set	7994
  1298     1F39                     _WPUA	set	7993
  1299     1F38                     _ANSELA	set	7992
  1300                           
  1301                           	psect	cinit
  1302     0032                     start_initialization:	
  1303                           ; #config settings
  1304                           
  1305     0032                     __initialization:
  1306                           
  1307                           ; Clear objects allocated to COMMON
  1308     0032  01F0               	clrf	__pbssCOMMON& (0+127)
  1309     0033  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1310     0034  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1311     0035  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1312     0036  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1313     0037  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1314     0038  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1315                           
  1316                           ; Clear objects allocated to BANK0
  1317     0039  0140               	movlb	0	; select bank0
  1318     003A  01A0               	clrf	__pbssBANK0& (0+127)
  1319     003B  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1320     003C  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  1321     003D  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  1322     003E  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  1323     003F  01A5               	clrf	(__pbssBANK0+5)& (0+127)
  1324     0040  01A6               	clrf	(__pbssBANK0+6)& (0+127)
  1325     0041  01A7               	clrf	(__pbssBANK0+7)& (0+127)
  1326     0042  01A8               	clrf	(__pbssBANK0+8)& (0+127)
  1327     0043  01A9               	clrf	(__pbssBANK0+9)& (0+127)
  1328     0044                     end_of_initialization:	
  1329                           ;End of C runtime variable initialization code
  1330                           
  1331     0044                     __end_of__initialization:
  1332     0044  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1333     0045  0140               	movlb	0
  1334     0046  28EF               	ljmp	_main	;jump to C main() function
  1335                           
  1336                           	psect	bssCOMMON
  1337     0070                     __pbssCOMMON:
  1338     0070                     CCP1_EvenCallBack@rising_edge_time:
  1339     0070                     	ds	2
  1340     0072                     CCP1_EvenCallBack@falling_edge_time:
  1341     0072                     	ds	2
  1342     0074                     CCP1_EvenCallBack@cycle_time:
  1343     0074                     	ds	2
  1344     0076                     CCP1_EvenCallBack@rise_edge_flag:
  1345     0076                     	ds	1
  1346                           
  1347                           	psect	bssBANK0
  1348     0020                     __pbssBANK0:
  1349     0020                     _timer1ReloadVal:
  1350     0020                     	ds	2
  1351     0022                     CCP1_EvenCallBack@LO_us:
  1352     0022                     	ds	2
  1353     0024                     CCP1_EvenCallBack@HI_us:
  1354     0024                     	ds	2
  1355     0026                     CCP1_EvenCallBack@pluse_width_HI:
  1356     0026                     	ds	2
  1357     0028                     CCP1_EvenCallBack@pluse_width_LO:
  1358     0028                     	ds	2
  1359                           
  1360                           	psect	cstackCOMMON
  1361     0077                     __pcstackCOMMON:
  1362     0077                     ?_PIN_MANAGER_Initialize:
  1363     0077                     ?_OSCILLATOR_Initialize:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366     0077                     ?_WDT_Initialize:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369     0077                     ?_CCP1_Initialize:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372     0077                     ?_TMR2_Initialize:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375     0077                     ?_TMR1_Initialize:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378     0077                     ?_TMR0_Initialize:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381     0077                     ?_TMR0_ISR:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384     0077                     ??_TMR0_ISR:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387     0077                     ?_CCP1_CaptureISR:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390     0077                     ?_TMR2_ISR:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393     0077                     ??_TMR2_ISR:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396     0077                     ?_TMR0_DefaultInterruptHandler:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399     0077                     ??_TMR0_DefaultInterruptHandler:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402     0077                     ?_TMR2_StartTimer:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405     0077                     ?_TMR2_WriteTimer:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408     0077                     ?_TMR2_DefaultInterruptHandler:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411     0077                     ??_TMR2_DefaultInterruptHandler:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414     0077                     ?_SYSTEM_Initialize:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417     0077                     ?_INTERRUPT_InterruptManager:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420     0077                     ?_TMR0_WriteTimer:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423     0077                     ?_TMR0_EvenHandler:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426     0077                     ??_TMR0_EvenHandler:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429     0077                     ?_TMR2_EvenHandler:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432     0077                     ??_TMR2_EvenHandler:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435     0077                     ?_main:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438     0077                     ?_TMR2_Start:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441     0077                     ?_TMR2_Counter8BitSet:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444     0077                     ?i1_TMR0_WriteTimer:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447     0077                     ??i1_TMR0_WriteTimer:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450     0077                     i1TMR0_WriteTimer@timerVal:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453                           
  1454                           ; 1 bytes @ 0x0
  1455     0077                     	ds	1
  1456     0078                     ?_CCP1_EvenCallBack:
  1457     0078                     ?_CCP1_DefaultCallBack:	
  1458                           ; 1 bytes @ 0x1
  1459                           
  1460     0078                     CCP1_EvenCallBack@captured:	
  1461                           ; 1 bytes @ 0x1
  1462                           
  1463     0078                     CCP1_DefaultCallBack@capturedValue:	
  1464                           ; 2 bytes @ 0x1
  1465                           
  1466                           
  1467                           ; 2 bytes @ 0x1
  1468     0078                     	ds	2
  1469     007A                     ??_CCP1_EvenCallBack:
  1470     007A                     ??_CCP1_DefaultCallBack:	
  1471                           ; 1 bytes @ 0x3
  1472                           
  1473                           
  1474                           ; 1 bytes @ 0x3
  1475     007A                     	ds	2
  1476     007C                     ??_CCP1_CaptureISR:
  1477     007C                     CCP1_CaptureISR@module:	
  1478                           ; 1 bytes @ 0x5
  1479                           
  1480                           
  1481                           ; 2 bytes @ 0x5
  1482     007C                     	ds	2
  1483     007E                     ??_INTERRUPT_InterruptManager:
  1484                           
  1485                           	psect	cstackBANK0
  1486     0030                     __pcstackBANK0:	
  1487                           ; 1 bytes @ 0x7
  1488                           
  1489     0030                     ??_PIN_MANAGER_Initialize:
  1490     0030                     ??_OSCILLATOR_Initialize:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493     0030                     ??_WDT_Initialize:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496     0030                     ??_TMR1_Initialize:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499     0030                     ?_TMR0_SetInterruptHandler:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502     0030                     ?_CCP1_SetCallBack:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505     0030                     ?_TMR2_SetInterruptHandler:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508     0030                     ??_TMR2_StartTimer:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511     0030                     ??_TMR0_WriteTimer:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514     0030                     ??_TMR2_Start:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517     0030                     ??_TMR2_Counter8BitSet:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520     0030                     TMR0_WriteTimer@timerVal:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523     0030                     TMR2_Counter8BitSet@timerVal:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526     0030                     TMR0_SetInterruptHandler@InterruptHandler:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529     0030                     CCP1_SetCallBack@customCallBack:	
  1530                           ; 2 bytes @ 0x0
  1531                           
  1532     0030                     TMR2_SetInterruptHandler@InterruptHandler:	
  1533                           ; 2 bytes @ 0x0
  1534                           
  1535                           
  1536                           ; 2 bytes @ 0x0
  1537     0030                     	ds	1
  1538     0031                     ??_TMR2_WriteTimer:
  1539     0031                     TMR2_WriteTimer@timerVal:	
  1540                           ; 1 bytes @ 0x1
  1541                           
  1542                           
  1543                           ; 1 bytes @ 0x1
  1544     0031                     	ds	1
  1545     0032                     ??_CCP1_Initialize:
  1546     0032                     ??_TMR2_Initialize:	
  1547                           ; 1 bytes @ 0x2
  1548                           
  1549     0032                     ??_TMR0_Initialize:	
  1550                           ; 1 bytes @ 0x2
  1551                           
  1552     0032                     ??_TMR0_SetInterruptHandler:	
  1553                           ; 1 bytes @ 0x2
  1554                           
  1555     0032                     ??_CCP1_SetCallBack:	
  1556                           ; 1 bytes @ 0x2
  1557                           
  1558     0032                     ??_TMR2_SetInterruptHandler:	
  1559                           ; 1 bytes @ 0x2
  1560                           
  1561     0032                     ??_SYSTEM_Initialize:	
  1562                           ; 1 bytes @ 0x2
  1563                           
  1564     0032                     ??_main:	
  1565                           ; 1 bytes @ 0x2
  1566                           
  1567                           
  1568                           	psect	maintext
  1569     00EF                     __pmaintext:	
  1570                           ; 1 bytes @ 0x2
  1571 ;;
  1572 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1573 ;;
  1574 ;; *************** function _main *****************
  1575 ;; Defined at:
  1576 ;;		line 127 in file "main.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;		None
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;		None
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, status,2, status,0, pclath, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : B3F/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1590 ;;      Params:         0       0       0       0
  1591 ;;      Locals:         0       0       0       0
  1592 ;;      Temps:          0       0       0       0
  1593 ;;      Totals:         0       0       0       0
  1594 ;;Total ram usage:        0 bytes
  1595 ;; Hardware stack levels required when called: 7
  1596 ;; This function calls:
  1597 ;;		_CCP1_SetCallBack
  1598 ;;		_SYSTEM_Initialize
  1599 ;;		_TMR0_SetInterruptHandler
  1600 ;;		_TMR0_WriteTimer
  1601 ;;		_TMR2_SetInterruptHandler
  1602 ;;		_TMR2_StartTimer
  1603 ;;		_TMR2_WriteTimer
  1604 ;; This function is called by:
  1605 ;;		Startup code after reset
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609     00EF                     _main:	
  1610                           ;psect for function _main
  1611                           
  1612     00EF                     l1438:	
  1613                           ;incstack = 0
  1614                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1615                           
  1616                           
  1617                           ;main.c: 129:   SYSTEM_Initialize();
  1618     00EF  3181  2136  3180   	fcall	_SYSTEM_Initialize
  1619                           
  1620                           ;main.c: 130:   TMR0_SetInterruptHandler(TMR0_EvenHandler);
  1621     00F2  3001               	movlw	low _TMR0_EvenHandler
  1622     00F3  0140               	movlb	0	; select bank0
  1623     00F4  00B0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1624     00F5  3002               	movlw	high _TMR0_EvenHandler
  1625     00F6  00B1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1626     00F7  3181  21E2  3180   	fcall	_TMR0_SetInterruptHandler
  1627                           
  1628                           ;main.c: 131:   CCP1_SetCallBack(CCP1_EvenCallBack);
  1629     00FA  3047               	movlw	low _CCP1_EvenCallBack
  1630     00FB  0140               	movlb	0	; select bank0
  1631     00FC  00B0               	movwf	CCP1_SetCallBack@customCallBack
  1632     00FD  3000               	movlw	high _CCP1_EvenCallBack
  1633     00FE  00B1               	movwf	CCP1_SetCallBack@customCallBack+1
  1634     00FF  3181  21EE  3180   	fcall	_CCP1_SetCallBack
  1635                           
  1636                           ;main.c: 132:   TMR2_SetInterruptHandler(TMR2_EvenHandler);
  1637     0102  30FD               	movlw	low _TMR2_EvenHandler
  1638     0103  0140               	movlb	0	; select bank0
  1639     0104  00B0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1640     0105  3001               	movlw	high _TMR2_EvenHandler
  1641     0106  00B1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1642     0107  3181  21DC  3180   	fcall	_TMR2_SetInterruptHandler
  1643     010A                     l1440:
  1644                           
  1645                           ;main.c: 138:   (INTCONbits.GIE = 1);
  1646     010A  178B               	bsf	11,7	;volatile
  1647     010B                     l1442:
  1648                           
  1649                           ;main.c: 141:   (INTCONbits.PEIE = 1);
  1650     010B  170B               	bsf	11,6	;volatile
  1651     010C                     l1444:
  1652                           
  1653                           ;main.c: 148:   TMR2_StartTimer();
  1654     010C  3181  21F9  3180   	fcall	_TMR2_StartTimer
  1655     010F                     l1446:
  1656                           
  1657                           ;main.c: 152:     if(PORTAbits.RA5==0)
  1658     010F  0140               	movlb	0	; select bank0
  1659     0110  1A8C               	btfsc	12,5	;volatile
  1660     0111  2913               	goto	u391
  1661     0112  2914               	goto	u390
  1662     0113                     u391:
  1663     0113  2919               	goto	l1450
  1664     0114                     u390:
  1665     0114                     l1448:
  1666                           
  1667                           ;main.c: 153:     {;main.c: 154:       TMR2_WriteTimer(0);
  1668     0114  3000               	movlw	0
  1669     0115  3181  21C9  3180   	fcall	_TMR2_WriteTimer
  1670                           
  1671                           ;main.c: 155:     }
  1672     0118  290F               	goto	l1446
  1673     0119                     l1450:
  1674                           
  1675                           ;main.c: 157:     {;main.c: 158:       TMR0_WriteTimer(0);
  1676     0119  3000               	movlw	0
  1677     011A  3181  21D6  3180   	fcall	_TMR0_WriteTimer
  1678     011D  290F               	goto	l1446
  1679     011E  2831               	ljmp	start
  1680     011F                     __end_of_main:
  1681                           
  1682                           	psect	text1
  1683     01C9                     __ptext1:	
  1684 ;; *************** function _TMR2_WriteTimer *****************
  1685 ;; Defined at:
  1686 ;;		line 150 in file "mcc_generated_files/tmr2.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  timerVal        1    wreg     unsigned char 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  timerVal        1    1[BANK0 ] unsigned char 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0, pclath, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1700 ;;      Params:         0       0       0       0
  1701 ;;      Locals:         0       1       0       0
  1702 ;;      Temps:          0       0       0       0
  1703 ;;      Totals:         0       1       0       0
  1704 ;;Total ram usage:        1 bytes
  1705 ;; Hardware stack levels used: 1
  1706 ;; Hardware stack levels required when called: 5
  1707 ;; This function calls:
  1708 ;;		_TMR2_Counter8BitSet
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714     01C9                     _TMR2_WriteTimer:	
  1715                           ;psect for function _TMR2_WriteTimer
  1716                           
  1717                           
  1718                           ;incstack = 0
  1719                           ; Regs used in _TMR2_WriteTimer: [wreg+status,2+status,0+pclath+cstack]
  1720                           ;TMR2_WriteTimer@timerVal stored from wreg
  1721     01C9  0140               	movlb	0	; select bank0
  1722     01CA  00B1               	movwf	TMR2_WriteTimer@timerVal
  1723     01CB                     l1436:
  1724                           
  1725                           ;mcc_generated_files/tmr2.c: 150: void TMR2_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr2.c: 151: {;mcc_generated_files/tmr2.c: 152:     TMR2_Counter8BitSet(timerVal);
  1726     01CB  0831               	movf	TMR2_WriteTimer@timerVal,w
  1727     01CC  3181  21D0  3181   	fcall	_TMR2_Counter8BitSet
  1728     01CF                     l354:
  1729     01CF  0008               	return
  1730     01D0                     __end_of_TMR2_WriteTimer:
  1731                           
  1732                           	psect	text2
  1733     01D0                     __ptext2:	
  1734 ;; *************** function _TMR2_Counter8BitSet *****************
  1735 ;; Defined at:
  1736 ;;		line 144 in file "mcc_generated_files/tmr2.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  timerVal        1    wreg     unsigned char 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  timerVal        1    0[BANK0 ] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1750 ;;      Params:         0       0       0       0
  1751 ;;      Locals:         0       1       0       0
  1752 ;;      Temps:          0       0       0       0
  1753 ;;      Totals:         0       1       0       0
  1754 ;;Total ram usage:        1 bytes
  1755 ;; Hardware stack levels used: 1
  1756 ;; Hardware stack levels required when called: 4
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_TMR2_WriteTimer
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764     01D0                     _TMR2_Counter8BitSet:	
  1765                           ;psect for function _TMR2_Counter8BitSet
  1766                           
  1767                           
  1768                           ;incstack = 0
  1769                           ; Regs used in _TMR2_Counter8BitSet: [wreg]
  1770                           ;TMR2_Counter8BitSet@timerVal stored from wreg
  1771     01D0  0140               	movlb	0	; select bank0
  1772     01D1  00B0               	movwf	TMR2_Counter8BitSet@timerVal
  1773     01D2                     l1418:
  1774                           
  1775                           ;mcc_generated_files/tmr2.c: 144: void TMR2_Counter8BitSet(uint8_t timerVal);mcc_generat
      +                          ed_files/tmr2.c: 145: {;mcc_generated_files/tmr2.c: 147:     TMR2 = timerVal;
  1776     01D2  0830               	movf	TMR2_Counter8BitSet@timerVal,w
  1777     01D3  0145               	movlb	5	; select bank5
  1778     01D4  008C               	movwf	12	;volatile
  1779     01D5                     l351:
  1780     01D5  0008               	return
  1781     01D6                     __end_of_TMR2_Counter8BitSet:
  1782                           
  1783                           	psect	text3
  1784     01F9                     __ptext3:	
  1785 ;; *************** function _TMR2_StartTimer *****************
  1786 ;; Defined at:
  1787 ;;		line 114 in file "mcc_generated_files/tmr2.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		status,2, status,0, pclath, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1801 ;;      Params:         0       0       0       0
  1802 ;;      Locals:         0       0       0       0
  1803 ;;      Temps:          0       0       0       0
  1804 ;;      Totals:         0       0       0       0
  1805 ;;Total ram usage:        0 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; Hardware stack levels required when called: 5
  1808 ;; This function calls:
  1809 ;;		_TMR2_Start
  1810 ;; This function is called by:
  1811 ;;		_main
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815     01F9                     _TMR2_StartTimer:	
  1816                           ;psect for function _TMR2_StartTimer
  1817                           
  1818     01F9                     l1434:	
  1819                           ;incstack = 0
  1820                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
  1821                           
  1822                           
  1823                           ;mcc_generated_files/tmr2.c: 116:     TMR2_Start();
  1824     01F9  3182  2205  3181   	fcall	_TMR2_Start
  1825     01FC                     l336:
  1826     01FC  0008               	return
  1827     01FD                     __end_of_TMR2_StartTimer:
  1828                           
  1829                           	psect	text4
  1830     0205                     __ptext4:	
  1831 ;; *************** function _TMR2_Start *****************
  1832 ;; Defined at:
  1833 ;;		line 108 in file "mcc_generated_files/tmr2.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;		None
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		None
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1847 ;;      Params:         0       0       0       0
  1848 ;;      Locals:         0       0       0       0
  1849 ;;      Temps:          0       0       0       0
  1850 ;;      Totals:         0       0       0       0
  1851 ;;Total ram usage:        0 bytes
  1852 ;; Hardware stack levels used: 1
  1853 ;; Hardware stack levels required when called: 4
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		_TMR2_StartTimer
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861     0205                     _TMR2_Start:	
  1862                           ;psect for function _TMR2_Start
  1863                           
  1864     0205                     l1416:	
  1865                           ;incstack = 0
  1866                           ; Regs used in _TMR2_Start: []
  1867                           
  1868                           
  1869                           ;mcc_generated_files/tmr2.c: 111:     T2CONbits.TMR2ON = 1;
  1870     0205  0145               	movlb	5	; select bank5
  1871     0206  178E               	bsf	14,7	;volatile
  1872     0207                     l333:
  1873     0207  0008               	return
  1874     0208                     __end_of_TMR2_Start:
  1875                           
  1876                           	psect	text5
  1877     01D6                     __ptext5:	
  1878 ;; *************** function _TMR0_WriteTimer *****************
  1879 ;; Defined at:
  1880 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  timerVal        1    wreg     unsigned char 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  timerVal        1    0[BANK0 ] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1894 ;;      Params:         0       0       0       0
  1895 ;;      Locals:         0       1       0       0
  1896 ;;      Temps:          0       0       0       0
  1897 ;;      Totals:         0       1       0       0
  1898 ;;Total ram usage:        1 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 4
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908     01D6                     _TMR0_WriteTimer:	
  1909                           ;psect for function _TMR0_WriteTimer
  1910                           
  1911                           
  1912                           ;incstack = 0
  1913                           ; Regs used in _TMR0_WriteTimer: [wreg]
  1914                           ;TMR0_WriteTimer@timerVal stored from wreg
  1915     01D6  0140               	movlb	0	; select bank0
  1916     01D7  00B0               	movwf	TMR0_WriteTimer@timerVal
  1917     01D8                     l1432:
  1918                           
  1919                           ;mcc_generated_files/tmr0.c: 109: void TMR0_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr0.c: 110: {;mcc_generated_files/tmr0.c: 112:     TMR0L = timerVal;
  1920     01D8  0830               	movf	TMR0_WriteTimer@timerVal,w
  1921     01D9  014B               	movlb	11	; select bank11
  1922     01DA  009C               	movwf	28	;volatile
  1923     01DB                     l117:
  1924     01DB  0008               	return
  1925     01DC                     __end_of_TMR0_WriteTimer:
  1926                           
  1927                           	psect	text6
  1928     0136                     __ptext6:	
  1929 ;; *************** function _SYSTEM_Initialize *****************
  1930 ;; Defined at:
  1931 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, status,0, pclath, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1945 ;;      Params:         0       0       0       0
  1946 ;;      Locals:         0       0       0       0
  1947 ;;      Temps:          0       0       0       0
  1948 ;;      Totals:         0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 6
  1952 ;; This function calls:
  1953 ;;		_CCP1_Initialize
  1954 ;;		_OSCILLATOR_Initialize
  1955 ;;		_PIN_MANAGER_Initialize
  1956 ;;		_TMR0_Initialize
  1957 ;;		_TMR1_Initialize
  1958 ;;		_TMR2_Initialize
  1959 ;;		_WDT_Initialize
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965     0136                     _SYSTEM_Initialize:	
  1966                           ;psect for function _SYSTEM_Initialize
  1967                           
  1968     0136                     l1420:	
  1969                           ;incstack = 0
  1970                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1971                           
  1972                           
  1973                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1974     0136  3181  219A  3181   	fcall	_PIN_MANAGER_Initialize
  1975                           
  1976                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1977     0139  3181  21E8  3181   	fcall	_OSCILLATOR_Initialize
  1978     013C                     l1422:
  1979                           
  1980                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1981     013C  3182  2208  3181   	fcall	_WDT_Initialize
  1982     013F                     l1424:
  1983                           
  1984                           ;mcc_generated_files/mcc.c: 56:     CCP1_Initialize();
  1985     013F  3181  2176  3181   	fcall	_CCP1_Initialize
  1986     0142                     l1426:
  1987                           
  1988                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  1989     0142  3181  211F  3181   	fcall	_TMR2_Initialize
  1990     0145                     l1428:
  1991                           
  1992                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  1993     0145  3181  214C  3181   	fcall	_TMR1_Initialize
  1994     0148                     l1430:
  1995                           
  1996                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  1997     0148  3181  2161  3181   	fcall	_TMR0_Initialize
  1998     014B                     l25:
  1999     014B  0008               	return
  2000     014C                     __end_of_SYSTEM_Initialize:
  2001                           
  2002                           	psect	text7
  2003     0208                     __ptext7:	
  2004 ;; *************** function _WDT_Initialize *****************
  2005 ;; Defined at:
  2006 ;;		line 72 in file "mcc_generated_files/mcc.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		status,2
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2020 ;;      Params:         0       0       0       0
  2021 ;;      Locals:         0       0       0       0
  2022 ;;      Temps:          0       0       0       0
  2023 ;;      Totals:         0       0       0       0
  2024 ;;Total ram usage:        0 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 4
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_SYSTEM_Initialize
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034     0208                     _WDT_Initialize:	
  2035                           ;psect for function _WDT_Initialize
  2036                           
  2037     0208                     l1358:	
  2038                           ;incstack = 0
  2039                           ; Regs used in _WDT_Initialize: [status,2]
  2040                           
  2041                           
  2042                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x00;
  2043     0208  0150               	movlb	16	; select bank16
  2044     0209  018C               	clrf	12	;volatile
  2045     020A                     l31:
  2046     020A  0008               	return
  2047     020B                     __end_of_WDT_Initialize:
  2048                           
  2049                           	psect	text8
  2050     011F                     __ptext8:	
  2051 ;; *************** function _TMR2_Initialize *****************
  2052 ;; Defined at:
  2053 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0, pclath, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2067 ;;      Params:         0       0       0       0
  2068 ;;      Locals:         0       0       0       0
  2069 ;;      Temps:          0       0       0       0
  2070 ;;      Totals:         0       0       0       0
  2071 ;;Total ram usage:        0 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; Hardware stack levels required when called: 5
  2074 ;; This function calls:
  2075 ;;		_TMR2_SetInterruptHandler
  2076 ;; This function is called by:
  2077 ;;		_SYSTEM_Initialize
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081     011F                     _TMR2_Initialize:	
  2082                           ;psect for function _TMR2_Initialize
  2083                           
  2084     011F                     l1374:	
  2085                           ;incstack = 0
  2086                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2087                           
  2088                           
  2089                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
  2090     011F  3001               	movlw	1
  2091     0120  0145               	movlb	5	; select bank5
  2092     0121  0090               	movwf	16	;volatile
  2093     0122                     l1376:
  2094                           
  2095                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
  2096     0122  018F               	clrf	15	;volatile
  2097     0123                     l1378:
  2098                           
  2099                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
  2100     0123  0191               	clrf	17	;volatile
  2101                           
  2102                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x8C;
  2103     0124  308C               	movlw	140
  2104     0125  008D               	movwf	13	;volatile
  2105     0126                     l1380:
  2106                           
  2107                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
  2108     0126  018C               	clrf	12	;volatile
  2109     0127                     l1382:
  2110                           
  2111                           ;mcc_generated_files/tmr2.c: 84:     PIR1bits.TMR2IF = 0;
  2112     0127  014E               	movlb	14	; select bank14
  2113     0128  130D               	bcf	13,6	;volatile
  2114     0129                     l1384:
  2115                           
  2116                           ;mcc_generated_files/tmr2.c: 87:     PIE1bits.TMR2IE = 1;
  2117     0129  1717               	bsf	23,6	;volatile
  2118     012A                     l1386:
  2119                           
  2120                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2121     012A  300B               	movlw	low _TMR2_DefaultInterruptHandler
  2122     012B  0140               	movlb	0	; select bank0
  2123     012C  00B0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2124     012D  3002               	movlw	high _TMR2_DefaultInterruptHandler
  2125     012E  00B1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2126     012F  3181  21DC  3181   	fcall	_TMR2_SetInterruptHandler
  2127     0132                     l1388:
  2128                           
  2129                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xF1;
  2130     0132  30F1               	movlw	241
  2131     0133  0145               	movlb	5	; select bank5
  2132     0134  008E               	movwf	14	;volatile
  2133     0135                     l324:
  2134     0135  0008               	return
  2135     0136                     __end_of_TMR2_Initialize:
  2136                           
  2137                           	psect	text9
  2138     01DC                     __ptext9:	
  2139 ;; *************** function _TMR2_SetInterruptHandler *****************
  2140 ;; Defined at:
  2141 ;;		line 178 in file "mcc_generated_files/tmr2.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2144 ;;		 -> TMR2_DefaultInterruptHandler(1), TMR2_EvenHandler(1), 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2156 ;;      Params:         0       2       0       0
  2157 ;;      Locals:         0       0       0       0
  2158 ;;      Temps:          0       0       0       0
  2159 ;;      Totals:         0       2       0       0
  2160 ;;Total ram usage:        2 bytes
  2161 ;; Hardware stack levels used: 1
  2162 ;; Hardware stack levels required when called: 4
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_main
  2167 ;;		_TMR2_Initialize
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171     01DC                     _TMR2_SetInterruptHandler:	
  2172                           ;psect for function _TMR2_SetInterruptHandler
  2173                           
  2174     01DC                     l1338:	
  2175                           ;incstack = 0
  2176                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2177                           
  2178                           
  2179                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
  2180     01DC  0140               	movlb	0	; select bank0
  2181     01DD  0831               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2182     01DE  00AB               	movwf	_TMR2_InterruptHandler+1
  2183     01DF  0830               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2184     01E0  00AA               	movwf	_TMR2_InterruptHandler
  2185     01E1                     l367:
  2186     01E1  0008               	return
  2187     01E2                     __end_of_TMR2_SetInterruptHandler:
  2188                           
  2189                           	psect	text10
  2190     014C                     __ptext10:	
  2191 ;; *************** function _TMR1_Initialize *****************
  2192 ;; Defined at:
  2193 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2207 ;;      Params:         0       0       0       0
  2208 ;;      Locals:         0       0       0       0
  2209 ;;      Temps:          0       0       0       0
  2210 ;;      Totals:         0       0       0       0
  2211 ;;Total ram usage:        0 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 4
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_SYSTEM_Initialize
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221     014C                     _TMR1_Initialize:	
  2222                           ;psect for function _TMR1_Initialize
  2223                           
  2224     014C                     l1390:	
  2225                           ;incstack = 0
  2226                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  2227                           
  2228                           
  2229                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  2230     014C  0144               	movlb	4	; select bank4
  2231     014D  018F               	clrf	15	;volatile
  2232                           
  2233                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x00;
  2234     014E  0190               	clrf	16	;volatile
  2235     014F                     l1392:
  2236                           
  2237                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x01;
  2238     014F  3001               	movlw	1
  2239     0150  0091               	movwf	17	;volatile
  2240     0151                     l1394:
  2241                           
  2242                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0x00;
  2243     0151  018D               	clrf	13	;volatile
  2244     0152                     l1396:
  2245                           
  2246                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0x00;
  2247     0152  018C               	clrf	12	;volatile
  2248     0153                     l1398:
  2249                           
  2250                           ;mcc_generated_files/tmr1.c: 83:     PIR1bits.TMR1IF = 0;
  2251     0153  014E               	movlb	14	; select bank14
  2252     0154  128D               	bcf	13,5	;volatile
  2253     0155                     l1400:
  2254                           
  2255                           ;mcc_generated_files/tmr1.c: 86:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2256     0155  0144               	movlb	4	; select bank4
  2257     0156  080D               	movf	13,w	;volatile
  2258     0157  0140               	movlb	0	; select bank0
  2259     0158  00A1               	movwf	_timer1ReloadVal+1	;volatile
  2260     0159  0144               	movlb	4	; select bank4
  2261     015A  080C               	movf	12,w	;volatile
  2262     015B  0140               	movlb	0	; select bank0
  2263     015C  00A0               	movwf	_timer1ReloadVal	;volatile
  2264     015D                     l1402:
  2265                           
  2266                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x01;
  2267     015D  3001               	movlw	1
  2268     015E  0144               	movlb	4	; select bank4
  2269     015F  008E               	movwf	14	;volatile
  2270     0160                     l235:
  2271     0160  0008               	return
  2272     0161                     __end_of_TMR1_Initialize:
  2273                           
  2274                           	psect	text11
  2275     0161                     __ptext11:	
  2276 ;; *************** function _TMR0_Initialize *****************
  2277 ;; Defined at:
  2278 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;		None
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;		None
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		wreg, status,2, status,0, pclath, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2292 ;;      Params:         0       0       0       0
  2293 ;;      Locals:         0       0       0       0
  2294 ;;      Temps:          0       0       0       0
  2295 ;;      Totals:         0       0       0       0
  2296 ;;Total ram usage:        0 bytes
  2297 ;; Hardware stack levels used: 1
  2298 ;; Hardware stack levels required when called: 5
  2299 ;; This function calls:
  2300 ;;		_TMR0_SetInterruptHandler
  2301 ;; This function is called by:
  2302 ;;		_SYSTEM_Initialize
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306     0161                     _TMR0_Initialize:	
  2307                           ;psect for function _TMR0_Initialize
  2308                           
  2309     0161                     l1404:	
  2310                           ;incstack = 0
  2311                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2312                           
  2313                           
  2314                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x44;
  2315     0161  3044               	movlw	68
  2316     0162  014B               	movlb	11	; select bank11
  2317     0163  009F               	movwf	31	;volatile
  2318                           
  2319                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x9B;
  2320     0164  309B               	movlw	155
  2321     0165  009D               	movwf	29	;volatile
  2322     0166                     l1406:
  2323                           
  2324                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  2325     0166  019C               	clrf	28	;volatile
  2326     0167                     l1408:
  2327                           
  2328                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  2329     0167  014E               	movlb	14	; select bank14
  2330     0168  128C               	bcf	12,5	;volatile
  2331     0169                     l1410:
  2332                           
  2333                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  2334     0169  1696               	bsf	22,5	;volatile
  2335     016A                     l1412:
  2336                           
  2337                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2338     016A  300C               	movlw	low _TMR0_DefaultInterruptHandler
  2339     016B  0140               	movlb	0	; select bank0
  2340     016C  00B0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2341     016D  3002               	movlw	high _TMR0_DefaultInterruptHandler
  2342     016E  00B1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2343     016F  3181  21E2  3181   	fcall	_TMR0_SetInterruptHandler
  2344     0172                     l1414:
  2345                           
  2346                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x8F;
  2347     0172  308F               	movlw	143
  2348     0173  014B               	movlb	11	; select bank11
  2349     0174  009E               	movwf	30	;volatile
  2350     0175                     l105:
  2351     0175  0008               	return
  2352     0176                     __end_of_TMR0_Initialize:
  2353                           
  2354                           	psect	text12
  2355     01E2                     __ptext12:	
  2356 ;; *************** function _TMR0_SetInterruptHandler *****************
  2357 ;; Defined at:
  2358 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2361 ;;		 -> TMR0_EvenHandler(1), TMR0_DefaultInterruptHandler(1), 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		wreg
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2373 ;;      Params:         0       2       0       0
  2374 ;;      Locals:         0       0       0       0
  2375 ;;      Temps:          0       0       0       0
  2376 ;;      Totals:         0       2       0       0
  2377 ;;Total ram usage:        2 bytes
  2378 ;; Hardware stack levels used: 1
  2379 ;; Hardware stack levels required when called: 4
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_TMR0_Initialize
  2384 ;;		_main
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388     01E2                     _TMR0_SetInterruptHandler:	
  2389                           ;psect for function _TMR0_SetInterruptHandler
  2390                           
  2391     01E2                     l1334:	
  2392                           ;incstack = 0
  2393                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2394                           
  2395                           
  2396                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
  2397     01E2  0140               	movlb	0	; select bank0
  2398     01E3  0831               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2399     01E4  00AF               	movwf	_TMR0_InterruptHandler+1
  2400     01E5  0830               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2401     01E6  00AE               	movwf	_TMR0_InterruptHandler
  2402     01E7                     l127:
  2403     01E7  0008               	return
  2404     01E8                     __end_of_TMR0_SetInterruptHandler:
  2405                           
  2406                           	psect	text13
  2407     019A                     __ptext13:	
  2408 ;; *************** function _PIN_MANAGER_Initialize *****************
  2409 ;; Defined at:
  2410 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2424 ;;      Params:         0       0       0       0
  2425 ;;      Locals:         0       0       0       0
  2426 ;;      Temps:          0       0       0       0
  2427 ;;      Totals:         0       0       0       0
  2428 ;;Total ram usage:        0 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; Hardware stack levels required when called: 4
  2431 ;; This function calls:
  2432 ;;		Nothing
  2433 ;; This function is called by:
  2434 ;;		_SYSTEM_Initialize
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438     019A                     _PIN_MANAGER_Initialize:	
  2439                           ;psect for function _PIN_MANAGER_Initialize
  2440                           
  2441     019A                     l1340:	
  2442                           ;incstack = 0
  2443                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2444                           
  2445                           
  2446                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2447     019A  0140               	movlb	0	; select bank0
  2448     019B  0198               	clrf	24	;volatile
  2449     019C                     l1342:
  2450                           
  2451                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x2B;
  2452     019C  302B               	movlw	43
  2453     019D  0092               	movwf	18	;volatile
  2454     019E                     l1344:
  2455                           
  2456                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x03;
  2457     019E  3003               	movlw	3
  2458     019F  017E               	movlb	62	; select bank62
  2459     01A0  00B8               	movwf	56	;volatile
  2460                           
  2461                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  2462     01A1  01B9               	clrf	57	;volatile
  2463                           
  2464                           ;mcc_generated_files/pin_manager.c: 80:     ODCONA = 0x00;
  2465     01A2  01BA               	clrf	58	;volatile
  2466     01A3                     l1346:
  2467                           
  2468                           ;mcc_generated_files/pin_manager.c: 85:     SLRCONA = 0x37;
  2469     01A3  3037               	movlw	55
  2470     01A4  00BB               	movwf	59	;volatile
  2471     01A5                     l1348:
  2472                           
  2473                           ;mcc_generated_files/pin_manager.c: 90:     INLVLA = 0x3F;
  2474     01A5  303F               	movlw	63
  2475     01A6  00BC               	movwf	60	;volatile
  2476     01A7                     l1350:
  2477                           
  2478                           ;mcc_generated_files/pin_manager.c: 99:     CCP1PPS = 0x05;
  2479     01A7  3005               	movlw	5
  2480     01A8  017D               	movlb	61	; select bank61
  2481     01A9  00A1               	movwf	33	;volatile
  2482     01AA                     l50:
  2483     01AA  0008               	return
  2484     01AB                     __end_of_PIN_MANAGER_Initialize:
  2485                           
  2486                           	psect	text14
  2487     01E8                     __ptext14:	
  2488 ;; *************** function _OSCILLATOR_Initialize *****************
  2489 ;; Defined at:
  2490 ;;		line 62 in file "mcc_generated_files/mcc.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2504 ;;      Params:         0       0       0       0
  2505 ;;      Locals:         0       0       0       0
  2506 ;;      Temps:          0       0       0       0
  2507 ;;      Totals:         0       0       0       0
  2508 ;;Total ram usage:        0 bytes
  2509 ;; Hardware stack levels used: 1
  2510 ;; Hardware stack levels required when called: 4
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_SYSTEM_Initialize
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518     01E8                     _OSCILLATOR_Initialize:	
  2519                           ;psect for function _OSCILLATOR_Initialize
  2520                           
  2521     01E8                     l1352:	
  2522                           ;incstack = 0
  2523                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2524                           
  2525                           
  2526                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  2527     01E8  0151               	movlb	17	; select bank17
  2528     01E9  0191               	clrf	17	;volatile
  2529     01EA                     l1354:
  2530                           
  2531                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x05;
  2532     01EA  3005               	movlw	5
  2533     01EB  0093               	movwf	19	;volatile
  2534     01EC                     l1356:
  2535                           
  2536                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  2537     01EC  0192               	clrf	18	;volatile
  2538     01ED                     l28:
  2539     01ED  0008               	return
  2540     01EE                     __end_of_OSCILLATOR_Initialize:
  2541                           
  2542                           	psect	text15
  2543     0176                     __ptext15:	
  2544 ;; *************** function _CCP1_Initialize *****************
  2545 ;; Defined at:
  2546 ;;		line 65 in file "mcc_generated_files/ccp1.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;		None
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0, pclath, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2560 ;;      Params:         0       0       0       0
  2561 ;;      Locals:         0       0       0       0
  2562 ;;      Temps:          0       0       0       0
  2563 ;;      Totals:         0       0       0       0
  2564 ;;Total ram usage:        0 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; Hardware stack levels required when called: 5
  2567 ;; This function calls:
  2568 ;;		_CCP1_SetCallBack
  2569 ;; This function is called by:
  2570 ;;		_SYSTEM_Initialize
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574     0176                     _CCP1_Initialize:	
  2575                           ;psect for function _CCP1_Initialize
  2576                           
  2577     0176                     l1360:	
  2578                           ;incstack = 0
  2579                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2580                           
  2581                           
  2582                           ;mcc_generated_files/ccp1.c: 70:  CCP1CON = 0x84;
  2583     0176  3084               	movlw	132
  2584     0177  0146               	movlb	6	; select bank6
  2585     0178  008E               	movwf	14	;volatile
  2586     0179                     l1362:
  2587                           
  2588                           ;mcc_generated_files/ccp1.c: 73:  CCP1CAP = 0x00;
  2589     0179  018F               	clrf	15	;volatile
  2590     017A                     l1364:
  2591                           
  2592                           ;mcc_generated_files/ccp1.c: 76:  CCPR1H = 0x00;
  2593     017A  018D               	clrf	13	;volatile
  2594     017B                     l1366:
  2595                           
  2596                           ;mcc_generated_files/ccp1.c: 79:  CCPR1L = 0x00;
  2597     017B  018C               	clrf	12	;volatile
  2598     017C                     l1368:
  2599                           
  2600                           ;mcc_generated_files/ccp1.c: 82:     CCP1_SetCallBack(CCP1_DefaultCallBack);
  2601     017C  300D               	movlw	low _CCP1_DefaultCallBack
  2602     017D  0140               	movlb	0	; select bank0
  2603     017E  00B0               	movwf	CCP1_SetCallBack@customCallBack
  2604     017F  3002               	movlw	high _CCP1_DefaultCallBack
  2605     0180  00B1               	movwf	CCP1_SetCallBack@customCallBack+1
  2606     0181  3181  21EE  3181   	fcall	_CCP1_SetCallBack
  2607     0184                     l1370:
  2608                           
  2609                           ;mcc_generated_files/ccp1.c: 86:     PIR1bits.CCP1IF = 0;
  2610     0184  014E               	movlb	14	; select bank14
  2611     0185  138D               	bcf	13,7	;volatile
  2612     0186                     l1372:
  2613                           
  2614                           ;mcc_generated_files/ccp1.c: 89:     PIE1bits.CCP1IE = 1;
  2615     0186  1797               	bsf	23,7	;volatile
  2616     0187                     l283:
  2617     0187  0008               	return
  2618     0188                     __end_of_CCP1_Initialize:
  2619                           
  2620                           	psect	text16
  2621     01EE                     __ptext16:	
  2622 ;; *************** function _CCP1_SetCallBack *****************
  2623 ;; Defined at:
  2624 ;;		line 107 in file "mcc_generated_files/ccp1.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  2627 ;;		 -> CCP1_DefaultCallBack(1), CCP1_EvenCallBack(1), 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;		None
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      void 
  2632 ;; Registers used:
  2633 ;;		wreg
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2639 ;;      Params:         0       2       0       0
  2640 ;;      Locals:         0       0       0       0
  2641 ;;      Temps:          0       0       0       0
  2642 ;;      Totals:         0       2       0       0
  2643 ;;Total ram usage:        2 bytes
  2644 ;; Hardware stack levels used: 1
  2645 ;; Hardware stack levels required when called: 4
  2646 ;; This function calls:
  2647 ;;		Nothing
  2648 ;; This function is called by:
  2649 ;;		_main
  2650 ;;		_CCP1_Initialize
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654     01EE                     _CCP1_SetCallBack:	
  2655                           ;psect for function _CCP1_SetCallBack
  2656                           
  2657     01EE                     l1336:	
  2658                           ;incstack = 0
  2659                           ; Regs used in _CCP1_SetCallBack: [wreg]
  2660                           
  2661                           
  2662                           ;mcc_generated_files/ccp1.c: 108:     CCP1_CallBack = customCallBack;
  2663     01EE  0140               	movlb	0	; select bank0
  2664     01EF  0831               	movf	CCP1_SetCallBack@customCallBack+1,w
  2665     01F0  00AD               	movwf	_CCP1_CallBack+1
  2666     01F1  0830               	movf	CCP1_SetCallBack@customCallBack,w
  2667     01F2  00AC               	movwf	_CCP1_CallBack
  2668     01F3                     l289:
  2669     01F3  0008               	return
  2670     01F4                     __end_of_CCP1_SetCallBack:
  2671                           
  2672                           	psect	intentry
  2673     0004                     __pintentry:	
  2674 ;; *************** function _INTERRUPT_InterruptManager *****************
  2675 ;; Defined at:
  2676 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0, pclath, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2690 ;;      Params:         0       0       0       0
  2691 ;;      Locals:         0       0       0       0
  2692 ;;      Temps:          0       0       0       0
  2693 ;;      Totals:         0       0       0       0
  2694 ;;Total ram usage:        0 bytes
  2695 ;; Hardware stack levels used: 1
  2696 ;; Hardware stack levels required when called: 3
  2697 ;; This function calls:
  2698 ;;		_CCP1_CaptureISR
  2699 ;;		_TMR0_ISR
  2700 ;;		_TMR2_ISR
  2701 ;; This function is called by:
  2702 ;;		Interrupt level 1
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706     0004                     _INTERRUPT_InterruptManager:
  2707                           
  2708                           ;incstack = 0
  2709     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2710                           
  2711                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2712     0005  3180               	pagesel	$
  2713     0006                     i1l1302:
  2714                           
  2715                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  2716     0006  014E               	movlb	14	; select bank14
  2717     0007  1E96               	btfss	22,5	;volatile
  2718     0008  280A               	goto	u31_21
  2719     0009  280B               	goto	u31_20
  2720     000A                     u31_21:
  2721     000A  2813               	goto	i1l74
  2722     000B                     u31_20:
  2723     000B                     i1l1304:
  2724     000B  1E8C               	btfss	12,5	;volatile
  2725     000C  280E               	goto	u32_21
  2726     000D  280F               	goto	u32_20
  2727     000E                     u32_21:
  2728     000E  2813               	goto	i1l74
  2729     000F                     u32_20:
  2730     000F                     i1l1306:
  2731                           
  2732                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  2733     000F  3181  21BA  3180   	fcall	_TMR0_ISR
  2734                           
  2735                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  2736     0012  282F               	goto	i1l82
  2737     0013                     i1l74:	
  2738                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  2739                           
  2740     0013  1F0B               	btfss	11,6	;volatile
  2741     0014  2816               	goto	u33_21
  2742     0015  2817               	goto	u33_20
  2743     0016                     u33_21:
  2744     0016  282F               	goto	i1l82
  2745     0017                     u33_20:
  2746     0017                     i1l1308:
  2747                           
  2748                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.CCP1IE == 1 && PIR1bits.CCP1IF == 1)
  2749     0017  1F97               	btfss	23,7	;volatile
  2750     0018  281A               	goto	u34_21
  2751     0019  281B               	goto	u34_20
  2752     001A                     u34_21:
  2753     001A  2823               	goto	i1l77
  2754     001B                     u34_20:
  2755     001B                     i1l1310:
  2756     001B  1F8D               	btfss	13,7	;volatile
  2757     001C  281E               	goto	u35_21
  2758     001D  281F               	goto	u35_20
  2759     001E                     u35_21:
  2760     001E  2823               	goto	i1l77
  2761     001F                     u35_20:
  2762     001F                     i1l1312:
  2763                           
  2764                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             CCP1_CaptureISR();
  2765     001F  3181  2188  3180   	fcall	_CCP1_CaptureISR
  2766                           
  2767                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  2768     0022  282F               	goto	i1l82
  2769     0023                     i1l77:	
  2770                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.TMR2IE == 1 && PI
      +                          R1bits.TMR2IF == 1)
  2771                           
  2772     0023  1F17               	btfss	23,6	;volatile
  2773     0024  2826               	goto	u36_21
  2774     0025  2827               	goto	u36_20
  2775     0026                     u36_21:
  2776     0026  282F               	goto	i1l81
  2777     0027                     u36_20:
  2778     0027                     i1l1314:
  2779     0027  1F0D               	btfss	13,6	;volatile
  2780     0028  282A               	goto	u37_21
  2781     0029  282B               	goto	u37_20
  2782     002A                     u37_21:
  2783     002A  282F               	goto	i1l81
  2784     002B                     u37_20:
  2785     002B                     i1l1316:
  2786                           
  2787                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR2_ISR();
  2788     002B  3181  21AB  3180   	fcall	_TMR2_ISR
  2789                           
  2790                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  2791     002E  282F               	goto	i1l82
  2792     002F                     i1l81:	
  2793                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  2794                           
  2795     002F                     i1l82:
  2796     002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2797     0030  0009               	retfie
  2798     0031                     __end_of_INTERRUPT_InterruptManager:
  2799                           
  2800                           	psect	text18
  2801     01AB                     __ptext18:	
  2802 ;; *************** function _TMR2_ISR *****************
  2803 ;; Defined at:
  2804 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0, pclath, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2818 ;;      Params:         0       0       0       0
  2819 ;;      Locals:         0       0       0       0
  2820 ;;      Temps:          0       0       0       0
  2821 ;;      Totals:         0       0       0       0
  2822 ;;Total ram usage:        0 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; Hardware stack levels required when called: 1
  2825 ;; This function calls:
  2826 ;;		NULL
  2827 ;;		_TMR2_DefaultInterruptHandler
  2828 ;;		_TMR2_EvenHandler
  2829 ;; This function is called by:
  2830 ;;		_INTERRUPT_InterruptManager
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834     01AB                     _TMR2_ISR:	
  2835                           ;psect for function _TMR2_ISR
  2836                           
  2837     01AB                     i1l1278:	
  2838                           ;incstack = 0
  2839                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  2840                           
  2841                           
  2842                           ;mcc_generated_files/tmr2.c: 169:     PIR1bits.TMR2IF = 0;
  2843     01AB  014E               	movlb	14	; select bank14
  2844     01AC  130D               	bcf	13,6	;volatile
  2845     01AD                     i1l1280:
  2846                           
  2847                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
  2848     01AD  0140               	movlb	0	; select bank0
  2849     01AE  082A               	movf	_TMR2_InterruptHandler,w
  2850     01AF  042B               	iorwf	_TMR2_InterruptHandler+1,w
  2851     01B0  1903               	btfsc	3,2
  2852     01B1  29B3               	goto	u29_21
  2853     01B2  29B4               	goto	u29_20
  2854     01B3                     u29_21:
  2855     01B3  29B9               	goto	i1l364
  2856     01B4                     u29_20:
  2857     01B4                     i1l1282:
  2858                           
  2859                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
  2860     01B4  082B               	movf	_TMR2_InterruptHandler+1,w
  2861     01B5  008A               	movwf	10
  2862     01B6  082A               	movf	_TMR2_InterruptHandler,w
  2863     01B7  000A               	callw
  2864     01B8  3181               	pagesel	$
  2865     01B9                     i1l364:
  2866     01B9  0008               	return
  2867     01BA                     __end_of_TMR2_ISR:
  2868                           
  2869                           	psect	text19
  2870     020B                     __ptext19:	
  2871 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  2872 ;; Defined at:
  2873 ;;		line 182 in file "mcc_generated_files/tmr2.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		None
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2887 ;;      Params:         0       0       0       0
  2888 ;;      Locals:         0       0       0       0
  2889 ;;      Temps:          0       0       0       0
  2890 ;;      Totals:         0       0       0       0
  2891 ;;Total ram usage:        0 bytes
  2892 ;; Hardware stack levels used: 1
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		_TMR2_Initialize
  2897 ;;		_TMR2_ISR
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901     020B                     _TMR2_DefaultInterruptHandler:	
  2902                           ;psect for function _TMR2_DefaultInterruptHandler
  2903                           
  2904     020B                     i1l370:	
  2905                           ;incstack = 0
  2906                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  2907                           
  2908     020B  0008               	return
  2909     020C                     __end_of_TMR2_DefaultInterruptHandler:
  2910                           
  2911                           	psect	text20
  2912     01FD                     __ptext20:	
  2913 ;; *************** function _TMR2_EvenHandler *****************
  2914 ;; Defined at:
  2915 ;;		line 65 in file "main.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;		None
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;		None
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  1    wreg      void 
  2922 ;; Registers used:
  2923 ;;		None
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2929 ;;      Params:         0       0       0       0
  2930 ;;      Locals:         0       0       0       0
  2931 ;;      Temps:          0       0       0       0
  2932 ;;      Totals:         0       0       0       0
  2933 ;;Total ram usage:        0 bytes
  2934 ;; Hardware stack levels used: 1
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;;		_TMR2_ISR
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943     01FD                     _TMR2_EvenHandler:	
  2944                           ;psect for function _TMR2_EvenHandler
  2945                           
  2946     01FD                     i1l162:	
  2947                           ;incstack = 0
  2948                           ; Regs used in _TMR2_EvenHandler: []
  2949                           ;main.c: 66:     do { LATAbits.LATA2 = 1; } while(0);
  2950                           
  2951     01FD  0140               	movlb	0	; select bank0
  2952     01FE  1518               	bsf	24,2	;volatile
  2953     01FF                     i1l164:	
  2954                           ;main.c: 67:     do { LATAbits.LATA4 = 1; } while(0);
  2955                           
  2956     01FF  1618               	bsf	24,4	;volatile
  2957     0200                     i1l166:
  2958     0200  0008               	return
  2959     0201                     __end_of_TMR2_EvenHandler:
  2960                           
  2961                           	psect	text21
  2962     01BA                     __ptext21:	
  2963 ;; *************** function _TMR0_ISR *****************
  2964 ;; Defined at:
  2965 ;;		line 121 in file "mcc_generated_files/tmr0.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0, pclath, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2979 ;;      Params:         0       0       0       0
  2980 ;;      Locals:         0       0       0       0
  2981 ;;      Temps:          0       0       0       0
  2982 ;;      Totals:         0       0       0       0
  2983 ;;Total ram usage:        0 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 1
  2986 ;; This function calls:
  2987 ;;		NULL
  2988 ;;		_TMR0_DefaultInterruptHandler
  2989 ;;		_TMR0_EvenHandler
  2990 ;; This function is called by:
  2991 ;;		_INTERRUPT_InterruptManager
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995     01BA                     _TMR0_ISR:	
  2996                           ;psect for function _TMR0_ISR
  2997                           
  2998     01BA                     i1l1266:	
  2999                           ;incstack = 0
  3000                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3001                           
  3002                           
  3003                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
  3004     01BA  014E               	movlb	14	; select bank14
  3005     01BB  128C               	bcf	12,5	;volatile
  3006     01BC                     i1l1268:
  3007                           
  3008                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
  3009     01BC  0140               	movlb	0	; select bank0
  3010     01BD  082E               	movf	_TMR0_InterruptHandler,w
  3011     01BE  042F               	iorwf	_TMR0_InterruptHandler+1,w
  3012     01BF  1903               	btfsc	3,2
  3013     01C0  29C2               	goto	u28_21
  3014     01C1  29C3               	goto	u28_20
  3015     01C2                     u28_21:
  3016     01C2  29C8               	goto	i1l124
  3017     01C3                     u28_20:
  3018     01C3                     i1l1270:
  3019                           
  3020                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
  3021     01C3  082F               	movf	_TMR0_InterruptHandler+1,w
  3022     01C4  008A               	movwf	10
  3023     01C5  082E               	movf	_TMR0_InterruptHandler,w
  3024     01C6  000A               	callw
  3025     01C7  3181               	pagesel	$
  3026     01C8                     i1l124:
  3027     01C8  0008               	return
  3028     01C9                     __end_of_TMR0_ISR:
  3029                           
  3030                           	psect	text22
  3031     020C                     __ptext22:	
  3032 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3033 ;; Defined at:
  3034 ;;		line 138 in file "mcc_generated_files/tmr0.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		None
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3048 ;;      Params:         0       0       0       0
  3049 ;;      Locals:         0       0       0       0
  3050 ;;      Temps:          0       0       0       0
  3051 ;;      Totals:         0       0       0       0
  3052 ;;Total ram usage:        0 bytes
  3053 ;; Hardware stack levels used: 1
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_TMR0_Initialize
  3058 ;;		_TMR0_ISR
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062     020C                     _TMR0_DefaultInterruptHandler:	
  3063                           ;psect for function _TMR0_DefaultInterruptHandler
  3064                           
  3065     020C                     i1l130:	
  3066                           ;incstack = 0
  3067                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  3068                           
  3069     020C  0008               	return
  3070     020D                     __end_of_TMR0_DefaultInterruptHandler:
  3071                           
  3072                           	psect	text23
  3073     0201                     __ptext23:	
  3074 ;; *************** function _TMR0_EvenHandler *****************
  3075 ;; Defined at:
  3076 ;;		line 58 in file "main.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;		None
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      void 
  3083 ;; Registers used:
  3084 ;;		None
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3090 ;;      Params:         0       0       0       0
  3091 ;;      Locals:         0       0       0       0
  3092 ;;      Temps:          0       0       0       0
  3093 ;;      Totals:         0       0       0       0
  3094 ;;Total ram usage:        0 bytes
  3095 ;; Hardware stack levels used: 1
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_main
  3100 ;;		_TMR0_ISR
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104     0201                     _TMR0_EvenHandler:	
  3105                           ;psect for function _TMR0_EvenHandler
  3106                           
  3107     0201                     i1l155:	
  3108                           ;incstack = 0
  3109                           ; Regs used in _TMR0_EvenHandler: []
  3110                           ;main.c: 60:   do { LATAbits.LATA2 = 0; } while(0);
  3111                           
  3112     0201  0140               	movlb	0	; select bank0
  3113     0202  1118               	bcf	24,2	;volatile
  3114     0203                     i1l157:	
  3115                           ;main.c: 61:   do { LATAbits.LATA4 = 0; } while(0);
  3116                           
  3117     0203  1218               	bcf	24,4	;volatile
  3118     0204                     i1l159:
  3119     0204  0008               	return
  3120     0205                     __end_of_TMR0_EvenHandler:
  3121                           
  3122                           	psect	text24
  3123     0188                     __ptext24:	
  3124 ;; *************** function _CCP1_CaptureISR *****************
  3125 ;; Defined at:
  3126 ;;		line 92 in file "mcc_generated_files/ccp1.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  module          2    5[COMMON] struct CCPR1Reg_tag
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3140 ;;      Params:         0       0       0       0
  3141 ;;      Locals:         2       0       0       0
  3142 ;;      Temps:          0       0       0       0
  3143 ;;      Totals:         2       0       0       0
  3144 ;;Total ram usage:        2 bytes
  3145 ;; Hardware stack levels used: 1
  3146 ;; Hardware stack levels required when called: 2
  3147 ;; This function calls:
  3148 ;;		NULL
  3149 ;;		_CCP1_DefaultCallBack
  3150 ;;		_CCP1_EvenCallBack
  3151 ;; This function is called by:
  3152 ;;		_INTERRUPT_InterruptManager
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156     0188                     _CCP1_CaptureISR:	
  3157                           ;psect for function _CCP1_CaptureISR
  3158                           
  3159     0188                     i1l1272:	
  3160                           ;incstack = 0
  3161                           ; Regs used in _CCP1_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
  3162                           
  3163                           
  3164                           ;mcc_generated_files/ccp1.c: 94:     CCP1_PERIOD_REG_T module;;mcc_generated_files/ccp1.
      +                          c: 97:     PIR1bits.CCP1IF = 0;
  3165     0188  014E               	movlb	14	; select bank14
  3166     0189  138D               	bcf	13,7	;volatile
  3167     018A                     i1l1274:
  3168                           
  3169                           ;mcc_generated_files/ccp1.c: 100:     module.ccpr1l = CCPR1L;
  3170     018A  0146               	movlb	6	; select bank6
  3171     018B  080C               	movf	12,w	;volatile
  3172     018C  00FC               	movwf	CCP1_CaptureISR@module
  3173                           
  3174                           ;mcc_generated_files/ccp1.c: 101:     module.ccpr1h = CCPR1H;
  3175     018D  080D               	movf	13,w	;volatile
  3176     018E  00FD               	movwf	CCP1_CaptureISR@module+1
  3177     018F                     i1l1276:
  3178                           
  3179                           ;mcc_generated_files/ccp1.c: 104:     CCP1_CallBack(module.ccpr1_16Bit);
  3180     018F  087D               	movf	CCP1_CaptureISR@module+1,w
  3181     0190  00F9               	movwf	CCP1_DefaultCallBack@capturedValue+1
  3182     0191  087C               	movf	CCP1_CaptureISR@module,w
  3183     0192  00F8               	movwf	CCP1_DefaultCallBack@capturedValue
  3184     0193  0140               	movlb	0	; select bank0
  3185     0194  082D               	movf	_CCP1_CallBack+1,w
  3186     0195  008A               	movwf	10
  3187     0196  082C               	movf	_CCP1_CallBack,w
  3188     0197  000A               	callw
  3189     0198  3181               	pagesel	$
  3190     0199                     i1l286:
  3191     0199  0008               	return
  3192     019A                     __end_of_CCP1_CaptureISR:
  3193                           
  3194                           	psect	text25
  3195     020D                     __ptext25:	
  3196 ;; *************** function _CCP1_DefaultCallBack *****************
  3197 ;; Defined at:
  3198 ;;		line 60 in file "mcc_generated_files/ccp1.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  capturedValu    2    1[COMMON] unsigned short 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      void 
  3205 ;; Registers used:
  3206 ;;		None
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3212 ;;      Params:         2       0       0       0
  3213 ;;      Locals:         0       0       0       0
  3214 ;;      Temps:          0       0       0       0
  3215 ;;      Totals:         2       0       0       0
  3216 ;;Total ram usage:        2 bytes
  3217 ;; Hardware stack levels used: 1
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_CCP1_Initialize
  3222 ;;		_CCP1_CaptureISR
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226     020D                     _CCP1_DefaultCallBack:	
  3227                           ;psect for function _CCP1_DefaultCallBack
  3228                           
  3229     020D                     i1l280:	
  3230                           ;incstack = 0
  3231                           ; Regs used in _CCP1_DefaultCallBack: []
  3232                           
  3233     020D  0008               	return
  3234     020E                     __end_of_CCP1_DefaultCallBack:
  3235                           
  3236                           	psect	text26
  3237     0047                     __ptext26:	
  3238 ;; *************** function _CCP1_EvenCallBack *****************
  3239 ;; Defined at:
  3240 ;;		line 72 in file "main.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  captured        2    1[COMMON] unsigned short 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0, pclath, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3254 ;;      Params:         2       0       0       0
  3255 ;;      Locals:         0       0       0       0
  3256 ;;      Temps:          2       0       0       0
  3257 ;;      Totals:         4       0       0       0
  3258 ;;Total ram usage:        4 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; Hardware stack levels required when called: 1
  3261 ;; This function calls:
  3262 ;;		i1_TMR0_WriteTimer
  3263 ;; This function is called by:
  3264 ;;		_main
  3265 ;;		_CCP1_CaptureISR
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269     0047                     _CCP1_EvenCallBack:	
  3270                           ;psect for function _CCP1_EvenCallBack
  3271                           
  3272     0047                     i1l1216:	
  3273                           ;incstack = 0
  3274                           ; Regs used in _CCP1_EvenCallBack: [wreg+status,2+status,0+pclath+cstack]
  3275                           
  3276                           
  3277                           ;main.c: 73:   static uint16_t pluse_width_LO = 0;;main.c: 74:   static uint16_t pluse_w
      +                          idth_HI = 0;;main.c: 75:   static uint16_t cycle_time = 0;;main.c: 76:   static uint16_t
      +                           HI_us = 0;;main.c: 77:   static uint16_t LO_us = 0;;main.c: 78:   static uint16_t falli
      +                          ng_edge_time = 0;;main.c: 79:   static uint16_t rising_edge_time = 0;;main.c: 80:   stat
      +                          ic _Bool rise_edge_flag = 0;;main.c: 83:   if (CCP1CON == 0x84) {
  3278     0047  3084               	movlw	132
  3279     0048  0146               	movlb	6	; select bank6
  3280     0049  060E               	xorwf	14,w	;volatile
  3281     004A  1D03               	btfss	3,2
  3282     004B  284D               	goto	u20_21
  3283     004C  284E               	goto	u20_20
  3284     004D                     u20_21:
  3285     004D  28BA               	goto	i1l1236
  3286     004E                     u20_20:
  3287     004E                     i1l1218:
  3288                           
  3289                           ;main.c: 84:     falling_edge_time = captured;
  3290     004E  0879               	movf	CCP1_EvenCallBack@captured+1,w
  3291     004F  00F3               	movwf	CCP1_EvenCallBack@falling_edge_time+1
  3292     0050  0878               	movf	CCP1_EvenCallBack@captured,w
  3293     0051  00F2               	movwf	CCP1_EvenCallBack@falling_edge_time
  3294                           
  3295                           ;main.c: 85:     CCP1CON = 0x85;
  3296     0052  3085               	movlw	133
  3297     0053  008E               	movwf	14	;volatile
  3298     0054                     i1l1220:
  3299                           
  3300                           ;main.c: 86:     if (rise_edge_flag == 1) {
  3301     0054  0376               	decf	CCP1_EvenCallBack@rise_edge_flag,w
  3302     0055  1D03               	btfss	3,2
  3303     0056  2858               	goto	u21_21
  3304     0057  2859               	goto	u21_20
  3305     0058                     u21_21:
  3306     0058  28EE               	goto	i1l202
  3307     0059                     u21_20:
  3308     0059                     i1l1222:
  3309                           
  3310                           ;main.c: 87:       rise_edge_flag = 0;
  3311     0059  01F6               	clrf	CCP1_EvenCallBack@rise_edge_flag
  3312     005A                     i1l1224:
  3313                           
  3314                           ;main.c: 89:       if (falling_edge_time >= rising_edge_time) {
  3315     005A  0871               	movf	CCP1_EvenCallBack@rising_edge_time+1,w
  3316     005B  0273               	subwf	CCP1_EvenCallBack@falling_edge_time+1,w
  3317     005C  1D03               	skipz
  3318     005D  2860               	goto	u22_25
  3319     005E  0870               	movf	CCP1_EvenCallBack@rising_edge_time,w
  3320     005F  0272               	subwf	CCP1_EvenCallBack@falling_edge_time,w
  3321     0060                     u22_25:
  3322     0060  1C03               	skipc
  3323     0061  2863               	goto	u22_21
  3324     0062  2864               	goto	u22_20
  3325     0063                     u22_21:
  3326     0063  286C               	goto	i1l1228
  3327     0064                     u22_20:
  3328     0064                     i1l1226:
  3329                           
  3330                           ;main.c: 90:         pluse_width_HI = falling_edge_time - rising_edge_time;
  3331     0064  0870               	movf	CCP1_EvenCallBack@rising_edge_time,w
  3332     0065  0272               	subwf	CCP1_EvenCallBack@falling_edge_time,w
  3333     0066  0140               	movlb	0	; select bank0
  3334     0067  00A6               	movwf	CCP1_EvenCallBack@pluse_width_HI
  3335     0068  0871               	movf	CCP1_EvenCallBack@rising_edge_time+1,w
  3336     0069  3B73               	subwfb	CCP1_EvenCallBack@falling_edge_time+1,w
  3337     006A  00A7               	movwf	CCP1_EvenCallBack@pluse_width_HI+1
  3338                           
  3339                           ;main.c: 91:       } else {
  3340     006B  2879               	goto	i1l188
  3341     006C                     i1l1228:
  3342                           
  3343                           ;main.c: 92:         pluse_width_HI = (0xffff - rising_edge_time) + falling_edge_time;
  3344     006C  0871               	movf	CCP1_EvenCallBack@rising_edge_time+1,w
  3345     006D  00FB               	movwf	??_CCP1_EvenCallBack+1
  3346     006E  0870               	movf	CCP1_EvenCallBack@rising_edge_time,w
  3347     006F  00FA               	movwf	??_CCP1_EvenCallBack
  3348     0070  09FA               	comf	??_CCP1_EvenCallBack,f
  3349     0071  09FB               	comf	??_CCP1_EvenCallBack+1,f
  3350     0072  0872               	movf	CCP1_EvenCallBack@falling_edge_time,w
  3351     0073  077A               	addwf	??_CCP1_EvenCallBack,w
  3352     0074  0140               	movlb	0	; select bank0
  3353     0075  00A6               	movwf	CCP1_EvenCallBack@pluse_width_HI
  3354     0076  0873               	movf	CCP1_EvenCallBack@falling_edge_time+1,w
  3355     0077  3D7B               	addwfc	??_CCP1_EvenCallBack+1,w
  3356     0078  00A7               	movwf	CCP1_EvenCallBack@pluse_width_HI+1
  3357     0079                     i1l188:	
  3358                           ;main.c: 93:       }
  3359                           
  3360                           
  3361                           ;main.c: 94:       LO_us = (pluse_width_LO >> 3);
  3362     0079  0829               	movf	CCP1_EvenCallBack@pluse_width_LO+1,w
  3363     007A  00FB               	movwf	??_CCP1_EvenCallBack+1
  3364     007B  0828               	movf	CCP1_EvenCallBack@pluse_width_LO,w
  3365     007C  00FA               	movwf	??_CCP1_EvenCallBack
  3366     007D  36FB               	lsrf	??_CCP1_EvenCallBack+1,f
  3367     007E  0CFA               	rrf	??_CCP1_EvenCallBack,f
  3368     007F  36FB               	lsrf	??_CCP1_EvenCallBack+1,f
  3369     0080  0CFA               	rrf	??_CCP1_EvenCallBack,f
  3370     0081  36FB               	lsrf	??_CCP1_EvenCallBack+1,f
  3371     0082  0CFA               	rrf	??_CCP1_EvenCallBack,f
  3372     0083  087A               	movf	??_CCP1_EvenCallBack,w
  3373     0084  00A2               	movwf	CCP1_EvenCallBack@LO_us
  3374     0085  087B               	movf	??_CCP1_EvenCallBack+1,w
  3375     0086  00A3               	movwf	CCP1_EvenCallBack@LO_us+1
  3376                           
  3377                           ;main.c: 95:       HI_us = (pluse_width_HI >> 3);
  3378     0087  0827               	movf	CCP1_EvenCallBack@pluse_width_HI+1,w
  3379     0088  00FB               	movwf	??_CCP1_EvenCallBack+1
  3380     0089  0826               	movf	CCP1_EvenCallBack@pluse_width_HI,w
  3381     008A  00FA               	movwf	??_CCP1_EvenCallBack
  3382     008B  36FB               	lsrf	??_CCP1_EvenCallBack+1,f
  3383     008C  0CFA               	rrf	??_CCP1_EvenCallBack,f
  3384     008D  36FB               	lsrf	??_CCP1_EvenCallBack+1,f
  3385     008E  0CFA               	rrf	??_CCP1_EvenCallBack,f
  3386     008F  36FB               	lsrf	??_CCP1_EvenCallBack+1,f
  3387     0090  0CFA               	rrf	??_CCP1_EvenCallBack,f
  3388     0091  087A               	movf	??_CCP1_EvenCallBack,w
  3389     0092  00A4               	movwf	CCP1_EvenCallBack@HI_us
  3390     0093  087B               	movf	??_CCP1_EvenCallBack+1,w
  3391     0094  00A5               	movwf	CCP1_EvenCallBack@HI_us+1
  3392                           
  3393                           ;main.c: 96:       cycle_time = HI_us + LO_us;
  3394     0095  0822               	movf	CCP1_EvenCallBack@LO_us,w
  3395     0096  0724               	addwf	CCP1_EvenCallBack@HI_us,w
  3396     0097  00F4               	movwf	CCP1_EvenCallBack@cycle_time
  3397     0098  0823               	movf	CCP1_EvenCallBack@LO_us+1,w
  3398     0099  3D25               	addwfc	CCP1_EvenCallBack@HI_us+1,w
  3399     009A  00F5               	movwf	CCP1_EvenCallBack@cycle_time+1
  3400     009B                     i1l1230:
  3401                           
  3402                           ;main.c: 97:       if ((cycle_time > (4750)) &&
  3403     009B  3012               	movlw	18
  3404     009C  0275               	subwf	CCP1_EvenCallBack@cycle_time+1,w
  3405     009D  308F               	movlw	143
  3406     009E  1903               	skipnz
  3407     009F  0274               	subwf	CCP1_EvenCallBack@cycle_time,w
  3408     00A0  1C03               	skipc
  3409     00A1  28A3               	goto	u23_21
  3410     00A2  28A4               	goto	u23_20
  3411     00A3                     u23_21:
  3412     00A3  28EE               	goto	i1l202
  3413     00A4                     u23_20:
  3414     00A4                     i1l1232:
  3415     00A4  3014               	movlw	20
  3416     00A5  0275               	subwf	CCP1_EvenCallBack@cycle_time+1,w
  3417     00A6  3082               	movlw	130
  3418     00A7  1903               	skipnz
  3419     00A8  0274               	subwf	CCP1_EvenCallBack@cycle_time,w
  3420     00A9  1803               	skipnc
  3421     00AA  28AC               	goto	u24_21
  3422     00AB  28AD               	goto	u24_20
  3423     00AC                     u24_21:
  3424     00AC  28EE               	goto	i1l202
  3425     00AD                     u24_20:
  3426     00AD                     i1l1234:
  3427                           
  3428                           ;main.c: 98:           (cycle_time < (5250))) {;main.c: 99:         if (HI_us > (4000)) 
      +                          {
  3429     00AD  300F               	movlw	15
  3430     00AE  0225               	subwf	CCP1_EvenCallBack@HI_us+1,w
  3431     00AF  30A1               	movlw	161
  3432     00B0  1903               	skipnz
  3433     00B1  0224               	subwf	CCP1_EvenCallBack@HI_us,w
  3434     00B2  1C03               	skipc
  3435     00B3  28B5               	goto	u25_21
  3436     00B4  28B6               	goto	u25_20
  3437     00B5                     u25_21:
  3438     00B5  28B8               	goto	i1l194
  3439     00B6                     u25_20:
  3440     00B6                     i1l191:	
  3441                           ;main.c: 100:           do { LATAbits.LATA4 = 1; } while(0);
  3442                           
  3443     00B6  1618               	bsf	24,4	;volatile
  3444     00B7  28EE               	goto	i1l202
  3445     00B8                     i1l194:	
  3446                           ;main.c: 102:           do { LATAbits.LATA4 = 0; } while(0);
  3447                           
  3448     00B8  1218               	bcf	24,4	;volatile
  3449     00B9  28EE               	goto	i1l202
  3450     00BA                     i1l1236:
  3451     00BA  3085               	movlw	133
  3452     00BB  060E               	xorwf	14,w	;volatile
  3453     00BC  1D03               	btfss	3,2
  3454     00BD  28BF               	goto	u26_21
  3455     00BE  28C0               	goto	u26_20
  3456     00BF                     u26_21:
  3457     00BF  28EE               	goto	i1l202
  3458     00C0                     u26_20:
  3459     00C0                     i1l198:	
  3460                           ;main.c: 110:     do { LATAbits.LATA2 = 1; } while(0);
  3461                           
  3462     00C0  0140               	movlb	0	; select bank0
  3463     00C1  1518               	bsf	24,2	;volatile
  3464     00C2                     i1l1238:
  3465                           
  3466                           ;main.c: 111:     TMR0_WriteTimer(0);
  3467     00C2  3000               	movlw	0
  3468     00C3  3181  21F4  3180   	fcall	i1_TMR0_WriteTimer
  3469     00C6                     i1l1240:
  3470                           
  3471                           ;main.c: 112:     rising_edge_time = captured;
  3472     00C6  0879               	movf	CCP1_EvenCallBack@captured+1,w
  3473     00C7  00F1               	movwf	CCP1_EvenCallBack@rising_edge_time+1
  3474     00C8  0878               	movf	CCP1_EvenCallBack@captured,w
  3475     00C9  00F0               	movwf	CCP1_EvenCallBack@rising_edge_time
  3476     00CA                     i1l1242:
  3477                           
  3478                           ;main.c: 113:     CCP1CON = 0x84;
  3479     00CA  3084               	movlw	132
  3480     00CB  0146               	movlb	6	; select bank6
  3481     00CC  008E               	movwf	14	;volatile
  3482     00CD                     i1l1244:
  3483                           
  3484                           ;main.c: 115:     if (rising_edge_time >= falling_edge_time) {
  3485     00CD  0873               	movf	CCP1_EvenCallBack@falling_edge_time+1,w
  3486     00CE  0271               	subwf	CCP1_EvenCallBack@rising_edge_time+1,w
  3487     00CF  1D03               	skipz
  3488     00D0  28D3               	goto	u27_25
  3489     00D1  0872               	movf	CCP1_EvenCallBack@falling_edge_time,w
  3490     00D2  0270               	subwf	CCP1_EvenCallBack@rising_edge_time,w
  3491     00D3                     u27_25:
  3492     00D3  1C03               	skipc
  3493     00D4  28D6               	goto	u27_21
  3494     00D5  28D7               	goto	u27_20
  3495     00D6                     u27_21:
  3496     00D6  28DF               	goto	i1l1248
  3497     00D7                     u27_20:
  3498     00D7                     i1l1246:
  3499                           
  3500                           ;main.c: 116:       pluse_width_LO = rising_edge_time - falling_edge_time;
  3501     00D7  0872               	movf	CCP1_EvenCallBack@falling_edge_time,w
  3502     00D8  0270               	subwf	CCP1_EvenCallBack@rising_edge_time,w
  3503     00D9  0140               	movlb	0	; select bank0
  3504     00DA  00A8               	movwf	CCP1_EvenCallBack@pluse_width_LO
  3505     00DB  0873               	movf	CCP1_EvenCallBack@falling_edge_time+1,w
  3506     00DC  3B71               	subwfb	CCP1_EvenCallBack@rising_edge_time+1,w
  3507     00DD  00A9               	movwf	CCP1_EvenCallBack@pluse_width_LO+1
  3508                           
  3509                           ;main.c: 117:     } else {
  3510     00DE  28EC               	goto	i1l1250
  3511     00DF                     i1l1248:
  3512                           
  3513                           ;main.c: 118:       pluse_width_LO = (0xffff - falling_edge_time) + rising_edge_time;
  3514     00DF  0873               	movf	CCP1_EvenCallBack@falling_edge_time+1,w
  3515     00E0  00FB               	movwf	??_CCP1_EvenCallBack+1
  3516     00E1  0872               	movf	CCP1_EvenCallBack@falling_edge_time,w
  3517     00E2  00FA               	movwf	??_CCP1_EvenCallBack
  3518     00E3  09FA               	comf	??_CCP1_EvenCallBack,f
  3519     00E4  09FB               	comf	??_CCP1_EvenCallBack+1,f
  3520     00E5  0870               	movf	CCP1_EvenCallBack@rising_edge_time,w
  3521     00E6  077A               	addwf	??_CCP1_EvenCallBack,w
  3522     00E7  0140               	movlb	0	; select bank0
  3523     00E8  00A8               	movwf	CCP1_EvenCallBack@pluse_width_LO
  3524     00E9  0871               	movf	CCP1_EvenCallBack@rising_edge_time+1,w
  3525     00EA  3D7B               	addwfc	??_CCP1_EvenCallBack+1,w
  3526     00EB  00A9               	movwf	CCP1_EvenCallBack@pluse_width_LO+1
  3527     00EC                     i1l1250:
  3528                           
  3529                           ;main.c: 120:     rise_edge_flag = 1;
  3530     00EC  01F6               	clrf	CCP1_EvenCallBack@rise_edge_flag
  3531     00ED  0AF6               	incf	CCP1_EvenCallBack@rise_edge_flag,f
  3532     00EE                     i1l202:
  3533     00EE  0008               	return
  3534     00EF                     __end_of_CCP1_EvenCallBack:
  3535                           
  3536                           	psect	text27
  3537     01F4                     __ptext27:	
  3538 ;; *************** function i1_TMR0_WriteTimer *****************
  3539 ;; Defined at:
  3540 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  timerVal        1    wreg     unsigned char 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  timerVal        1    0[COMMON] unsigned char 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		wreg
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3554 ;;      Params:         0       0       0       0
  3555 ;;      Locals:         1       0       0       0
  3556 ;;      Temps:          0       0       0       0
  3557 ;;      Totals:         1       0       0       0
  3558 ;;Total ram usage:        1 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		_CCP1_EvenCallBack
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567     01F4                     i1_TMR0_WriteTimer:	
  3568                           ;psect for function i1_TMR0_WriteTimer
  3569                           
  3570                           
  3571                           ;incstack = 0
  3572                           ; Regs used in i1_TMR0_WriteTimer: [wreg]
  3573                           ;i1TMR0_WriteTimer@timerVal stored from wreg
  3574     01F4  00F7               	movwf	i1TMR0_WriteTimer@timerVal
  3575     01F5                     i1l1158:
  3576                           
  3577                           ;mcc_generated_files/tmr0.c: 109: void TMR0_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr0.c: 110: {;mcc_generated_files/tmr0.c: 112:     TMR0L = timerVal;
  3578     01F5  0877               	movf	i1TMR0_WriteTimer@timerVal,w
  3579     01F6  014B               	movlb	11	; select bank11
  3580     01F7  009C               	movwf	28	;volatile
  3581     01F8                     i1l117:
  3582     01F8  0008               	return
  3583     01F9                     __end_ofi1_TMR0_WriteTimer:
  3584     007E                     btemp	set	126	;btemp
  3585     007E                     int$flags	set	126
  3586     007E                     wtemp0	set	126
  3587                           
  3588                           	psect	config
  3589                           
  3590                           ;Config register CONFIG1 @ 0x8007
  3591                           ;	External Oscillator Mode Selection bits
  3592                           ;	FEXTOSC = OFF, Oscillator not enabled
  3593                           ;	Power-up Default Value for COSC bits
  3594                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  3595                           ;	Clock Out Enable bit
  3596                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  3597                           ;	VDD Range Analog Calibration Selection bit
  3598                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  3599     8007                     	org	32775
  3600     8007  3FCD               	dw	16333
  3601                           
  3602                           ;Config register CONFIG2 @ 0x8008
  3603                           ;	Master Clear Enable bit
  3604                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  3605                           ;	Power-up Timer Selection bits
  3606                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3607                           ;	WDT Operating Mode bits
  3608                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  3609                           ;	Brown-out Reset Enable bits
  3610                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  3611                           ;	Brown-out Reset Voltage Selection bit
  3612                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  3613                           ;	PPSLOCKED One-Way Set Enable bit
  3614                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  3615                           ;	Stack Overflow/Underflow Reset Enable bit
  3616                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  3617     8008                     	org	32776
  3618     8008  3FE7               	dw	16359
  3619                           
  3620                           ;Config register CONFIG4 @ 0x800A
  3621                           ;	Boot Block Size Selection bits
  3622                           ;	BBSIZE = BB512, 512 words boot block size
  3623                           ;	Boot Block Enable bit
  3624                           ;	BBEN = OFF, Boot Block is disabled
  3625                           ;	SAF Enable bit
  3626                           ;	SAFEN = OFF, SAF is disabled
  3627                           ;	Application Block Write Protection bit
  3628                           ;	WRTAPP = OFF, Application Block is not write-protected
  3629                           ;	Boot Block Write Protection bit
  3630                           ;	WRTB = OFF, Boot Block is not write-protected
  3631                           ;	Configuration Registers Write Protection bit
  3632                           ;	WRTC = OFF, Configuration Registers are not write-protected
  3633                           ;	Storage Area Flash (SAF) Write Protection bit
  3634                           ;	WRTSAF = OFF, SAF is not write-protected
  3635                           ;	Low Voltage Programming Enable bit
  3636                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
  3637     800A                     	org	32778
  3638     800A  1FFF               	dw	8191
  3639                           
  3640                           ;Config register CONFIG5 @ 0x800B
  3641                           ;	User Program Flash Memory Code Protection bit
  3642                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  3643     800B                     	org	32779
  3644     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         17
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80      2      18
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), CCP1_EvenCallBack(), NULL(), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), CCP1_EvenCallBack(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), TMR0_EvenHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), TMR0_EvenHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), TMR2_EvenHandler(), NULL(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), TMR2_EvenHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _CCP1_CaptureISR->_CCP1_EvenCallBack
    _CCP1_EvenCallBack->i1_TMR0_WriteTimer

Critical Paths under _main in BANK0

    _main->_CCP1_SetCallBack
    _main->_TMR0_SetInterruptHandler
    _main->_TMR2_SetInterruptHandler
    _main->_TMR2_WriteTimer
    _TMR2_WriteTimer->_TMR2_Counter8BitSet
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _CCP1_Initialize->_CCP1_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1359
                   _CCP1_SetCallBack
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                    _TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (1) _TMR2_WriteTimer                                      1     1      0      62
                                              1 BANK0      1     1      0
                _TMR2_Counter8BitSet
 ---------------------------------------------------------------------------------
 (2) _TMR2_Counter8BitSet                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (2) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     633
                    _CCP1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0     211
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP1_SetCallBack                                     2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     166
                    _CCP1_CaptureISR
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                                NULL *
       _TMR2_DefaultInterruptHandler *
                   _TMR2_EvenHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR2_EvenHandler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
                   _TMR0_EvenHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_EvenHandler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CCP1_CaptureISR                                      2     2      0     166
                                              5 COMMON     2     2      0
                                NULL *
               _CCP1_DefaultCallBack *
                  _CCP1_EvenCallBack *
 ---------------------------------------------------------------------------------
 (6) _CCP1_EvenCallBack                                    4     2      2      66
                                              1 COMMON     4     2      2
                  i1_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (7) i1_TMR0_WriteTimer                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _CCP1_DefaultCallBack                                 2     0      2      53
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP1_SetCallBack
   _SYSTEM_Initialize
     _CCP1_Initialize
       _CCP1_SetCallBack
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _TMR2_SetInterruptHandler
   _TMR2_StartTimer
     _TMR2_Start
   _TMR2_WriteTimer
     _TMR2_Counter8BitSet

 _INTERRUPT_InterruptManager (ROOT)
   _CCP1_CaptureISR
     NULL(Fake) *
     _CCP1_DefaultCallBack *
     _CCP1_EvenCallBack *
       i1_TMR0_WriteTimer
   _TMR0_ISR
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_EvenHandler *
   _TMR2_ISR
     NULL(Fake) *
     _TMR2_DefaultInterruptHandler *
     _TMR2_EvenHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2      12       5       22.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      20      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      20      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jul 04 11:08:34 2025

        __end_of_TMR2_SetInterruptHandler 01E2                                        l31 020A  
                                      l25 014B                                        l50 01AA  
                                      l28 01ED                   __end_of_CCP1_Initialize 0188  
                                     l105 0175                                       l117 01DB  
                                     l127 01E7                                       l235 0160  
                                     l324 0135                                       l333 0207  
                                     l351 01D5                                       l336 01FC  
                                     l354 01CF                                       l283 0187  
                                     l367 01E1                                       l289 01F3  
                                     _PR2 028D                                       u390 0114  
                                     u391 0113                           _timer1ReloadVal 0020  
                         _TMR2_Initialize 011F        CCP1_EvenCallBack@falling_edge_time 0072  
                                    l1400 0155                                      l1410 0169  
                                    l1402 015D                                      l1340 019A  
                                    l1412 016A                                      l1404 0161  
                                    l1420 0136                                      l1350 01A7  
                                    l1342 019C                                      l1334 01E2  
                                    l1414 0172                                      l1406 0166  
                                    l1430 0148                                      l1422 013C  
                                    l1336 01EE                                      l1360 0176  
                                    l1352 01E8                                      l1344 019E  
                                    l1408 0167                                      l1424 013F  
                                    l1432 01D8                                      l1416 0205  
                                    l1440 010A                                      l1370 0184  
                                    l1362 0179                                      l1354 01EA  
                                    l1346 01A3                                      l1338 01DC  
                                    l1426 0142                                      l1434 01F9  
                                    l1418 01D2                                      l1450 0119  
                                    l1442 010B                                      l1372 0186  
                                    l1364 017A                                      l1356 01EC  
                                    l1348 01A5                                      l1380 0126  
                                    l1428 0145                                      l1436 01CB  
                                    l1444 010C                                      l1366 017B  
                                    l1390 014C                                      l1382 0127  
                                    l1374 011F                                      l1358 0208  
                                    l1446 010F                                      l1438 00EF  
                                    l1368 017C                                      l1392 014F  
                                    l1384 0129                                      l1376 0122  
                                    l1448 0114                                      l1394 0151  
                                    l1386 012A                                      l1378 0123  
                                    l1396 0152                                      l1388 0132  
                                    l1398 0153                                      _LATA 0018  
                                    _T2PR 028D                                      i1l81 002F  
                                    i1l82 002F                                      i1l74 0013  
                                    i1l77 0023                                      _TMR2 028C  
                                    _WPUA 1F39                                      _main 00EF  
                                    btemp 007E                                      start 0031  
                __end_of_CCP1_SetCallBack 01F4                       _TMR2_Counter8BitSet 01D0  
                        ?_CCP1_CaptureISR 0077                   __end_of_TMR0_Initialize 0176  
          ??_TMR0_DefaultInterruptHandler 0077             __end_of_OSCILLATOR_Initialize 01EE  
                                   ?_main 0077                                     _T1CLK 0211  
                                   _T1CON 020E                                     _T2CON 028E  
                                   _T2HLT 028F                                     i1l202 00EE  
                                   i1l130 020C                                     i1l124 01C8  
                                   _T2TMR 028C                                     i1l117 01F8  
                                   i1l162 01FD                                     _T2RST 0291  
                                   i1l155 0201                                     i1l164 01FF  
                                   i1l157 0203                                     i1l166 0200  
                                   i1l191 00B6                                     i1l159 0204  
                                   i1l280 020D                                     i1l194 00B8  
                                   i1l370 020B                                     i1l188 0079  
                                   i1l364 01B9                                     i1l198 00C0  
                                   i1l286 0199                           _TMR0_WriteTimer 01D6  
                __end_of_TMR0_EvenHandler 0205                                     _OSCEN 0891  
                                   u20_20 004E                                     u20_21 004D  
                                   u21_20 0059                                     u21_21 0058  
                                   u22_20 0064                                     u22_21 0063  
                                   u22_25 0060                                     u23_20 00A4  
                                   u31_20 000B                                     u23_21 00A3  
                                   u31_21 000A                                     u24_20 00AD  
                                   u32_20 000F                                     u24_21 00AC  
                                   u32_21 000E                                     u25_20 00B6  
                                   u33_20 0017                                     _TMR0H 059D  
                                   u25_21 00B5                                     u33_21 0016  
                                   _TMR1H 020D                                     _TMR0L 059C  
                                   _TMR1L 020C                                     u26_20 00C0  
                                   u34_20 001B                                     u26_21 00BF  
                                   u34_21 001A                                     u27_20 00D7  
                                   u35_20 001F                                     u27_21 00D6  
                                   u35_21 001E                                     u27_25 00D3  
                                   u28_20 01C3                                     u36_20 0027  
                                   u28_21 01C2                                     u36_21 0026  
                                   u29_20 01B4                                     u37_20 002B  
                                   u29_21 01B3                                     u37_21 002A  
                                   _TRISA 0012                 ?_TMR0_SetInterruptHandler 0030  
                    ?_TMR2_Counter8BitSet 0077                          __end_of_TMR0_ISR 01C9  
                        __end_of_TMR2_ISR 01BA                               ?_TMR2_Start 0077  
                          _WDT_Initialize 0208                   __end_of_TMR1_Initialize 0161  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           _TMR2_StartTimer 01F9  
                         __initialization 0032                              __end_of_main 011F  
                 __end_of_TMR2_Initialize 0136               ?_INTERRUPT_InterruptManager 0077  
                _TMR2_SetInterruptHandler 01DC                                    ??_main 0032  
                        ?_CCP1_Initialize 0077                           _TMR2_WriteTimer 01C9  
                   ??_TMR2_Counter8BitSet 0030                    __end_of_WDT_Initialize 020B  
                                  _CCPR1H 030D                                    _CCPR1L 030C  
                                  _ANSELA 1F38                                    _T0CON0 059E  
                                  _T0CON1 059F                                    _T1GATE 0210  
                                  _T1GCON 020F                                    i1l1220 0054  
                                  i1l1230 009B                                    i1l1222 0059  
                                  i1l1310 001B                                    i1l1302 0006  
                                  i1l1240 00C6                                    i1l1232 00A4  
                                  i1l1224 005A                                    i1l1216 0047  
                                  i1l1312 001F                                    i1l1304 000B  
                                  i1l1250 00EC                                    i1l1242 00CA  
                                  i1l1234 00AD                                    i1l1226 0064  
                                  i1l1218 004E                                    i1l1314 0027  
                                  i1l1306 000F                                    i1l1244 00CD  
                                  i1l1228 006C                                    i1l1236 00BA  
                                  i1l1316 002B                                    i1l1308 0017  
                                  i1l1158 01F5                                    i1l1246 00D7  
                                  i1l1238 00C2                                    i1l1270 01C3  
                                  i1l1248 00DF                                    i1l1272 0188  
                                  i1l1280 01AD                                    _ODCONA 1F3A  
                                  i1l1274 018A                                    i1l1266 01BA  
                                  i1l1282 01B4                                    i1l1276 018F  
                                  i1l1268 01BC                                    i1l1278 01AB  
                                  _INLVLA 1F3C                                    _OSCFRQ 0893  
                                  _WDTCON 080C               CCP1_EvenCallBack@cycle_time 0074  
                           _CCP1_CallBack 002C                   __end_of_TMR0_WriteTimer 01DC  
                        ?_TMR0_Initialize 0077                  __end_of_TMR2_EvenHandler 0201  
                         ?_WDT_Initialize 0077                   __end_of_TMR2_StartTimer 01FD  
TMR2_SetInterruptHandler@InterruptHandler 0030  TMR0_SetInterruptHandler@InterruptHandler 0030  
                        ?_TMR1_Initialize 0077                         _SYSTEM_Initialize 0136  
                 __end_of__initialization 0044                        ?_SYSTEM_Initialize 0077  
                          __pcstackCOMMON 0077                       ??_SYSTEM_Initialize 0032  
                               ?_TMR0_ISR 0077                                 ?_TMR2_ISR 0077  
                 __end_of_TMR2_WriteTimer 01D0                          ?_TMR2_Initialize 0077  
         CCP1_EvenCallBack@rise_edge_flag 0076                 __end_of_SYSTEM_Initialize 014C  
                              __pbssBANK0 0020                         ?_CCP1_SetCallBack 0030  
                              __pmaintext 00EF          __end_of_TMR0_SetInterruptHandler 01E8  
                              ??_TMR0_ISR 0077                                ??_TMR2_ISR 0077  
                      ??_CCP1_SetCallBack 0032                                __pintentry 0004  
                        ?_TMR0_WriteTimer 0077                                   _CCP1CAP 030F  
                                 _CCP1CON 030E                                   _CCP1PPS 1EA1  
                       ?_TMR0_EvenHandler 0077                                   _OSCTUNE 0892  
                      ??_TMR0_EvenHandler 0077                                   _SLRCONA 1F3B  
                            ??_TMR2_Start 0030                          ?_TMR2_StartTimer 0077  
       CCP1_DefaultCallBack@capturedValue 0078                ??_TMR2_SetInterruptHandler 0032  
                        ?_TMR2_WriteTimer 0077                        __end_of_TMR2_Start 0208  
                                 __ptext1 01C9                                   __ptext2 01D0  
                                 __ptext3 01F9                                   __ptext4 0205  
                                 __ptext5 01D6                                   __ptext6 0136  
                                 __ptext7 0208                                   __ptext8 011F  
                                 __ptext9 01DC                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 01E8                                 _T2CONbits 028E  
                ??_PIN_MANAGER_Initialize 0030                                 _T2HLTbits 028F  
                    end_of_initialization 0044                                 _T2RSTbits 0291  
                       _CCP1_EvenCallBack 0047                        ?_CCP1_EvenCallBack 0078  
            __end_of_CCP1_DefaultCallBack 020E                       ??_CCP1_EvenCallBack 007A  
             __end_of_TMR2_Counter8BitSet 01D6                          ??_WDT_Initialize 0030  
                _TMR0_SetInterruptHandler 01E2                                 _PORTAbits 000C  
                       ?_TMR2_EvenHandler 0077                        ??_TMR2_EvenHandler 0077  
                 TMR2_WriteTimer@timerVal 0031                 __end_of_CCP1_EvenCallBack 00EF  
               CCP1_EvenCallBack@captured 0078      __end_of_TMR2_DefaultInterruptHandler 020C  
            _TMR2_DefaultInterruptHandler 020B                    ?_OSCILLATOR_Initialize 0077  
                     start_initialization 0032                         ??_CCP1_CaptureISR 007C  
         CCP1_EvenCallBack@pluse_width_HI 0026           CCP1_EvenCallBack@pluse_width_LO 0028  
                  CCP1_EvenCallBack@HI_us 0024                    CCP1_EvenCallBack@LO_us 0022  
           ?_TMR2_DefaultInterruptHandler 0077                     CCP1_CaptureISR@module 007C  
                             __pbssCOMMON 0070                                 ___latbits 0000  
                           __pcstackBANK0 0030                      _CCP1_DefaultCallBack 020D  
                   _TMR0_InterruptHandler 002E                         ??_CCP1_Initialize 0032  
                               __pnvBANK0 002A                    _PIN_MANAGER_Initialize 019A  
                       i1_TMR0_WriteTimer 01F4              ??_INTERRUPT_InterruptManager 007E  
                      ?i1_TMR0_WriteTimer 0077                       ??i1_TMR0_WriteTimer 0077  
                                _T2CLKCON 0290                     ?_CCP1_DefaultCallBack 0078  
                       ??_TMR0_Initialize 0032                                  _LATAbits 0018  
                                _PIE0bits 0716                                  _PIE1bits 0717  
              ??_TMR0_SetInterruptHandler 0032                                  _PIR0bits 070C  
                                _PIR1bits 070D                                  _TMR0_ISR 01BA  
               __end_ofi1_TMR0_WriteTimer 01F9                                  _TMR2_ISR 01AB  
                       ??_TMR1_Initialize 0030            ??_TMR2_DefaultInterruptHandler 0077  
               ?_TMR2_SetInterruptHandler 0030                         ??_TMR2_Initialize 0032  
                 ??_OSCILLATOR_Initialize 0030                           _CCP1_CaptureISR 0188  
                              _T0CON0bits 059E                          _CCP1_SetCallBack 01EE  
          CCP1_SetCallBack@customCallBack 0030                                  __ptext10 014C  
                                __ptext11 0161                                  __ptext20 01FD  
                                __ptext12 01E2                                  __ptext21 01BA  
                                __ptext13 019A                                _T1GCONbits 020F  
                                __ptext22 020C                                  __ptext14 01E8  
                                __ptext23 0201                                  __ptext15 0176  
                                __ptext24 0188                                  __ptext16 01EE  
                                __ptext25 020D                                  __ptext26 0047  
                                __ptext18 01AB                                  __ptext27 01F4  
                                __ptext19 020B                    ??_CCP1_DefaultCallBack 007A  
                 TMR0_WriteTimer@timerVal 0030                         ??_TMR0_WriteTimer 0030  
                        _TMR0_EvenHandler 0201      __end_of_TMR0_DefaultInterruptHandler 020D  
            _TMR0_DefaultInterruptHandler 020C                 i1TMR0_WriteTimer@timerVal 0077  
                                int$flags 007E                         ??_TMR2_StartTimer 0030  
      __end_of_INTERRUPT_InterruptManager 0031                _INTERRUPT_InterruptManager 0004  
                              _INTCONbits 000B                           _CCP1_Initialize 0176  
             TMR2_Counter8BitSet@timerVal 0030                                  intlevel1 0000  
                       ??_TMR2_WriteTimer 0031                   ?_PIN_MANAGER_Initialize 0077  
           ?_TMR0_DefaultInterruptHandler 0077                   __end_of_CCP1_CaptureISR 019A  
       CCP1_EvenCallBack@rising_edge_time 0070                           _TMR0_Initialize 0161  
                              _TMR2_Start 0205            __end_of_PIN_MANAGER_Initialize 01AB  
                   _TMR2_InterruptHandler 002A                          _TMR2_EvenHandler 01FD  
                         _TMR1_Initialize 014C  
